<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo魔改教程（一）</title>
      <link href="/2025/01/16/hexo-magic/"/>
      <url>/2025/01/16/hexo-magic/</url>
      
        <content type="html"><![CDATA[<div class="note blue icon-padding flat"><i class="note-icon fas fa-fan"></i><p>过了这么久，才想起做一个hexo的配置教程，因为帮很多人搭了很多遍，现在总结记录一下吧，也方便下次我复制代码<br>博客搭建与魔改系列教程导航🚥🚥🚥</p><ul><li><a href="/2024/11/11/hexo-install/">hexo基础教程（一）</a></li><li><a href="/2025/01/16/hexo-magic/">hexo魔改教程（一）</a></li></ul></div><h1 id="新年灯笼"><a href="#新年灯笼" class="headerlink" title="新年灯笼"></a>新年灯笼</h1><details class="folding-tag" blue><summary> 新年灯笼 </summary>              <div class='content'>              <p>在<code>source/js</code>中创建<code>denglong.js</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 创建并添加元素</span></span><br><span class="line"> <span class="keyword">function</span> <span class="title function_">createDengContainer</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    container.<span class="property">className</span> = <span class="string">&#x27;deng-container&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从当前脚本的 URL 获取参数</span></span><br><span class="line">    <span class="keyword">const</span> scriptSrc = <span class="variable language_">document</span>.<span class="property">currentScript</span>.<span class="property">src</span>;</span><br><span class="line">    <span class="keyword">const</span> urlParams = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(scriptSrc.<span class="title function_">split</span>(<span class="string">&#x27;?&#x27;</span>)[<span class="number">1</span>]); <span class="comment">// 获取 &#x27;?&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> customText = urlParams.<span class="title function_">get</span>(<span class="string">&#x27;text&#x27;</span>); <span class="comment">// 获取参数名为&#x27;text&#x27;的值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将获取的文本分割为字符数组，如果没有提供文本，则使用默认的“新年快乐”</span></span><br><span class="line">    <span class="keyword">const</span> texts = customText ? customText.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>) : [<span class="string">&#x27;新&#x27;</span>, <span class="string">&#x27;年&#x27;</span>, <span class="string">&#x27;快&#x27;</span>, <span class="string">&#x27;乐&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    texts.<span class="title function_">forEach</span>(<span class="function">(<span class="params">text, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        box.<span class="property">className</span> = <span class="string">`deng-box deng-box<span class="subst">$&#123;index + <span class="number">1</span>&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> deng = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        deng.<span class="property">className</span> = <span class="string">&#x27;deng&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> xian = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        xian.<span class="property">className</span> = <span class="string">&#x27;xian&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> dengA = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        dengA.<span class="property">className</span> = <span class="string">&#x27;deng-a&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> dengB = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        dengB.<span class="property">className</span> = <span class="string">&#x27;deng-b&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> dengT = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        dengT.<span class="property">className</span> = <span class="string">&#x27;deng-t&#x27;</span>;</span><br><span class="line">        dengT.<span class="property">textContent</span> = text;</span><br><span class="line"></span><br><span class="line">        dengB.<span class="title function_">appendChild</span>(dengT);</span><br><span class="line">        dengA.<span class="title function_">appendChild</span>(dengB);</span><br><span class="line">        deng.<span class="title function_">appendChild</span>(xian);</span><br><span class="line">        deng.<span class="title function_">appendChild</span>(dengA);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> shuiA = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        shuiA.<span class="property">className</span> = <span class="string">&#x27;shui shui-a&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> shuiC = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        shuiC.<span class="property">className</span> = <span class="string">&#x27;shui-c&#x27;</span>;</span><br><span class="line">        <span class="keyword">const</span> shuiB = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        shuiB.<span class="property">className</span> = <span class="string">&#x27;shui-b&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        shuiA.<span class="title function_">appendChild</span>(shuiC);</span><br><span class="line">        shuiA.<span class="title function_">appendChild</span>(shuiB);</span><br><span class="line">        deng.<span class="title function_">appendChild</span>(shuiA);</span><br><span class="line">        box.<span class="title function_">appendChild</span>(deng);</span><br><span class="line">        container.<span class="title function_">appendChild</span>(box);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(container);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加CSS样式</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addStyles</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> style = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;style&#x27;</span>);</span><br><span class="line">    style.<span class="property">type</span> = <span class="string">&#x27;text/css&#x27;</span>;</span><br><span class="line">    style.<span class="property">textContent</span> = <span class="string">`</span></span><br><span class="line"><span class="string">        .deng-container &#123;</span></span><br><span class="line"><span class="string">            position: relative;</span></span><br><span class="line"><span class="string">            top: 10px;</span></span><br><span class="line"><span class="string">            opacity: 0.9;</span></span><br><span class="line"><span class="string">            z-index: 9999;</span></span><br><span class="line"><span class="string">            pointer-events: none;</span></span><br><span class="line"><span class="string">            width: 100vw; /* 设置宽度为视口宽度 */</span></span><br><span class="line"><span class="string">            height: 100vh; /* 设置高度为视口高度 */</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .deng-box &#123;</span></span><br><span class="line"><span class="string">            position: fixed;</span></span><br><span class="line"><span class="string">            right: 10px;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .deng-box1 &#123; position: fixed; top: 15px; left: 20px; &#125;</span></span><br><span class="line"><span class="string">        .deng-box2 &#123; position: fixed; top: 12px; left: 130px; &#125;</span></span><br><span class="line"><span class="string">        .deng-box3 &#123; position: fixed; top: 10px; right: 110px; &#125;</span></span><br><span class="line"><span class="string">        .deng-box4 &#123; position: fixed; top: 15px; right: 20px; &#125;</span></span><br><span class="line"><span class="string">        .deng &#123;</span></span><br><span class="line"><span class="string">            position: relative;</span></span><br><span class="line"><span class="string">            width: 120px;</span></span><br><span class="line"><span class="string">            height: 90px;</span></span><br><span class="line"><span class="string">            background: rgba(216, 0, 15, .8);</span></span><br><span class="line"><span class="string">            border-radius: 50% 50%;</span></span><br><span class="line"><span class="string">            animation: swing 3s infinite ease-in-out;</span></span><br><span class="line"><span class="string">            box-shadow: -5px 5px 50px 4px #fa6c00;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .deng-a &#123; </span></span><br><span class="line"><span class="string">            width: 100px; </span></span><br><span class="line"><span class="string">            height: 90px; </span></span><br><span class="line"><span class="string">            background: rgba(216, 0, 15, .1); </span></span><br><span class="line"><span class="string">            border-radius: 50%;  </span></span><br><span class="line"><span class="string">            border: 2px solid #dc8f03; </span></span><br><span class="line"><span class="string">            margin-left: 7px; </span></span><br><span class="line"><span class="string">            display: flex; </span></span><br><span class="line"><span class="string">            justify-content: center; </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .deng-b &#123; </span></span><br><span class="line"><span class="string">            width: 65px; </span></span><br><span class="line"><span class="string">            height: 83px; </span></span><br><span class="line"><span class="string">            background: rgba(216, 0, 15, .1); </span></span><br><span class="line"><span class="string">            border-radius: 60%; </span></span><br><span class="line"><span class="string">            border: 2px solid #dc8f03; </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .xian &#123; </span></span><br><span class="line"><span class="string">            position: absolute; </span></span><br><span class="line"><span class="string">            top: -20px; </span></span><br><span class="line"><span class="string">            left: 60px; </span></span><br><span class="line"><span class="string">            width: 2px; </span></span><br><span class="line"><span class="string">            height: 20px; </span></span><br><span class="line"><span class="string">            background: #dc8f03; </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .shui-a &#123; </span></span><br><span class="line"><span class="string">            position: relative; </span></span><br><span class="line"><span class="string">            width: 5px; </span></span><br><span class="line"><span class="string">            height: 20px; </span></span><br><span class="line"><span class="string">            margin: -5px 0 0 59px; </span></span><br><span class="line"><span class="string">            animation: swing 4s infinite ease-in-out; </span></span><br><span class="line"><span class="string">            transform-origin: 50% -45px; </span></span><br><span class="line"><span class="string">            background: orange; </span></span><br><span class="line"><span class="string">            border-radius: 0 0 5px 5px; </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .shui-b &#123; </span></span><br><span class="line"><span class="string">            position: absolute; </span></span><br><span class="line"><span class="string">            top: 14px; </span></span><br><span class="line"><span class="string">            left: -2px; </span></span><br><span class="line"><span class="string">            width: 10px; </span></span><br><span class="line"><span class="string">            height: 10px; </span></span><br><span class="line"><span class="string">            background: #dc8f03; </span></span><br><span class="line"><span class="string">            border-radius: 50%; </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .shui-c &#123; </span></span><br><span class="line"><span class="string">            position: absolute; </span></span><br><span class="line"><span class="string">            top: 18px; </span></span><br><span class="line"><span class="string">            left: -2px; </span></span><br><span class="line"><span class="string">            width: 10px; </span></span><br><span class="line"><span class="string">            height: 35px; </span></span><br><span class="line"><span class="string">            background: orange; </span></span><br><span class="line"><span class="string">            border-radius: 0 0 0 5px; </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .deng:before, .deng:after &#123; </span></span><br><span class="line"><span class="string">            content: &quot; &quot;; </span></span><br><span class="line"><span class="string">            display: block; </span></span><br><span class="line"><span class="string">            position: absolute; </span></span><br><span class="line"><span class="string">            border-radius: 5px; </span></span><br><span class="line"><span class="string">            border: solid 1px #dc8f03; </span></span><br><span class="line"><span class="string">            background: linear-gradient(to right, #dc8f03, orange, #dc8f03, orange, #dc8f03); </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .deng:before &#123; </span></span><br><span class="line"><span class="string">            top: -7px; left: 29px; height: 12px; width: 60px; z-index: 999; </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .deng:after &#123; </span></span><br><span class="line"><span class="string">            bottom: -7px; left: 10px; height: 12px; width: 60px; margin-left: 20px; </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        .deng-t &#123; </span></span><br><span class="line"><span class="string">            font-family: &#x27;华文行楷&#x27;, Arial, Lucida Grande, Tahoma, sans-serif; </span></span><br><span class="line"><span class="string">            font-size: 3.2rem; </span></span><br><span class="line"><span class="string">            color: #dc8f03; </span></span><br><span class="line"><span class="string">            font-weight: 700; </span></span><br><span class="line"><span class="string">            line-height: 85px; </span></span><br><span class="line"><span class="string">            text-align: center; </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        @media (max-width: 768px) &#123; </span></span><br><span class="line"><span class="string">            .deng-t &#123; font-size: 2.5rem; &#125;  </span></span><br><span class="line"><span class="string">            .deng-box &#123; transform: scale(0.5); top: -15px; &#125;  </span></span><br><span class="line"><span class="string">            .deng-box1 &#123; left: -22%; &#125;  </span></span><br><span class="line"><span class="string">            .deng-box2 &#123; left: 0px; &#125;  </span></span><br><span class="line"><span class="string">            .deng-box3 &#123; right: 50px; &#125;  </span></span><br><span class="line"><span class="string">            .deng-box4 &#123; right: -10px; &#125;  </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        @keyframes swing &#123; </span></span><br><span class="line"><span class="string">            0% &#123; transform: rotate(-10deg); &#125;  </span></span><br><span class="line"><span class="string">            50% &#123; transform: rotate(10deg); &#125;  </span></span><br><span class="line"><span class="string">            100% &#123; transform: rotate(-10deg); &#125;  </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(style);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入时调用</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">addStyles</span>();</span><br><span class="line">    <span class="title function_">createDengContainer</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用初始化函数</span></span><br><span class="line"><span class="title function_">init</span>();</span><br></pre></td></tr></table></figure><br>在<code>_config.butterfly.yml</code>bottom里添加：（以后js或css引用都在inject处添加即可，后续不做演示）<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;/js/denglong.js&quot;&gt;&lt;/script&gt;</span> <span class="comment">#新春灯笼</span></span><br></pre></td></tr></table></figure></p>              </div>            </details><h1 id="自定义标题"><a href="#自定义标题" class="headerlink" title="自定义标题"></a>自定义标题</h1><details class="folding-tag" blue><summary> 自定义标题 </summary>              <div class='content'>              <p>站点动态title是通过js监测是否聚焦于当前页面，从而替换标签显示内容。</p><ul><li>在<code>[Blogroot]\themes\butterfly\source\js\</code>目录下新建<code>diytitle.js</code>，<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态标题</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">        <span class="comment">//离开当前页面时标签显示内容</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;w(ﾟДﾟ)w 不要走！再看看嘛！&#x27;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//返回当前页面时标签显示内容</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;♪(^∇^*)欢迎回来！&#x27;</span> + <span class="title class_">OriginTitile</span>;</span><br><span class="line">        <span class="comment">//两秒后变回正常标题</span></span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitile</span>;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>在<code>[Blogroot]\_config.butterfly.yml</code>的<code>inject</code>配置项添加引入,此处因为这是个独立的js，而且体量极小，所以可以添加<code>async</code>异步加载标签：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  <span class="attr">inject:</span></span><br><span class="line">    <span class="attr">head:</span></span><br><span class="line">      <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">    <span class="attr">bottom:</span></span><br><span class="line">      <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">+</span>     <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src=&quot;/js/diytitle.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025年度目标</title>
      <link href="/2025/01/01/2025-goal/"/>
      <url>/2025/01/01/2025-goal/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="afcc0d991145aa50f7b2e742c94e71e427f80a82ea3e9b1048641d5df7a70b33">7105125d490fa0f033f6c41d7eafb1d1625f2356e78448c37d10392017a004929a10e4e5dbbed50a5df3ab839f1b8c68edb58e817b658470c79f25a85d836e01cf3a8cf191119f290886c3c08fd7c0366bf284e1e6e4ae9cdb9a264f670a67bdd3a9f225cb4c13b3296e2bc15a26d3ad550210c2af7095ade62c6f1b671b461beb3caf9120587b60b84425932004cda551e51004ce2f0e5c331e840bfd4b23bc9f70991bd82de2f54fff591fd219ea4a7520f3720a0fddd3745daa3d47bafb1d5f6f1c4793d3b8f5f9ee4ec122eadc3e9eea0002c5927db5e9071a3f0139a74d08fa71beb863fc86b5007ca17cd93e569e6775c23e66f29b5214a470e7d8298fc94e25191ae61bd7baae6879838184b9a8d710246311e69f23996f5f7a1bc5910fbf58c7d0d5fb43836ccf520feafede4dca1ffc44f29c798047a1a0601379905c21635b4b9ff50ec7cc31a2f9b93cd78efc609c12b1d69d0d949d866aa10f02145cc008d05dd209ca0268b998d55915bf302ae00ba9e20ff7359911269bc0171afaed146d9b3d3577e0ddde376ee36ef1d023e7d3a60226bba9271462f592e9b1287c62567cf60d8321656873d23ed903122ba81067745da9c8f703dd99008eb127072d5d8f15797b5d212c8ae686ef87fa987288bb5d83ad0dec70b800bf636191b44edc3e8efa93388050f67b5895a1b30e6696b03a3ebe4e0ce3005767b31176a047fb856a0e069e9c097f1d233b1955feccebd3108648b7c6c6185cc0632557b11770299d218bc2e969492abd9ccd997bb9de414ac084faf4af04187c71bf4d12fb410ab5650fd96e9d45c1980da41d8f7d5f5f3a94d2856ba5ff06546cbe74378de8ce87bc6c2f767dbe43f7c2f104d5606c2452bce0cea5545be2d967a21c5087d6668a81ef6a936dd29345b04fa3a22d65dc6f121d0daf3ba95cff817e8be9a22ba4ec910ea152fee07e98668fa051533690cb9de4a4389363882c7f5e733ae7ff9649045a34be50317e3658083ed5ff93511430de1803a62102ae9086d80e800d95857b49c54a1004231953e876037b9587f5e5baa385071fc6a24a1f2a02c3b32e4187a50566a4a01c127cf7c30b84a1709c5ea0d072242cf85bcdd79158379691f52865cfd5aa1834cafa4e310d5576c6985f22770cb9d0645876634d6f4fbb12b2a77a40773c5808b1167eaab66572b6f4f87be97fe3c56da99335e3c30652209ec5b64ff260efe00ee2976a2b3c3b034bddd8574084e5434942d6fec2e556566f2dbaedfbe63c63691f413810b9d29d8434615eca616bd7bbce9e77fbd15c959956b90a27c1179b92ba63dc0a7b049e3f5b8de58b849ae60e92328e2cae0dc0ca9d104026d423b1119f63183ae360e0ec485e380def6f51d5c2199a764844500a716351febb53a1ffbc846896f3f31a84d55996970e13851508bed0c74c93a388cfec4fa4aaf181644862edb70b328e2dc6f079ef28f0136e5c6d3ecd5da6553e587fabfbb9eb90af394e5ac8753c83a0f44db07cb7a01aec4e6253c6b6e34b523a1dfd41e7d24062de4db47c28eabf6440835df8db5e66f5f36f5f0d1a1164e1bb92331f24961d13248eba5643efe1975a3d7bf5bb8b2404bfe6fe69bf4f813d783afe539620efce63b224b7a5da75af0dc0705404e5c1764283e4f70f7e41224a3d4641e637511100b48f844da612bee6e9dadc2b05fd1655b18d16253a2ab0bea8c13018d39f9e09b6a047e564e9b88c89fddfd46c071b4244a5ad42a78b73f64c7a530451ff2ff3895bffe6628ee2005dc70d5bd21d77e4bd12cdb8d2af05586e064b14303a513b267f4eece40f6b4f5501f45a7ac3f721a3aef6a7eac1b71309ef7f8e174d44979afec2add87df9e494e985a7e4b96a083f51e2d5cdfabc4900fea78fdc9998380bb6313cd11e380f4b99ac35fddc67a7a0d686b89a4fe9f1ad70fafcb42906d4a2f6d94bf433a6df0f448146766dea29a33fe7677d706355dbe7950b76dcb161c783b87d55f4ae01883702a6cf5a0e040546444ac7b60b3221067365b37c9ec0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 年度目标 </category>
          
          <category> 加密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密 </tag>
            
            <tag> 年度目标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ollama-install</title>
      <link href="/2024/12/02/ollama-install/"/>
      <url>/2024/12/02/ollama-install/</url>
      
        <content type="html"><![CDATA[<h1 id="一、ollama安装"><a href="#一、ollama安装" class="headerlink" title="一、ollama安装"></a>一、ollama安装</h1><p>可以在ollama官网直接下载：<a href="https://ollama.com/download">https://ollama.com/download</a><br>也可以在项目仓库中下载：<a href="https://github.com/ollama/ollama">https://github.com/ollama/ollama</a><br>下载后双击安装包进行安装，默认安装至C盘，如果C盘内存不够，我们需要修改环境变量，使得大模型能够放在别的盘。</p><p>可参考教程<a href="https://blog.csdn.net/scj0725/article/details/138087028">ollama在windows系统上安装总结以及注意事项</a>、<a href="https://blog.csdn.net/qq_53795212/article/details/139690567">Ollama+Open WebUI本地部署Llama3 8b（附踩坑细节）</a></p><h2 id="1-1-修改环境变量"><a href="#1-1-修改环境变量" class="headerlink" title="1.1 修改环境变量"></a>1.1 修改环境变量</h2><p>在系统变量中添加一个名为：OLLAMA_MODELS的变量名，路径选择一个合适的位置。<br><a href="https://i-blog.csdnimg.cn/blog_migrate/6091d24315aba96a96c1bf5ab7bdb27e.png">ollama-install-1</a><br>设置好路径之后，一定要重新启动重启，才能生效。</p><h2 id="1-2-拉取大模型"><a href="#1-2-拉取大模型" class="headerlink" title="1.2 拉取大模型"></a>1.2 拉取大模型</h2><p>接下来就是拉去大模型，打开官网可以看到从ollama可以直接拉取的大模型：<br><a href="https://i-blog.csdnimg.cn/blog_migrate/68a650f133fb1ef1d0f4a7665fb2e07b.png">ollama-install-2</a><br>例如我选择的是<a href="https://ollama.com/library/qwen2.5-coder">qwen2.5-coder</a>点进去之后，也可以选择版本.<br>然后拉去这个大模型的话，直接复制右边的命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run qwen2.5-coder</span><br></pre></td></tr></table></figure><br>等待下载完成进入ollama的命令行界面，即可正常运行。<br>一定要注意，自己的电脑配置是否适合模型的大小。<br><code>注意：您应该至少有 8 GB 可用 RAM 来运行 7B 型号，16 GB 来运行 13B 型号，32 GB 来运行 33B 型号。</code><br>还可以安装一些web和桌面程序来交互大模型，例如<a href="https://docs.openwebui.com/">open-webui</a></p><h2 id="1-3-安装open-webui"><a href="#1-3-安装open-webui" class="headerlink" title="1.3 安装open-webui"></a>1.3 安装open-webui</h2><p>根据官网文档<a href="https://docs.openwebui.com/">https://docs.openwebui.com/</a>中提示可知，如果使用pip来安装的话，需要python版本为3.11。<br>docker安装自行查看官网文档或上面的参考教程即可。<br>这里我们以pip安装为例，可以安装python3.11版本后使用，如果你有anaconda环境的话，也可以新建一个虚拟环境来安装。<br><code>如果不需要虚拟环境，已经是3.11版本python的话，可跳过此步。</code></p><h3 id="1-3-1、anaconda和Visual-Studio安装"><a href="#1-3-1、anaconda和Visual-Studio安装" class="headerlink" title="1.3.1、anaconda和Visual Studio安装"></a>1.3.1、anaconda和Visual Studio安装</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><a href="https://www.anaconda.com/products/distribution">下载链接：https://www.anaconda.com/products/distribution</a></p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>双击运行，一直下一步即可。（如不想安装在C盘，自行选择目录即可）<br><code>注意一定要选择添加进PATH，不然终端无法运行</code></p><h4 id="Visual-Studio安装"><a href="#Visual-Studio安装" class="headerlink" title="Visual Studio安装"></a>Visual Studio安装</h4><p><a href="https://visualstudio.microsoft.com/zh-hans/">下载链接：https://visualstudio.microsoft.com/zh-hans/</a></p><h3 id="anaconda新建环境"><a href="#anaconda新建环境" class="headerlink" title="anaconda新建环境"></a>anaconda新建环境</h3><p>终端输入以下命令，代表用python3.11版本新建一个名为ollama的环境<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n ollama python=3.11</span><br></pre></td></tr></table></figure></p><h3 id="1-3-2-激活ollama环境"><a href="#1-3-2-激活ollama环境" class="headerlink" title="1.3.2 激活ollama环境"></a>1.3.2 激活ollama环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate ollama</span><br></pre></td></tr></table></figure><p>进入环境以后就可以继续安装open-webui了。</p><h3 id="1-3-3安装open-webui"><a href="#1-3-3安装open-webui" class="headerlink" title="1.3.3安装open-webui"></a>1.3.3安装open-webui</h3><p><code>如果本身是python3.11版本的话，可以直接使用pip安装(从上面跳的步骤到这里继续)。</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install open-webui</span><br></pre></td></tr></table></figure></p><h3 id="1-3-4启动open-webui"><a href="#1-3-4启动open-webui" class="headerlink" title="1.3.4启动open-webui"></a>1.3.4启动open-webui</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open-webui serve</span><br></pre></td></tr></table></figure><h3 id="1-3-5访问open-webui"><a href="#1-3-5访问open-webui" class="headerlink" title="1.3.5访问open-webui"></a>1.3.5访问open-webui</h3><p>做完以上步骤我们就可以在 <a href="http://localhost:8080">http://localhost:8080</a> 访问open-webui了。 Enjoy! 😄</p><h2 id="1-4-ollama-帮助"><a href="#1-4-ollama-帮助" class="headerlink" title="1.4 ollama 帮助"></a>1.4 ollama 帮助</h2><p>Usage:<br>  ollama [flags]<br>  ollama [command]</p><p>Available Commands:<br>  serve       Start ollama<br>  create      Create a model from a Modelfile<br>  show        Show information for a model<br>  run         Run a model<br>  stop        Stop a running model<br>  pull        Pull a model from a registry<br>  push        Push a model to a registry<br>  list        List models<br>  ps          List running models<br>  cp          Copy a model<br>  rm          Remove a model<br>  help        Help about any command</p><p>Flags:<br>  -h, —help      help for ollama<br>  -v, —version   Show version information</p><p>Use “ollama [command] —help” for more information about a command.</p><h2 id="1-5-使用ollama-api-来输入并获取输出"><a href="#1-5-使用ollama-api-来输入并获取输出" class="headerlink" title="1.5 使用ollama api 来输入并获取输出"></a>1.5 使用ollama api 来输入并获取输出</h2><p>官方api文档可见：<a href="https://github.com/ollama/ollama/blob/main/docs/api.md">ollama-api</a><br>找了好久，基本找不到合适的代码，但终于找到可能能用的JAVA代码，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">askLocalQwen2Model</span><span class="params">(String prompt)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">urlString</span> <span class="operator">=</span> <span class="string">&quot;http://localhost:11434/api/generate&quot;</span>;</span><br><span class="line">    <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(urlString);</span><br><span class="line">    <span class="type">HttpURLConnection</span> <span class="variable">conn</span> <span class="operator">=</span> (HttpURLConnection) url.openConnection();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置请求方法为POST</span></span><br><span class="line">    conn.setRequestMethod(<span class="string">&quot;POST&quot;</span>);</span><br><span class="line">    conn.setRequestProperty(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json; utf-8&quot;</span>);</span><br><span class="line">    conn.setRequestProperty(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">    conn.setDoOutput(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建要发送的JSON对象</span></span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonInput</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    jsonInput.put(<span class="string">&quot;model&quot;</span>, <span class="string">&quot;qwen2&quot;</span>);</span><br><span class="line">    jsonInput.put(<span class="string">&quot;prompt&quot;</span>, prompt);</span><br><span class="line">    jsonInput.put(<span class="string">&quot;stream&quot;</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将JSON输入写入请求的输出流</span></span><br><span class="line">    <span class="keyword">try</span> (<span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> conn.getOutputStream()) &#123;</span><br><span class="line">        <span class="type">byte</span>[] input = jsonInput.toString().getBytes(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        os.write(input, <span class="number">0</span>, input.length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取响应内容</span></span><br><span class="line">    <span class="keyword">try</span> (<span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(conn.getInputStream(), <span class="string">&quot;utf-8&quot;</span>))) &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">response</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        String responseLine;</span><br><span class="line">        <span class="keyword">while</span> ((responseLine = br.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">            response.append(responseLine.trim());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解析JSON响应并提取response字段</span></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonResponse</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>(response.toString());</span><br><span class="line">        <span class="keyword">return</span> jsonResponse.getString(<span class="string">&quot;response&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>因此，我们用python来写，实现相应的功能代码示例如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">askLocalQwen2Model</span>(<span class="params">prompt</span>):</span><br><span class="line">    url = <span class="string">&quot;http://localhost:11434/api/generate&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建要发送的JSON对象</span></span><br><span class="line">    json_input = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: <span class="string">&quot;qwen2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;prompt&quot;</span>: prompt,</span><br><span class="line">        <span class="string">&quot;stream&quot;</span>: <span class="literal">False</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 发送POST请求</span></span><br><span class="line">        response = requests.post(url, headers=&#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;, data=json.dumps(json_input))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 检查响应状态码</span></span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="comment"># 解析JSON响应并提取response字段</span></span><br><span class="line">            json_response = response.json()</span><br><span class="line">            <span class="keyword">return</span> json_response.get(<span class="string">&quot;response&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Failed to get response from Qwen2 model. Status code: <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;An error occurred: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例调用</span></span><br><span class="line">prompt = <span class="string">&quot;Here is an article about llamas...&quot;</span></span><br><span class="line">result = askLocalQwen2Model(prompt)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><br>经过以上步骤，在<code>prompt = &quot;Here is an article about llamas...</code>等于号后面输入内容，我们就可以得到<code>Qwen2</code>模型生成的回答了。<br>目前api已经基本实现。后续有什么需要修改的可以自行魔改。</p>]]></content>
      
      
      <categories>
          
          <category> GXNU </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> AI </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo基础教程（一）</title>
      <link href="/2024/11/11/hexo-install/"/>
      <url>/2024/11/11/hexo-install/</url>
      
        <content type="html"><![CDATA[<div class="note blue icon-padding flat"><i class="note-icon fas fa-fan"></i><p>过了这么久，才想起做一个hexo的配置教程，因为帮很多人搭了很多遍，现在总结记录一下吧，也方便下次我复制代码<br>本文参考<a href="https://www.fomal.cc/posts/e593433d.html">猕猴桃</a>大佬的文章，在基础上补充以及修改。<br>博客搭建与魔改系列教程导航🚥🚥🚥</p><ul><li><a href="/2024/11/11/hexo-install/">hexo基础教程（一）</a></li><li><a href="/2025/01/16/hexo-magic/">hexo魔改教程（一）</a></li></ul></div><h1 id="1-环境与工具准备"><a href="#1-环境与工具准备" class="headerlink" title="1.环境与工具准备"></a>1.环境与工具准备</h1><p>本教程主要面对的是Windows用户</p><ul><li>操作系统：Windows10</li><li>Node</li><li>Git</li><li>Hexo</li><li>文本编辑器(强烈推荐VSCODE)</li><li>GitHub 帐号</li><li>一个域名（强烈推荐买个域名）</li><li>云服务器（可选）<h1 id="2-Node安装"><a href="#2-Node安装" class="headerlink" title="2.Node安装"></a>2.Node安装</h1></li></ul><ol><li>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></li><li>下载后安装，安装的目录可以使用默认目录【D:/Program Files/nodejs/】，也可以自定义路径。</li><li>这个环境路径切换坑也很多，如果大家C盘空间足够可以直接装C盘，如果想切换其他盘或者把环境遍历切换到自定义路径也可以，具体教程百度(不过坑比较多就是了)!</li><li>安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明安装成功。</li><li>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成淘宝镜像。打开CMD窗口，运行如下命令:<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>不过经过我的测试我觉得换成下面的国内告高速镜像源也不错<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>想要还原默认源的话，执行如下命令：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure><h1 id="3-Hexo安装"><a href="#3-Hexo安装" class="headerlink" title="3.Hexo安装"></a>3.Hexo安装</h1></li><li>在<code>Git BASH</code>输入如下命令安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li>安装完后输入hexo -v验证是否安装成功。</li><li>这里方便一次性安装和初始化，我们直接使用这个命令即可<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="4-Github注册与创建仓库"><a href="#4-Github注册与创建仓库" class="headerlink" title="4.Github注册与创建仓库"></a>4.Github注册与创建仓库</h1></li><li>进入官网 <a href="https://github.com/">https://github.com/</a><br><img src="https://bu.dusays.com/2022/05/12/627d2c0449341.webp" alt="Github注册"><br>点击右上角的 Sign up(注册)<br><img src="https://bu.dusays.com/2022/05/12/627d2c05ee628.png" alt="Github注册"></li><li>填写自己的邮箱、密码、用户名等信息，然后用邮箱验证即可完成。</li><li>注册完成后，点击右上角的<code>+</code>按钮，选择<code>New repository</code>，创建一个<code>&lt;用户名&gt;.github.io</code>的仓库。<br><code>注意：</code></li></ol><ul><li>仓库的格式必须为：<code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，不要等后面404了再来为什么！！！)</li><li>Description：为描述仓库（选填）</li><li>勾选 Initialize this repository with a README 初始化一个 README.md 文件</li><li>点击 Creat repository 进行创建<h1 id="5-Git安装"><a href="#5-Git安装" class="headerlink" title="5. Git安装"></a>5. Git安装</h1></li></ul><ol><li>进入官网：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> ，由于官网下载太慢可以通过淘宝的开源镜像下载 网址：<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/">https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/</a> ，下载版本更具自己的需求选择即可。</li><li>下载后傻瓜式安装Git即可，安装的目录可以使用默认目录【D:/Program Files/Git】，也可以自定义路径。<br><img src="https://bu.dusays.com/2022/05/13/627d410ddc940.webp" alt="Git安装"></li><li>点击电脑左下角开始即可看见<code>Git Bash</code>。<br><code>Git CMD</code> 是windows命令行的指令风格<br><code>Git Bash</code> 是linux系统的指令风格（建议使用）<br><code>Git GUI</code>是图形化界面（新手学习不建议使用）</li><li>常用命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure></li><li>配置用户名和邮箱<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure>通过<code>git config -l</code> 检查是否配置成功，至此git安装及配置全部完成。<h1 id="6-连接至Github"><a href="#6-连接至Github" class="headerlink" title="6.连接至Github"></a>6.连接至Github</h1></li><li>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure>之后打开C盘下用户文件夹下的<code>.ssh</code>的文件夹，会看到 <code>id_rsa.pub</code><br><img src="https://bu.dusays.com/2022/05/14/627e87126fc59.png" alt="公钥"><br>用记事本打开上述图片中的公钥（id_rsa.pub），复制里面的内容，然后开始在github中配置ssh密钥。<br><img src="https://bu.dusays.com/2022/05/14/627e87156038a.png" alt="公钥"></li><li>将 SSH KEY 配置到 GitHub<br>进入github，点击右上角头像 选择<code>settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥填到<code>Key</code>那一栏。</li><li>测试连接<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>如果出现<code>Hi XXX! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>，则说明连接成功，至此完成了环境准备工作。<br>如果出现<code>ssh: connect to host github.com port 22: Connection timed out</code>，则说明连接失败，需要检查网络连接。<br>如果出现<code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code>，输入<code>yes</code>即可。<h1 id="7-初始化-Hexo-项目"><a href="#7-初始化-Hexo-项目" class="headerlink" title="7.初始化 Hexo 项目"></a>7.初始化 Hexo 项目</h1></li></ol><ul><li></li></ul><ol><li>在目标路径（我这里选的路径为【D:/hexo】）打开cmd命令窗口，执行<code>hexo init</code>初始化项目。<br><code>魔改后不要输入hexo init，否则会重置</code><br><code>如果第三步安装hexo时你已经做过这个步骤，不需要做此步了，跳到第3点去看即可</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog(项目名)</span><br></pre></td></tr></table></figure></li><li>进入<code>blog</code> ，输入<code>npm i</code>安装相关依赖。<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog  //进入blog文件夹</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure>初始化项目后，<code>blog</code>有如下结构：</li></ol><ul><li>【node_modules】：依赖包</li><li>【scaffolds】：生成文章的一些模板</li><li>【source】：用来存放你的文章</li><li>【themes】：主题</li><li>【.npmignore】：发布时忽略的文件（可忽略）</li><li>【_config.landscape.yml】：主题的配置文件</li><li>【config.yml】：博客的配置文件</li><li>【package.json】：项目名称、描述、版本、运行和开发等信息</li></ul><ol><li>输入<code>hexo server</code>或者<code>hexo s</code>启动项目</li><li>打开浏览器，输入地址：<code>http://localhost:4000/</code> ，看到下面的效果，说明你的博客已经构建成功了。<br><img src="https://bu.dusays.com/2022/05/26/628e5423df640.webp" alt="成功"><h1 id="8-将静态博客挂载到-GitHub-Pages"><a href="#8-将静态博客挂载到-GitHub-Pages" class="headerlink" title="8.将静态博客挂载到 GitHub Pages"></a>8.将静态博客挂载到 GitHub Pages</h1></li><li>安装 <code>hexo-deployer-git</code>上传插件<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>修改 _config.yml 文件<br>在blog目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）。<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。<br>Git BASH终端<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>vscode终端<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean; hexo generate; hexo deploy</span><br></pre></td></tr></table></figure></li></ol><ul><li>hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。可以用<code>hexo cl</code>缩写</li><li>hexo generate：生成静态文章，可以用<code>hexo g</code>缩写</li><li>hexo deploy：部署文章，可以用<code>hexo d</code>缩写<div class="tip warning faa-horizontal animated"><p>注意：deploy时可能要你输入 username 和 password。</p></div>如果出现<code>Deploy done</code>，则说明部署成功了。<br>稍等两分钟，打开浏览器访问：<code>https://用户名.github.io</code> ，这时候我们就可以看到博客内容了。<h1 id="9-无法连接至Github的解决方案"><a href="#9-无法连接至Github的解决方案" class="headerlink" title="9.无法连接至Github的解决方案"></a>9.无法连接至Github的解决方案</h1><div class="note info flat"><p>注意：当你在与Github进行ssh通信时候出现超时或者是连接被关闭的情况，可以尝试以下解决方案。</p></div></li></ul><ol><li>挂代理和换网络（这个就不用多说了）</li><li><a href="https://blog.csdn.net/weixin_41287260/article/details/124368189">Git问题：解决“ssh:connect to host github.com port 22: Connection timed out”</a><br>这是评论区的朋友提供的，可以解决SSH连接超时等问题</li><li>开源项目<a href="https://github.com/521xueweihan/GitHub520">Github520</a><br>通过修改Host文件的方法解决访问速度慢的问题</li></ol><p>连接有效性检验：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 任选其一即可</span></span><br><span class="line">ping github.com</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><h1 id="10-安装主题"><a href="#10-安装主题" class="headerlink" title="10.安装主题"></a>10.安装主题</h1><p>本教程用的 🦋 hexo-theme-butterfly 主题 v4.13.0</p><p>本教程用的是npm方式安装的 <code>hexo-theme-butterfly</code>，后续魔改时更改的文件都是【D:/hexo/blog/node_modules/hexo-theme-butterfly】文件夹中的文件。如果你是git clone克隆方式安装的主题，请在【D:/hexo/blog/themes/butterfly】文件夹下修改对应的文件。<br><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">npm安装（推荐）</button><button type="button" class="tab " data-href="test1-2">Github安装</button><button type="button" class="tab " data-href="test1-3">Gitee安装</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p>注意：此方法只支持 Hexo 5.0.0以上版本!<br>在你的博客根目录（我这里路径为【D:/hexo/blog】）打开<code>Git BASH</code>命令窗口执行<code>npm i hexo-theme-butterfly</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><br>安装成功后可在【D:/hexo/blog/node_modules】文件夹下找到hexo-theme-butterfly文件夹</p><div class="note info modern"><p>升级方法：在博客根目录下，运行 <code>npm update hexo-theme-butterfly</code>。<br>升级前请将<code>hexo-theme-butterfly</code>文件夹备份，npm更新会直接覆盖成新的包。</p></div></div><div class="tab-item-content" id="test1-2"><p>在你的博客根目录里（我这里路径为【D:/hexo/blog】），打开<code>Git BASH</code>工具，执行命令即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b 4.5.0 https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>安装成功后可在【D:/hexo/blog/themes】文件夹下找到<code>butterfly</code>文件夹，可以将<code>landscape</code>文件夹删掉。</p><div class="note info modern"><p>升级方法：在主题目录下，运行<code>git pull</code>。</p></div></div><div class="tab-item-content" id="test1-3"><p>在你的博客根目录里（我这里路径为【D:/hexo/blog】），打开<code>Git BASH</code>工具，执行命令即可。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b 4.5.0 https://gitee.com/iamjerryw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure></p><div class="note info modern"><p>升级方法：在主题目录下，运行<code>git pull</code>。</p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></p><h1 id="11-应用主题"><a href="#11-应用主题" class="headerlink" title="11.应用主题"></a>11.应用主题</h1><ol><li>修改站点配置文件<code>_config.yml</code>，把主题改为<code>butterfly</code><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure></li><li>如果你没有<code>pug</code>以及<code>stylus</code>的渲染器，请下载安装，这两个渲染器是<code>Butterfly</code>生成基础页面所需的依赖包：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>为了减少升级主题后带来的不便，请使用以下方法（建议，可以不做，高度魔改的一般都不会升级主题了，不然魔改的会被覆盖掉）</li></ol><p>把主题文件夹中的 <code>_config.yml</code> 复制到 <code>Hexo</code> 根目录里（我这里路径为【D:/hexo/blog】），同时重新命名为 <code>_config.butterfly.yml</code>。以后只需要在 <code>_config.butterfly.yml</code>进行配置即可生效。Hexo会自动合併主题中的<code>_config.yml</code>和<code>_config.butterfly.yml</code>里的配置，如果存在同名配置，会使用<code>_config.butterfly.yml</code>的配置，其优先度较高。</p><h1 id="12-快速安装汇总代码"><a href="#12-快速安装汇总代码" class="headerlink" title="12.快速安装汇总代码"></a>12.快速安装汇总代码</h1><p>确保Nodejs/Git环境已经安装好，然后打开<code>Git BASH</code>工具或者cmd，执行以下命令安装hexo：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>安装主题及渲染器、deploy插件、word-count插件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><br>下载插件（可选）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure></p><h1 id="13-解决问题"><a href="#13-解决问题" class="headerlink" title="13.解决问题"></a>13.解决问题</h1><p>npm国内速度慢<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><br>如果是终端安装，提示不能运行npm脚本<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">. : 无法加载文件 C:\Users\用户名\Documents\WindowsPowerShell\profile.ps1</span><br><span class="line">因为在此系统上禁止运行脚本。有关详细信息，请参阅</span><br></pre></td></tr></table></figure><br>使用下述命令允许所有脚本运行即可<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure></p><h1 id="配置文件复制"><a href="#配置文件复制" class="headerlink" title="配置文件复制"></a>配置文件复制</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Hexo Butterfly Theme Configuration</span></span><br><span class="line"><span class="comment"># If you have any questions, please refer to the documentation</span></span><br><span class="line"><span class="comment"># Chinese: https://butterfly.js.org/</span></span><br><span class="line"><span class="comment"># English: https://butterfly.js.org/en/</span></span><br><span class="line"><span class="comment"># version:5.4.3 update:20250827</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Navigation Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="comment"># Navigation bar logo image</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="comment">##logo图片</span></span><br><span class="line">  <span class="attr">display_title:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">display_post_title:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Whether to fix navigation bar</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span> <span class="comment">##菜单</span></span><br><span class="line">  <span class="comment"># Home: / || fas fa-home</span></span><br><span class="line">  <span class="comment"># List||fas fa-list:</span></span><br><span class="line">  <span class="comment">#   Music: /music/ || fas fa-music</span></span><br><span class="line">  <span class="comment">#   Movie: /movies/ || fas fa-video</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Code Blocks Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">code_blocks:</span></span><br><span class="line">  <span class="comment"># Code block theme: darker / pale night / light / ocean / false</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">light</span> <span class="comment">##代码框主题颜色</span></span><br><span class="line">  <span class="attr">macStyle:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Code block height limit (unit: px)</span></span><br><span class="line">  <span class="attr">height_limit:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">word_wrap:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Toolbar</span></span><br><span class="line">  <span class="attr">copy:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># true: shrink the code blocks | false: expand the code blocks | none: expand code blocks and hide the button</span></span><br><span class="line">  <span class="attr">shrink:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">fullpage:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Social media links</span></span><br><span class="line"><span class="comment"># Formal:</span></span><br><span class="line"><span class="comment">#   icon: link || the description || color</span></span><br><span class="line"><span class="attr">social:</span> <span class="comment">##社交</span></span><br><span class="line">  <span class="comment"># fab fa-github: https://github.com/xxxxx || Github || &#x27;#24292e&#x27; </span></span><br><span class="line">  <span class="comment"># fas fa-envelope: mailto:xxxxxx@gmail.com || Email || &#x27;#4a7dbe&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Image Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/img/favicon.png</span> <span class="comment">##网站图标</span></span><br><span class="line"></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/img/butterfly-icon.png</span> <span class="comment">##头像</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">false</span> <span class="comment">##true会一直旋转</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable all banner images</span></span><br><span class="line"><span class="attr">disable_top_img:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If the banner of page not setting, it will show the default_top_img</span></span><br><span class="line"><span class="attr">default_top_img:</span> <span class="comment">##默认顶图</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of index page</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="comment">##默认主页图</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of archive page</span></span><br><span class="line"><span class="attr">archive_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">Note:</span> tag page, not tags page</span></span><br><span class="line"><span class="attr">tag_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of tag page, you can set the banner image for each tag</span></span><br><span class="line"><span class="comment"># Format:</span></span><br><span class="line"><span class="comment">#  - tag name: xxxxx</span></span><br><span class="line"><span class="attr">tag_per_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">Note:</span> category page, not categories page</span></span><br><span class="line"><span class="attr">category_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of category page, you can set the banner image for each category</span></span><br><span class="line"><span class="comment"># Format:</span></span><br><span class="line"><span class="comment">#  - category name: xxxxx</span></span><br><span class="line"><span class="attr">category_per_img:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The background image of footer</span></span><br><span class="line"><span class="attr">footer_img:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Website Background</span></span><br><span class="line"><span class="comment"># Can set it to color or image url</span></span><br><span class="line"><span class="attr">background:</span> <span class="comment">##网站背景</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="comment"># Disable the cover or not</span></span><br><span class="line">  <span class="attr">index_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">aside_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">archives_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># When cover is not set, the default cover is displayed</span></span><br><span class="line">  <span class="attr">default_cover:</span></span><br><span class="line">    <span class="comment"># - xxx.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Replace Broken Images</span></span><br><span class="line"><span class="attr">error_img:</span></span><br><span class="line">  <span class="attr">flink:</span> <span class="string">/img/friend_404.gif</span></span><br><span class="line">  <span class="attr">post_page:</span> <span class="string">/img/404.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A simple 404 page</span></span><br><span class="line"><span class="attr">error_404:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">&#x27;Page Not Found&#x27;</span></span><br><span class="line">  <span class="attr">background:</span> <span class="string">/img/error-page.png</span></span><br><span class="line"></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="comment"># Home Page</span></span><br><span class="line">  <span class="attr">page:</span></span><br><span class="line">    <span class="comment"># Choose: created / updated / both</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">created</span></span><br><span class="line">    <span class="comment"># Choose: date / relative</span></span><br><span class="line">    <span class="attr">date_format:</span> <span class="string">date</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">label:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post:</span></span><br><span class="line">    <span class="comment"># Choose: left / center</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">    <span class="comment"># Choose: created / updated / both</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">both</span></span><br><span class="line">    <span class="comment"># Choose: date / relative</span></span><br><span class="line">    <span class="attr">date_format:</span> <span class="string">date</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">label:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Index page settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The top_img settings of home page</span></span><br><span class="line"><span class="comment"># default: top img - full screen, site info - middle</span></span><br><span class="line"><span class="comment"># The position of site info, eg: 300px/300em/300rem/10%</span></span><br><span class="line"><span class="attr">index_site_info_top:</span></span><br><span class="line"><span class="comment"># The height of top_img, eg: 300px/300em/300rem</span></span><br><span class="line"><span class="attr">index_top_img_height:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The subtitle on homepage</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="comment">##副标题</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Typewriter Effect</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Customize typed.js</span></span><br><span class="line">  <span class="comment"># https://github.com/mattboldt/typed.js/#customization</span></span><br><span class="line">  <span class="attr">typed_option:</span></span><br><span class="line">  <span class="comment"># Source - Call the third-party service API (Chinese only)</span></span><br><span class="line">  <span class="comment"># It will show the source first, then show the content of sub</span></span><br><span class="line">  <span class="comment"># Choose: false/1/2/3</span></span><br><span class="line">  <span class="comment"># false - disable the function</span></span><br><span class="line">  <span class="comment"># 1 - hitokoto.cn</span></span><br><span class="line">  <span class="comment"># 2 - https://api.aa1.cn/doc/yiyan.html</span></span><br><span class="line">  <span class="comment"># 3 - jinrishici.com</span></span><br><span class="line">  <span class="attr">source:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If you close the typewriter effect, the subtitle will only show the first line of sub</span></span><br><span class="line">  <span class="attr">sub:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;欢迎来到我的博客！~&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Article layout on the homepage</span></span><br><span class="line"><span class="comment"># 1: Cover on the left, info on the right</span></span><br><span class="line"><span class="comment"># 2: Cover on the right, info on the left</span></span><br><span class="line"><span class="comment"># 3: Cover and info alternate between left and right</span></span><br><span class="line"><span class="comment"># 4: Cover on top, info on the bottom</span></span><br><span class="line"><span class="comment"># 5: Info displayed on the cover</span></span><br><span class="line"><span class="comment"># 6: Masonry layout - Cover on top, info on the bottom</span></span><br><span class="line"><span class="comment"># 7: Masonry layout - Info displayed on the cover</span></span><br><span class="line"><span class="attr">index_layout:</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Display the article introduction on homepage</span></span><br><span class="line"><span class="comment"># 1: description</span></span><br><span class="line"><span class="comment"># 2: both (if the description exists, it will show description, or show the auto_excerpt)</span></span><br><span class="line"><span class="comment"># 3: auto_excerpt (default)</span></span><br><span class="line"><span class="comment"># false: do not show the article introduction</span></span><br><span class="line"><span class="attr">index_post_content:</span></span><br><span class="line">  <span class="attr">method:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># If you set method to 2 or 3, the length need to config</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Post Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">expand:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Only for post</span></span><br><span class="line">  <span class="attr">style_simple:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">scroll_percent:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">decode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">author_href:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sponsor/reward</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">text:</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="comment"># - img: /img/wechat.jpg</span></span><br><span class="line">    <span class="comment">#   link:</span></span><br><span class="line">    <span class="comment">#   text: wechat</span></span><br><span class="line">    <span class="comment"># - img: /img/alipay.jpg</span></span><br><span class="line">    <span class="comment">#   link:</span></span><br><span class="line">    <span class="comment">#   text: alipay</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post edit</span></span><br><span class="line"><span class="comment"># Easily browse and edit blog source code online.</span></span><br><span class="line"><span class="attr">post_edit:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># url: https://github.com/user-name/repo-name/edit/branch-name/subdirectory-name/</span></span><br><span class="line">  <span class="comment"># For example: https://github.com/jerryc127/butterfly.js.org/edit/main/source/</span></span><br><span class="line">  <span class="attr">url:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Related Articles</span></span><br><span class="line"><span class="attr">related_post:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Number of posts displayed</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span></span><br><span class="line">  <span class="comment"># Choose: created / updated</span></span><br><span class="line">  <span class="attr">date_type:</span> <span class="string">created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Choose: 1 / 2 / false</span></span><br><span class="line"><span class="comment"># 1: The &#x27;next post&#x27; will link to old post</span></span><br><span class="line"><span class="comment"># 2: The &#x27;next post&#x27; will link to new post</span></span><br><span class="line"><span class="comment"># false: disable pagination</span></span><br><span class="line"><span class="attr">post_pagination:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Displays outdated notice for a post</span></span><br><span class="line"><span class="attr">noticeOutdate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Style: simple / flat</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span></span><br><span class="line">  <span class="comment"># When will it be shown</span></span><br><span class="line">  <span class="attr">limit_day:</span> <span class="number">365</span></span><br><span class="line">  <span class="comment"># Position: top / bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">message_prev:</span> <span class="string">It</span> <span class="string">has</span> <span class="string">been</span></span><br><span class="line">  <span class="attr">message_next:</span> <span class="string">days</span> <span class="string">since</span> <span class="string">the</span> <span class="string">last</span> <span class="string">update,</span> <span class="string">the</span> <span class="string">content</span> <span class="string">of</span> <span class="string">the</span> <span class="string">article</span> <span class="string">may</span> <span class="string">be</span> <span class="string">outdated.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Footer Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">nav:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">since:</span> <span class="number">2025</span></span><br><span class="line">  <span class="comment"># Copyright of theme and framework</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">version:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">custom_text:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Aside Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Show the button to hide the aside in bottom right button</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Position: left / right</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">archive:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tag:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">category:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_author:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">description:</span></span><br><span class="line">    <span class="attr">button:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">Follow</span> <span class="string">Me</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://github.com/xxxxxx</span></span><br><span class="line">  <span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">my</span> <span class="string">Blog</span></span><br><span class="line">  <span class="attr">card_recent_post:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># If set 0 will show all</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">5</span></span><br><span class="line">    <span class="comment"># Sort: date / updated</span></span><br><span class="line">    <span class="attr">sort:</span> <span class="string">date</span></span><br><span class="line">    <span class="attr">sort_order:</span></span><br><span class="line">  <span class="attr">card_newest_comments:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">sort_order:</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">6</span></span><br><span class="line">    <span class="comment"># Unit: mins, save data to localStorage</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">avatar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_categories:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># If set 0 will show all</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span></span><br><span class="line">    <span class="comment"># Choose: none / true / false</span></span><br><span class="line">    <span class="attr">expand:</span> <span class="string">none</span></span><br><span class="line">    <span class="attr">sort_order:</span></span><br><span class="line">  <span class="attr">card_tags:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># If set 0 will show all</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">40</span></span><br><span class="line">    <span class="attr">color:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Order of tags, random/name/length</span></span><br><span class="line">    <span class="attr">orderby:</span> <span class="string">random</span></span><br><span class="line">    <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">sort_order:</span></span><br><span class="line">  <span class="attr">card_archives:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Type: monthly / yearly</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">monthly</span></span><br><span class="line">    <span class="comment"># Eg: YYYY年MM月</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">MMMM</span> <span class="string">YYYY</span></span><br><span class="line">    <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span></span><br><span class="line">    <span class="comment"># If set 0 will show all</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span></span><br><span class="line">    <span class="attr">sort_order:</span></span><br><span class="line">  <span class="attr">card_post_series:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># The title shows the series name</span></span><br><span class="line">    <span class="attr">series_title:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Order by title or date</span></span><br><span class="line">    <span class="attr">orderBy:</span> <span class="string">&#x27;date&#x27;</span></span><br><span class="line">    <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">card_webinfo:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">post_count:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">last_push_date:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sort_order:</span></span><br><span class="line">    <span class="comment"># Time difference between publish date and now</span></span><br><span class="line">    <span class="comment"># Formal: Month/Day/Year Time or Year/Month/Day Time</span></span><br><span class="line">    <span class="comment"># Leave it empty if you don&#x27;t enable this feature</span></span><br><span class="line">    <span class="attr">runtime_date:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Bottom right button</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The distance between the bottom right button and the bottom (default unit: px)</span></span><br><span class="line"><span class="attr">rightside_bottom:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Conversion between Traditional and Simplified Chinese</span></span><br><span class="line"><span class="attr">translate:</span> <span class="comment">##繁简转换</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># The text of a button</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">繁</span></span><br><span class="line">  <span class="comment"># the language of website (1 - Traditional Chinese/ 2 - Simplified Chinese）</span></span><br><span class="line">  <span class="attr">defaultEncoding:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># Time delay</span></span><br><span class="line">  <span class="attr">translateDelay:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># The text of the button when the language is Simplified Chinese</span></span><br><span class="line">  <span class="attr">msgToTraditionalChinese:</span> <span class="string">&#x27;繁&#x27;</span></span><br><span class="line">  <span class="comment"># The text of the button when the language is Traditional Chinese</span></span><br><span class="line">  <span class="attr">msgToSimplifiedChinese:</span> <span class="string">&#x27;簡&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read Mode</span></span><br><span class="line"><span class="attr">readmode:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dark Mode</span></span><br><span class="line"><span class="attr">darkmode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Toggle Button to switch dark/light mode</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Switch dark/light mode automatically</span></span><br><span class="line">  <span class="comment"># autoChangeMode: 1  Following System Settings, if the system doesn&#x27;t support dark mode, it will switch dark mode between 6 pm to 6 am</span></span><br><span class="line">  <span class="comment"># autoChangeMode: 2  Switch dark mode between 6 pm to 6 am</span></span><br><span class="line">  <span class="comment"># autoChangeMode: false</span></span><br><span class="line">  <span class="attr">autoChangeMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Set the light mode time. The value is between 0 and 24. If not set, the default value is 6 and 18</span></span><br><span class="line">  <span class="attr">start:</span></span><br><span class="line">  <span class="attr">end:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show scroll percent in scroll-to-top button</span></span><br><span class="line"><span class="attr">rightside_scroll_percent:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work</span></span><br><span class="line"><span class="comment"># Choose: readmode,translate,darkmode,hideAside,toc,chat,comment</span></span><br><span class="line"><span class="comment"># Don&#x27;t repeat the same value</span></span><br><span class="line"><span class="attr">rightside_item_order:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Default: readmode,translate,darkmode,hideAside</span></span><br><span class="line">  <span class="attr">hide:</span></span><br><span class="line">  <span class="comment"># Default: toc,chat,comment</span></span><br><span class="line">  <span class="attr">show:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Animation for the bottom right config button</span></span><br><span class="line"><span class="attr">rightside_config_animation:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Global Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">anchor:</span></span><br><span class="line">  <span class="comment"># When you scroll, the URL will update according to header id.</span></span><br><span class="line">  <span class="attr">auto_update:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Click the headline to scroll and update the anchor</span></span><br><span class="line">  <span class="attr">click_to_scroll:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">photofigcaption:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">copy:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Add the copyright information after copied content</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="comment">##版权</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit_count:</span> <span class="number">250</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Need to install the hexo-wordcount plugin</span></span><br><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Display the word count of the article in post meta</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Display the time to read the article in post meta</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Display the total word count of the website in aside&#x27;s webinfo</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Busuanzi count for PV / UV in site</span></span><br><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page_pv:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Math</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># About the per_page</span></span><br><span class="line"><span class="comment"># if you set it to true, it will load mathjax/katex script in each page</span></span><br><span class="line"><span class="comment"># if you set it to false, it will load mathjax/katex script according to your setting (add the &#x27;mathjax: true&#x27; or &#x27;katex: true&#x27; in page&#x27;s front-matter)</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Choose: mathjax, katex</span></span><br><span class="line">  <span class="comment"># Leave it empty if you don&#x27;t need math</span></span><br><span class="line">  <span class="attr">use:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hide_scrollbar:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="comment"># Enable the contextual menu</span></span><br><span class="line">    <span class="attr">enableMenu:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Choose: all / ams / none, This controls whether equations are numbered and how</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">none</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="comment"># Enable the copy KaTeX formula</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Search</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">search:</span> <span class="comment">##搜索</span></span><br><span class="line">  <span class="comment"># Choose: algolia_search / local_search / docsearch</span></span><br><span class="line">  <span class="comment"># leave it empty if you don&#x27;t need search</span></span><br><span class="line">  <span class="attr">use:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">placeholder:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Algolia Search</span></span><br><span class="line">  <span class="attr">algolia_search:</span></span><br><span class="line">    <span class="comment"># Number of search results per page</span></span><br><span class="line">    <span class="attr">hitsPerPage:</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Local Search</span></span><br><span class="line">  <span class="attr">local_search:</span></span><br><span class="line">    <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">    <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">    <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">    <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">    <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">CDN:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Docsearch</span></span><br><span class="line">  <span class="comment"># https://docsearch.algolia.com/</span></span><br><span class="line">  <span class="attr">docsearch:</span></span><br><span class="line">    <span class="attr">appId:</span></span><br><span class="line">    <span class="attr">apiKey:</span></span><br><span class="line">    <span class="attr">indexName:</span></span><br><span class="line">    <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Share System</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">share:</span></span><br><span class="line">  <span class="comment"># Choose: sharejs / addtoany</span></span><br><span class="line">  <span class="comment"># Leave it empty if you don&#x27;t need share</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">sharejs</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Share.js</span></span><br><span class="line">  <span class="comment"># https://github.com/overtrue/share.js</span></span><br><span class="line">  <span class="attr">sharejs:</span></span><br><span class="line">    <span class="attr">sites:</span> <span class="string">facebook,twitter,wechat,weibo,qq</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># AddToAny</span></span><br><span class="line">  <span class="comment"># https://www.addtoany.com/</span></span><br><span class="line">  <span class="attr">addtoany:</span></span><br><span class="line">    <span class="attr">item:</span> <span class="string">facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Comments System</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Up to two comments system, the first will be shown as default</span></span><br><span class="line">  <span class="comment"># Leave it empty if you don&#x27;t need comments</span></span><br><span class="line">  <span class="comment"># Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo/Giscus/Remark42/Artalk</span></span><br><span class="line">  <span class="comment"># Format of two comments system : Disqus,Waline</span></span><br><span class="line">  <span class="attr">use:</span></span><br><span class="line">  <span class="comment"># Display the comment name next to the button</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Lazyload: The comment system will be load when comment element enters the browser&#x27;s viewport.</span></span><br><span class="line">  <span class="comment"># If you set it to true, the comment count will be invalid</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Display comment count in post&#x27;s top_img</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Display comment count in Home Page</span></span><br><span class="line">  <span class="attr">card_post_count:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="comment"># https://disqus.com/</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">shortname:</span></span><br><span class="line">  <span class="comment"># For newest comments widget</span></span><br><span class="line">  <span class="attr">apikey:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alternative Disqus - Render comments with Disqus API</span></span><br><span class="line"><span class="comment"># https://github.com/SukkaW/DisqusJS</span></span><br><span class="line"><span class="attr">disqusjs:</span></span><br><span class="line">  <span class="attr">shortname:</span></span><br><span class="line">  <span class="attr">apikey:</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Livere</span></span><br><span class="line"><span class="comment"># https://www.livere.com/</span></span><br><span class="line"><span class="attr">livere:</span></span><br><span class="line">  <span class="attr">uid:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Gitalk</span></span><br><span class="line"><span class="comment"># https://github.com/gitalk/gitalk</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">client_id:</span></span><br><span class="line">  <span class="attr">client_secret:</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">  <span class="attr">admin:</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">appId:</span></span><br><span class="line">  <span class="attr">appKey:</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span></span><br><span class="line">  <span class="comment"># This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span></span><br><span class="line">  <span class="attr">serverURLs:</span></span><br><span class="line">  <span class="attr">bg:</span></span><br><span class="line">  <span class="comment"># Use Valine visitor count as the page view count</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Waline - A simple comment system with backend support fork from Valine</span></span><br><span class="line"><span class="comment"># https://waline.js.org/</span></span><br><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="attr">serverURL:</span></span><br><span class="line">  <span class="attr">bg:</span></span><br><span class="line">  <span class="comment"># Use Waline pageview count as the page view count</span></span><br><span class="line">  <span class="attr">pageview:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Utterances</span></span><br><span class="line"><span class="comment"># https://utteranc.es/</span></span><br><span class="line"><span class="attr">utterances:</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">  <span class="comment"># Issue Mapping: pathname/url/title/og:title</span></span><br><span class="line">  <span class="attr">issue_term:</span> <span class="string">pathname</span></span><br><span class="line">  <span class="comment"># Theme: github-light/github-dark/github-dark-orange/icy-dark/dark-blue/photon-dark</span></span><br><span class="line">  <span class="attr">light_theme:</span> <span class="string">github-light</span></span><br><span class="line">  <span class="attr">dark_theme:</span> <span class="string">photon-dark</span></span><br><span class="line">  <span class="attr">js:</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Facebook Comments Plugin</span></span><br><span class="line"><span class="comment"># https://developers.facebook.com/docs/plugins/comments/</span></span><br><span class="line"><span class="attr">facebook_comments:</span></span><br><span class="line">  <span class="attr">app_id:</span></span><br><span class="line">  <span class="comment"># optional</span></span><br><span class="line">  <span class="attr">user_id:</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span></span><br><span class="line">  <span class="comment"># Choose: social / time / reverse_time</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">social</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">en_US</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Twikoo</span></span><br><span class="line"><span class="comment"># https://github.com/imaegoo/twikoo</span></span><br><span class="line"><span class="attr">twikoo:</span></span><br><span class="line">  <span class="attr">envId:</span></span><br><span class="line">  <span class="attr">region:</span></span><br><span class="line">  <span class="comment"># Use Twikoo visitor count as the page view count</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Giscus</span></span><br><span class="line"><span class="comment"># https://giscus.app/</span></span><br><span class="line"><span class="attr">giscus:</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">  <span class="attr">repo_id:</span></span><br><span class="line">  <span class="attr">category_id:</span></span><br><span class="line">  <span class="attr">light_theme:</span> <span class="string">light</span></span><br><span class="line">  <span class="attr">dark_theme:</span> <span class="string">dark</span></span><br><span class="line">  <span class="attr">js:</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remark42</span></span><br><span class="line"><span class="comment"># https://remark42.com/docs/configuration/frontend/</span></span><br><span class="line"><span class="attr">remark42:</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line">  <span class="attr">siteId:</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Artalk</span></span><br><span class="line"><span class="comment"># https://artalk.js.org/guide/frontend/config.html</span></span><br><span class="line"><span class="attr">artalk:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">  <span class="attr">site:</span></span><br><span class="line">  <span class="comment"># Use Artalk visitor count as the page view count</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Chat Services</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">chat:</span></span><br><span class="line">  <span class="comment"># Choose: chatra/tidio/crisp</span></span><br><span class="line">  <span class="comment"># Leave it empty if you don&#x27;t need chat</span></span><br><span class="line">  <span class="attr">use:</span></span><br><span class="line">  <span class="comment"># Chat Button [recommend]</span></span><br><span class="line">  <span class="comment"># It will create a button in the bottom right corner of website, and hide the origin button</span></span><br><span class="line">  <span class="attr">rightside_button:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># The origin chat button is displayed when scrolling up, and the button is hidden when scrolling down</span></span><br><span class="line">  <span class="attr">button_hide_show:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://chatra.io/</span></span><br><span class="line"><span class="attr">chatra:</span></span><br><span class="line">  <span class="attr">id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://www.tidio.com/</span></span><br><span class="line"><span class="attr">tidio:</span></span><br><span class="line">  <span class="attr">public_key:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://crisp.chat/en/</span></span><br><span class="line"><span class="attr">crisp:</span></span><br><span class="line">  <span class="attr">website_id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Analysis</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://tongji.baidu.com/web/welcome/login</span></span><br><span class="line"><span class="attr">baidu_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://analytics.google.com/analytics/web/</span></span><br><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://www.cloudflare.com/zh-tw/web-analytics/</span></span><br><span class="line"><span class="attr">cloudflare_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://clarity.microsoft.com/</span></span><br><span class="line"><span class="attr">microsoft_clarity:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://umami.is/</span></span><br><span class="line"><span class="attr">umami_analytics:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># For self-hosted setups, configure the hostname of the Umami instance</span></span><br><span class="line">  <span class="attr">serverURL:</span></span><br><span class="line">  <span class="attr">website_id:</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line">  <span class="attr">UV_PV:</span></span><br><span class="line">    <span class="attr">site_uv:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">site_pv:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">page_pv:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Umami Cloud (API key) / self-hosted Umami (token)</span></span><br><span class="line">    <span class="attr">token:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://www.googletagmanager.com/</span></span><br><span class="line"><span class="attr">google_tag_manager:</span></span><br><span class="line">  <span class="attr">tag_id:</span></span><br><span class="line">  <span class="comment"># optional</span></span><br><span class="line">  <span class="attr">domain:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Advertisement</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Adsense</span></span><br><span class="line"><span class="attr">google_adsense:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">auto_ads:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">js:</span> <span class="string">https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">  <span class="attr">enable_page_level_ads:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Insert ads manually</span></span><br><span class="line"><span class="comment"># Leave it empty if you don&#x27;t need ads</span></span><br><span class="line"><span class="attr">ad:</span></span><br><span class="line">  <span class="comment"># Insert ads in the index (every three posts)</span></span><br><span class="line">  <span class="attr">index:</span></span><br><span class="line">  <span class="comment"># Insert ads in aside</span></span><br><span class="line">  <span class="attr">aside:</span></span><br><span class="line">  <span class="comment"># Insert ads in the post (before pagination)</span></span><br><span class="line">  <span class="attr">post:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Verification</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">site_verification:</span></span><br><span class="line">  <span class="comment"># - name: google-site-verification</span></span><br><span class="line">  <span class="comment">#   content: xxxxxx</span></span><br><span class="line">  <span class="comment"># - name: baidu-site-verification</span></span><br><span class="line">  <span class="comment">#   content: xxxxxxx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Beautify / Effect</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Theme color for customize</span></span><br><span class="line"><span class="comment"># Notice: color value must in double quotes like &quot;#000&quot; or may cause error!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># theme_color:</span></span><br><span class="line"><span class="comment">#   enable: true</span></span><br><span class="line"><span class="comment">#   main: &quot;#49B1F5&quot;</span></span><br><span class="line"><span class="comment">#   paginator: &quot;#00c4b6&quot;</span></span><br><span class="line"><span class="comment">#   button_hover: &quot;#FF7242&quot;</span></span><br><span class="line"><span class="comment">#   text_selection: &quot;#00c4b6&quot;</span></span><br><span class="line"><span class="comment">#   link_color: &quot;#99a9bf&quot;</span></span><br><span class="line"><span class="comment">#   meta_color: &quot;#858585&quot;</span></span><br><span class="line"><span class="comment">#   hr_color: &quot;#A4D8FA&quot;</span></span><br><span class="line"><span class="comment">#   code_foreground: &quot;#F47466&quot;</span></span><br><span class="line"><span class="comment">#   code_background: &quot;rgba(27, 31, 35, .05)&quot;</span></span><br><span class="line"><span class="comment">#   toc_color: &quot;#00c4b6&quot;</span></span><br><span class="line"><span class="comment">#   blockquote_padding_color: &quot;#49b1f5&quot;</span></span><br><span class="line"><span class="comment">#   blockquote_background_color: &quot;#49b1f5&quot;</span></span><br><span class="line"><span class="comment">#   scrollbar_color: &quot;#49b1f5&quot;</span></span><br><span class="line"><span class="comment">#   meta_theme_color_light: &quot;ffffff&quot;</span></span><br><span class="line"><span class="comment">#   meta_theme_color_dark: &quot;#0d0d0d&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The user interface setting of category and tag page</span></span><br><span class="line"><span class="comment"># Choose: index - same as Homepage UI / default - same as archives UI</span></span><br><span class="line"><span class="comment"># leave it empty or index</span></span><br><span class="line"><span class="attr">category_ui:</span></span><br><span class="line"><span class="attr">tag_ui:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Rounded corners for UI elements</span></span><br><span class="line"><span class="attr">rounded_corners_ui:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Stretches the lines so that each line has equal width</span></span><br><span class="line"><span class="attr">text_align_justify:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add a mask to the header and footer</span></span><br><span class="line"><span class="attr">mask:</span></span><br><span class="line">  <span class="attr">header:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Loading Animation ##预加载</span></span><br><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source</span></span><br><span class="line">  <span class="comment"># 1. fullpage-loading</span></span><br><span class="line">  <span class="comment"># 2. pace (progress bar)</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># pace theme (see https://codebyzach.github.io/pace/)</span></span><br><span class="line">  <span class="attr">pace_css_url:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Page Transition</span></span><br><span class="line"><span class="attr">enter_transitions:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default display mode - light (default) / dark</span></span><br><span class="line"><span class="attr">display_mode:</span> <span class="string">light</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configuration for beautifying the content of the article</span></span><br><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Specify the field to beautify (site or post)</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="comment"># Specify the icon to be used as a prefix for the title, such as &#x27;\f0c1&#x27;</span></span><br><span class="line">  <span class="attr">title_prefix_icon:</span></span><br><span class="line">  <span class="comment"># Specify the color of the title prefix icon, such as &#x27;#F47466&#x27;</span></span><br><span class="line">  <span class="attr">title_prefix_icon_color:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Global font settings</span></span><br><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global-font-size:</span> <span class="string">&#x27;16px&#x27;</span> <span class="comment">#15px</span></span><br><span class="line">  <span class="attr">code-font-size:</span> <span class="string">&#x27;14px&#x27;</span></span><br><span class="line">  <span class="comment"># -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot; , &quot;Helvetica Neue&quot; , Lato, Roboto, &quot;PingFang SC&quot; , &quot;Microsoft JhengHei&quot; , &quot;Microsoft YaHei&quot; , sans-serif</span></span><br><span class="line">  <span class="comment"># Wenkai, consolas, -apple-system, &#x27;Quicksand&#x27;, &#x27;Nimbus Roman No9 L&#x27;, &#x27;PingFang SC&#x27;, &#x27;Hiragino Sans GB&#x27;, &#x27;Noto Serif SC&#x27;, &#x27;Microsoft Yahei&#x27;, &#x27;WenQuanYi Micro Hei&#x27;, &#x27;ST Heiti&#x27;, sans-serif;</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">-apple-system,</span> <span class="string">&#x27;Quicksand&#x27;</span><span class="string">,</span> <span class="string">&#x27;Nimbus Roman No9 L&#x27;</span><span class="string">,</span> <span class="string">&#x27;PingFang SC&#x27;</span><span class="string">,</span> <span class="string">&#x27;Hiragino Sans GB&#x27;</span><span class="string">,</span> <span class="string">&#x27;Noto Serif SC&#x27;</span><span class="string">,</span> <span class="string">&#x27;Microsoft Yahei&#x27;</span><span class="string">,</span> <span class="string">&#x27;WenQuanYi Micro Hei&#x27;</span><span class="string">,</span> <span class="string">&#x27;ST Heiti&#x27;</span><span class="string">,</span> <span class="string">sans-serif;</span></span><br><span class="line">  <span class="comment"># consolas, ZhuZiAWan_light, &quot;Microsoft YaHei&quot;, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft JhengHei&quot;, sans-serif</span></span><br><span class="line">  <span class="comment"># Consolas_1, ZhuZiAWan_light, &quot;Microsoft YaHei&quot;, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft JhengHei&quot;, sans-serif</span></span><br><span class="line">  <span class="attr">code-font-family:</span> <span class="string">Consolas,</span> <span class="string">&quot;Microsoft YaHei&quot;</span><span class="string">,</span> <span class="string">Menlo,</span> <span class="string">&quot;PingFang SC&quot;</span><span class="string">,</span> <span class="string">&quot;Microsoft JhengHei&quot;</span><span class="string">,</span> <span class="string">sans-serif</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Font settings for the site title and site subtitle</span></span><br><span class="line"><span class="attr">blog_title_font:</span></span><br><span class="line">  <span class="attr">font_link:</span> </span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">-apple-system,</span> <span class="string">BlinkMacSystemFont,</span> <span class="string">&quot;Segoe UI&quot;</span> <span class="string">,</span> <span class="string">&quot;Helvetica Neue&quot;</span> <span class="string">,</span> <span class="string">Lato,</span> <span class="string">Roboto,</span> <span class="string">&quot;PingFang SC&quot;</span> <span class="string">,</span> <span class="string">&quot;Microsoft JhengHei&quot;</span> <span class="string">,</span> <span class="string">&quot;Microsoft YaHei&quot;</span> <span class="string">,</span> <span class="string">sans-serif</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The setting of divider icon</span></span><br><span class="line"><span class="attr">hr_icon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># The unicode value of Font Awesome icon, such as &#x27;\3423&#x27;</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">  <span class="attr">icon_top:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Typewriter Effect</span></span><br><span class="line"><span class="comment"># https://github.com/disjukr/activate-power-mode</span></span><br><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Background effects</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># canvas_ribbon</span></span><br><span class="line"><span class="comment"># See: https://github.com/hustcc/ribbon.js</span></span><br><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># The size of ribbon</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">150</span></span><br><span class="line">  <span class="comment"># The opacity of ribbon (0 ~ 1)</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">click_to_change:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Fluttering Ribbon</span></span><br><span class="line"><span class="attr">canvas_fluttering_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># canvas_nest</span></span><br><span class="line"><span class="comment"># https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Color of lines, default: &#x27;0,0,0&#x27;; RGB values: (R,G,B).(<span class="doctag">note:</span> use &#x27;,&#x27; to separate.)</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&#x27;0,0,255&#x27;</span></span><br><span class="line">  <span class="comment"># The opacity of line (0~1)</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.7</span></span><br><span class="line">  <span class="comment"># The z-index property of the background</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span></span><br><span class="line">  <span class="comment"># The number of lines</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">99</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: fireworks ##点击特效</span></span><br><span class="line"><span class="attr">fireworks:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">9999</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: Heart symbol</span></span><br><span class="line"><span class="attr">click_heart:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: words</span></span><br><span class="line"><span class="attr">clickShowText:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">text:</span></span><br><span class="line">    <span class="comment"># - I</span></span><br><span class="line">    <span class="comment"># - LOVE</span></span><br><span class="line">    <span class="comment"># - YOU</span></span><br><span class="line">  <span class="attr">fontSize:</span> <span class="string">15px</span></span><br><span class="line">  <span class="attr">random:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Lightbox Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Choose: fancybox / medium_zoom</span></span><br><span class="line"><span class="comment"># https://github.com/francoischalifour/medium-zoom</span></span><br><span class="line"><span class="comment"># https://fancyapps.com/fancybox/</span></span><br><span class="line"><span class="comment"># Leave it empty if you don&#x27;t need lightbox</span></span><br><span class="line"><span class="attr">lightbox:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Tag Plugins settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Series</span></span><br><span class="line"><span class="attr">series:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Order by title or date</span></span><br><span class="line">  <span class="attr">orderBy:</span> <span class="string">&#x27;title&#x27;</span></span><br><span class="line">  <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">  <span class="attr">order:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ABCJS - The ABC Music Notation Plugin</span></span><br><span class="line"><span class="comment"># https://github.com/paulrosen/abcjs</span></span><br><span class="line"><span class="attr">abcjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mermaid</span></span><br><span class="line"><span class="comment"># https://github.com/mermaid-js/mermaid</span></span><br><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Write Mermaid diagrams using code blocks</span></span><br><span class="line">  <span class="attr">code_write:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># built-in themes: default / forest / dark / neutral</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">default</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">dark</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chartjs</span></span><br><span class="line"><span class="comment"># see https://www.chartjs.org/docs/latest/</span></span><br><span class="line"><span class="attr">chartjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Do not modify unless you understand how they work.</span></span><br><span class="line">  <span class="comment"># The default settings are only used when the MD syntax is not specified.</span></span><br><span class="line">  <span class="comment"># General font color for the chart</span></span><br><span class="line">  <span class="attr">fontColor:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">&#x27;rgba(0, 0, 0, 0.8)&#x27;</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">&#x27;rgba(255, 255, 255, 0.8)&#x27;</span></span><br><span class="line">  <span class="comment"># General border color for the chart</span></span><br><span class="line">  <span class="attr">borderColor:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">&#x27;rgba(0, 0, 0, 0.1)&#x27;</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">&#x27;rgba(255, 255, 255, 0.2)&#x27;</span></span><br><span class="line">  <span class="comment"># Background color for scale labels on radar and polar area charts</span></span><br><span class="line">  <span class="attr">scale_ticks_backdropColor:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">&#x27;transparent&#x27;</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">&#x27;transparent&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note - Bootstrap Callout</span></span><br><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"><span class="comment"># Other Settings</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://github.com/MoOx/pjax</span></span><br><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Exclude the specified pages from pjax, such as &#x27;/music/&#x27;</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - /xxxxxx/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Snackbar - Toast Notification</span></span><br><span class="line"><span class="comment"># https://github.com/polonel/SnackBar</span></span><br><span class="line"><span class="comment"># position: top-left / top-center / top-right / bottom-left / bottom-center / bottom-right</span></span><br><span class="line"><span class="attr">snackbar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">bottom-left</span></span><br><span class="line">  <span class="comment"># The background color of Toast Notification in light mode and dark mode</span></span><br><span class="line">  <span class="attr">bg_light:</span> <span class="string">&#x27;#49b1f5&#x27;</span></span><br><span class="line">  <span class="attr">bg_dark:</span> <span class="string">&#x27;#1f1f1f&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Instant.page</span></span><br><span class="line"><span class="comment"># https://instant.page/</span></span><br><span class="line"><span class="attr">instantpage:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Lazyload ##懒加载</span></span><br><span class="line"><span class="comment"># https://github.com/verlok/vanilla-lazyload</span></span><br><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Use browser&#x27;s native lazyload instead of vanilla-lazyload</span></span><br><span class="line">  <span class="attr">native:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Specify the field to use lazyload (site or post)</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span></span><br><span class="line">  <span class="attr">placeholder:</span></span><br><span class="line">  <span class="attr">blur:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PWA</span></span><br><span class="line"><span class="comment"># See https://github.com/JLHwung/hexo-offline</span></span><br><span class="line"><span class="comment"># ---------------</span></span><br><span class="line"><span class="attr">pwa:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">manifest:</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span></span><br><span class="line">  <span class="attr">favicon_32_32:</span></span><br><span class="line">  <span class="attr">favicon_16_16:</span></span><br><span class="line">  <span class="attr">mask_icon:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Open graph meta tags</span></span><br><span class="line"><span class="comment"># https://hexo.io/docs/helpers#open-graph</span></span><br><span class="line"><span class="attr">Open_Graph_meta:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line">    <span class="comment"># twitter_card:</span></span><br><span class="line">    <span class="comment"># twitter_image:</span></span><br><span class="line">    <span class="comment"># twitter_id:</span></span><br><span class="line">    <span class="comment"># twitter_site:</span></span><br><span class="line">    <span class="comment"># google_plus:</span></span><br><span class="line">    <span class="comment"># fb_admins:</span></span><br><span class="line">    <span class="comment"># fb_app_id:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Structured Data</span></span><br><span class="line"><span class="comment"># https://developers.google.com/search/docs/guides/intro-structured-data</span></span><br><span class="line"><span class="attr">structured_data:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add the vendor prefixes to ensure compatibility</span></span><br><span class="line"><span class="attr">css_prefix:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inject ##引入自定义文件</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CDN Settings</span></span><br><span class="line"><span class="comment"># Don&#x27;t modify the following settings unless you know how they work</span></span><br><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="comment"># The CDN provider for internal and third-party scripts</span></span><br><span class="line">  <span class="comment"># Options for both: local/jsdelivr/unpkg/cdnjs/custom</span></span><br><span class="line">  <span class="comment"># <span class="doctag">Note:</span> Dev version can only use &#x27;local&#x27; for internal scripts</span></span><br><span class="line">  <span class="comment"># <span class="doctag">Note:</span> When setting third-party scripts to &#x27;local&#x27;, you need to install hexo-butterfly-extjs</span></span><br><span class="line">  <span class="attr">internal_provider:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">third_party_provider:</span> <span class="string">jsdelivr</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Add version number to url, true or false</span></span><br><span class="line">  <span class="attr">version:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom format</span></span><br><span class="line">  <span class="comment"># For example: https://cdn.staticfile.org/$&#123;cdnjs_name&#125;/$&#123;version&#125;/$&#123;min_cdnjs_file&#125;</span></span><br><span class="line">  <span class="attr">custom_format:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line">    <span class="comment"># abcjs_basic_js:</span></span><br><span class="line">    <span class="comment"># activate_power_mode:</span></span><br><span class="line">    <span class="comment"># algolia_js:</span></span><br><span class="line">    <span class="comment"># algolia_search:</span></span><br><span class="line">    <span class="comment"># aplayer_css:</span></span><br><span class="line">    <span class="comment"># aplayer_js:</span></span><br><span class="line">    <span class="comment"># artalk_css:</span></span><br><span class="line">    <span class="comment"># artalk_js:</span></span><br><span class="line">    <span class="comment"># blueimp_md5:</span></span><br><span class="line">    <span class="comment"># busuanzi:</span></span><br><span class="line">    <span class="comment"># canvas_fluttering_ribbon:</span></span><br><span class="line">    <span class="comment"># canvas_nest:</span></span><br><span class="line">    <span class="comment"># canvas_ribbon:</span></span><br><span class="line">    <span class="comment"># chartjs:</span></span><br><span class="line">    <span class="comment"># click_heart:</span></span><br><span class="line">    <span class="comment"># clickShowText:</span></span><br><span class="line">    <span class="comment"># disqusjs:</span></span><br><span class="line">    <span class="comment"># disqusjs_css:</span></span><br><span class="line">    <span class="comment"># docsearch_css:</span></span><br><span class="line">    <span class="comment"># docsearch_js:</span></span><br><span class="line">    <span class="comment"># egjs_infinitegrid:</span></span><br><span class="line">    <span class="comment"># fancybox:</span></span><br><span class="line">    <span class="comment"># fancybox_css:</span></span><br><span class="line">    <span class="comment"># fireworks:</span></span><br><span class="line">    <span class="comment"># fontawesome:</span></span><br><span class="line">    <span class="comment"># gitalk:</span></span><br><span class="line">    <span class="comment"># gitalk_css:</span></span><br><span class="line">    <span class="comment"># giscus:</span></span><br><span class="line">    <span class="comment"># instantpage:</span></span><br><span class="line">    <span class="comment"># instantsearch:</span></span><br><span class="line">    <span class="comment"># katex:</span></span><br><span class="line">    <span class="comment"># katex_copytex:</span></span><br><span class="line">    <span class="comment"># lazyload:</span></span><br><span class="line">    <span class="comment"># local_search:</span></span><br><span class="line">    <span class="comment"># main:</span></span><br><span class="line">    <span class="comment"># main_css:</span></span><br><span class="line">    <span class="comment"># mathjax:</span></span><br><span class="line">    <span class="comment"># medium_zoom:</span></span><br><span class="line">    <span class="comment"># mermaid:</span></span><br><span class="line">    <span class="comment"># meting_js:</span></span><br><span class="line">    <span class="comment"># prismjs_autoloader:</span></span><br><span class="line">    <span class="comment"># prismjs_js:</span></span><br><span class="line">    <span class="comment"># prismjs_lineNumber_js:</span></span><br><span class="line">    <span class="comment"># pjax:</span></span><br><span class="line">    <span class="comment"># sharejs:</span></span><br><span class="line">    <span class="comment"># sharejs_css:</span></span><br><span class="line">    <span class="comment"># snackbar:</span></span><br><span class="line">    <span class="comment"># snackbar_css:</span></span><br><span class="line">    <span class="comment"># translate:</span></span><br><span class="line">    <span class="comment"># twikoo:</span></span><br><span class="line">    <span class="comment"># typed:</span></span><br><span class="line">    <span class="comment"># utils:</span></span><br><span class="line">    <span class="comment"># valine:</span></span><br><span class="line">    <span class="comment"># waline_css:</span></span><br><span class="line">    <span class="comment"># waline_js:</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>post草稿<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 标题</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">author:</span>  <span class="comment">#作者</span></span><br><span class="line"><span class="comment"># 简述</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="comment"># 标签</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="comment"># 分类</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="comment"># 使用自定义封面 </span></span><br><span class="line"><span class="comment"># img: </span></span><br><span class="line"><span class="comment"># 是否置顶true，或者去掉</span></span><br><span class="line"><span class="attr">top:</span> </span><br><span class="line"><span class="comment"># 轮播</span></span><br><span class="line"><span class="attr">cover:</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码搜索SemEnr使用记录</title>
      <link href="/2024/11/11/semenr/"/>
      <url>/2024/11/11/semenr/</url>
      
        <content type="html"><![CDATA[<p>之前自己从<a href="https://github.com/cqu-isse/SemEnr">SemEnr</a>下载下来用，安装了readme文件中提到的依赖库，结果到处报错。于是还是好朋友<a href="https://licyk.netlify.app/2024/11/10/deploy-semenr/">licyk</a>给了我一个优秀的解决方案。感谢他！<br>接下来我也对其进行一定的使用及修改，这是我的项目仓库：<a href="https://github.com/HG-dev17/SemEnr">https://github.com/HG-dev17/SemEnr</a></p><h1 id="一、anaconda和Visual-Studio安装"><a href="#一、anaconda和Visual-Studio安装" class="headerlink" title="一、anaconda和Visual Studio安装"></a>一、anaconda和Visual Studio安装</h1><h2 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h2><p><a href="https://www.anaconda.com/products/distribution">下载链接：https://www.anaconda.com/products/distribution</a></p><h2 id="1-2-安装"><a href="#1-2-安装" class="headerlink" title="1.2 安装"></a>1.2 安装</h2><p>双击运行，一直下一步即可。（如不想安装在C盘，自行选择目录即可）<br><code>注意一定要选择添加进PATH，不然终端无法运行</code></p><h2 id="1-3-Visual-Studio安装"><a href="#1-3-Visual-Studio安装" class="headerlink" title="1.3 Visual Studio安装"></a>1.3 Visual Studio安装</h2><p><a href="https://visualstudio.microsoft.com/zh-hans/">下载链接：https://visualstudio.microsoft.com/zh-hans/</a></p><h1 id="二、安装项目"><a href="#二、安装项目" class="headerlink" title="二、安装项目"></a>二、安装项目</h1><details class="folding-tag" green><summary> 安装项目 </summary>              <div class='content'>              <p>由于有一些问题过期了，所以此方法可能存在一定的问题。请自行根据报错进行修改即可</p><p>下面的操作将在 <code>PowerShell</code> 中进行，右键桌面空白处点在终端中打开就能进入 <code>PowerShell</code> 终端。</p><ol><li>现在将 MicroMamba 安装在 D 盘，为 MicroMamba 创建安装目录。<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-Item</span> <span class="literal">-ItemType</span> Directory <span class="literal">-Path</span> <span class="string">&quot;D:/micromamba&quot;</span></span><br></pre></td></tr></table></figure></li><li>下载 MicroMamba。<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WebRequest -Uri https:<span class="regexp">//gi</span>tee.com<span class="regexp">/licyk/</span>README-collection<span class="regexp">/releases/</span>download<span class="regexp">/archive/mi</span>cromamba.exe -OutFile <span class="string">&quot;D:/micromamba/micromamba.exe&quot;</span></span><br></pre></td></tr></table></figure>我也fork了一份<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WebRequest -Uri https:<span class="regexp">//gi</span>tee.com<span class="regexp">/HG-dev17/</span>download<span class="regexp">/releases/</span>download<span class="regexp">/archive/mi</span>cromamba.exe -OutFile <span class="string">&quot;D:/micromamba/micromamba.exe&quot;</span></span><br></pre></td></tr></table></figure></li><li>初始化 MicroMamba 的配置。<figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&amp;</span> <span class="string">&quot;D:/micromamba/micromamba.exe&quot;</span> <span class="variable">shell</span> <span class="variable">hook</span> <span class="operator">-</span><span class="variable">s</span> <span class="variable">powershell</span> <span class="operator">|</span> <span class="built_in">Out</span><span class="operator">-</span><span class="built_in">String</span> <span class="operator">|</span> <span class="variable">Invoke</span><span class="operator">-</span><span class="built_in">Expression</span></span><br><span class="line"><span class="operator">&amp;</span> <span class="string">&quot;D:/micromamba/micromamba.exe&quot;</span> <span class="variable">shell</span> <span class="variable">init</span> <span class="operator">-</span><span class="variable">s</span> <span class="variable">powershell</span> <span class="operator">-</span><span class="variable">r</span> <span class="string">&quot;D:/micromamba&quot;</span></span><br><span class="line"><span class="operator">.</span> <span class="string">&quot;$Env:USERPROFILE/Documents/WindowsPowerShell/profile.ps1&quot;</span></span><br></pre></td></tr></table></figure>注意，如果遇到以下问题：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">. : 无法加载文件 C:\Users\用户名\Documents\WindowsPowerShell\profile.ps1</span><br><span class="line">因为在此系统上禁止运行脚本。有关详细信息，请参阅</span><br></pre></td></tr></table></figure>解决办法是输入命令允许启动所有脚本<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure></li><li>为 MicroMamba 下载 Conda 配置文件。<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WebRequest -Uri https:<span class="regexp">//gi</span>tee.com<span class="regexp">/licyk/</span>README-collection<span class="regexp">/releases/</span>download<span class="regexp">/archive/</span>conda_config.yaml -OutFile <span class="string">&quot;$Env:USERPROFILE/.condarc&quot;</span></span><br></pre></td></tr></table></figure>我fork了一份<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WebRequest -Uri https:<span class="regexp">//gi</span>tee.com<span class="regexp">/HG-dev17/</span>download<span class="regexp">/releases/</span>download<span class="regexp">/archive/</span>conda_config.yaml -OutFile <span class="string">&quot;$Env:USERPROFILE/.condarc&quot;</span></span><br></pre></td></tr></table></figure></li><li>为 SemEnr 创建 Conda 环境。<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">micromamba <span class="built_in">create</span> <span class="comment">--name semenr git -y</span></span><br></pre></td></tr></table></figure></li><li>激活 SemEnr 的 Conda 环境。<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">micromamba <span class="built_in">activate</span> semenr</span><br></pre></td></tr></table></figure></li><li>待会在 D 盘下载 SemEnr 这个项目，所以切换到 D 盘目录里。<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-<span class="keyword">Location</span> <span class="title">D</span>:</span><br></pre></td></tr></table></figure></li><li>因为 <a href="https://github.com/licyk/SemEnr">https://github.com/licyk/SemEnr</a> 这个 Github 地址在没有科学上网的情况下比较难连上，所以换成 Github 镜像源地址下载 SemEnr 项目。<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="symbol">https:</span>/<span class="regexp">/ghproxy.net/https</span><span class="symbol">://github</span>.com/licyk/<span class="title class_">SemEnr</span></span><br></pre></td></tr></table></figure>我也fork了一份，地址是 <a href="https://github.com/HG-dev17/SemEnr">https://github.com/HG-dev17/SemEnr</a> ，所以你也可以直接用这个地址下载。<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/</span><span class="variable constant_">HG</span>-dev17/<span class="title class_">SemEnr</span></span><br></pre></td></tr></table></figure></li><li>进入 SemEnr 项目文件夹。<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-<span class="keyword">Location</span> <span class="title">SemEnr</span></span><br></pre></td></tr></table></figure></li><li>使用 MicroMamba 安装 SemEnr 的依赖。<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">micromamba <span class="keyword">install</span> -f environment.yml -y</span><br></pre></td></tr></table></figure></li><li>待会使用 Pip 安装剩余的项目依赖，为了保证下载速度，设置一下 Pip 镜像源。<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip config <span class="keyword">set</span> <span class="keyword">global</span>.<span class="keyword">index</span>-url &quot;https://mirrors.cloud.tencent.com/pypi/simple&quot;</span><br></pre></td></tr></table></figure></li><li>使用 Pip 安装剩余的依赖。<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> -r requirements.txt</span><br></pre></td></tr></table></figure>现在 SemEnr 项目的运行环境就配置好了，下次要进入 SemEnr 项目的运行环境就使用下面的命令。<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">micromamba <span class="built_in">activate</span> semenr</span><br></pre></td></tr></table></figure></li><li>放置数据集到指定目录<br><code>/data/github</code></li></ol><ul><li>最后cd到运行目录，即可使用<code>python .\main.py</code>运行程序了</li></ul>              </div>            </details><h1 id="三、使用项目"><a href="#三、使用项目" class="headerlink" title="三、使用项目"></a>三、使用项目</h1><p>项目使用过程中，我们发现loss值并没有记录在结果文件<code>results/training_results.txt</code>中，所以我们需要修改一下main.py文件，将loss值记录到结果文件中。<br><code>记得去掉加号，保持缩进</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> hist.history[<span class="string">&#x27;val_loss&#x27;</span>][<span class="number">0</span>] &lt; val_loss[<span class="string">&#x27;loss&#x27;</span>]:</span><br><span class="line">                val_loss = &#123;<span class="string">&#x27;loss&#x27;</span>: hist.history[<span class="string">&#x27;val_loss&#x27;</span>][<span class="number">0</span>], <span class="string">&#x27;epoch&#x27;</span>: i&#125;</span><br><span class="line">+                <span class="comment"># 将 val_loss 写入文件</span></span><br><span class="line">+                f1.write(<span class="string">&#x27;Best Validation Loss: Epoch=&#123;&#125;, Loss=&#123;&#125;\n&#x27;</span>.<span class="built_in">format</span>(val_loss[<span class="string">&#x27;epoch&#x27;</span>], val_loss[<span class="string">&#x27;loss&#x27;</span>]))</span><br><span class="line">+                f1.flush()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Best: Loss = &#123;&#125;, Epoch = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(val_loss[<span class="string">&#x27;loss&#x27;</span>], val_loss[<span class="string">&#x27;epoch&#x27;</span>]))</span><br></pre></td></tr></table></figure></p><h2 id="3-1分析项目"><a href="#3-1分析项目" class="headerlink" title="3.1分析项目"></a>3.1分析项目</h2><details class="folding-tag" green><summary> 数据预处理 </summary>              <div class='content'>              <p>首先是数据预处理先看CreateCorpus.py文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    sourceFile = <span class="built_in">open</span>(<span class="string">&quot;DeepCom_JAVA/train_tokens.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    corpusFile = <span class="built_in">open</span>(<span class="string">&quot;DeepCom_JAVA/corpus_tokens.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> num, line <span class="keyword">in</span> <span class="built_in">enumerate</span>(sourceFile):</span><br><span class="line">        <span class="built_in">print</span>(num)</span><br><span class="line">        words = line.split()</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">            corpusFile.write(word + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    sourceFile.close()</span><br><span class="line">    corpusFile.close()</span><br></pre></td></tr></table></figure><br>这个文件的作用是将DeepCom_JAVA/train_tokens.txt文件中的每一行按空格分割，然后将分割后的每个单词写入DeepCom_JAVA/corpus_tokens.txt文件中，每行一个单词。<br>接着是CreateVocab.py文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">vocabWord = <span class="built_in">open</span>(<span class="string">&quot;DeepCom_JAVA/corpus_tokens.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">processStaFile = <span class="built_in">open</span>(<span class="string">&quot;DeepCom_JAVA/vocab.tokens.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">staTreeList = []</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    word = vocabWord.readline().splitlines()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> word:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    staTreeList.append(word[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">staTreeDic = Counter(staTreeList)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> staTreeDic.items():</span><br><span class="line">    <span class="keyword">if</span> v &gt;= <span class="number">11</span>:</span><br><span class="line">        processStaFile.write(k + <span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><br>这个文件的作用是统计DeepCom_JAVA/corpus_tokens.txt文件中每个单词出现的次数，然后将出现次数大于等于11的单词写入DeepCom_JAVA/vocab.tokens.txt文件中，每行一个单词。<br>接着是Vocab2pkl.py文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">sbt_list = []</span><br><span class="line">f = codecs.<span class="built_in">open</span>(<span class="string">&#x27;DeepCom_JAVA/vocab.tokens.txt&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>, errors=<span class="string">&#x27;replace&#x27;</span>).readlines()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">    line = line.strip()</span><br><span class="line">    sbt_list.append(line)</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">sbt_dictionary = &#123;value: index + <span class="number">1</span> <span class="keyword">for</span> index, value <span class="keyword">in</span> <span class="built_in">enumerate</span>(sbt_list)&#125;</span><br><span class="line">pickle.dump(sbt_dictionary,<span class="built_in">open</span>(<span class="string">&quot;DeepCom_JAVA/vocab.tokens.pkl&quot;</span>, <span class="string">&#x27;wb&#x27;</span>))</span><br></pre></td></tr></table></figure><br>这个文件的作用是将DeepCom_JAVA/vocab.tokens.txt文件中的单词转换为字典，并将字典保存为DeepCom_JAVA/vocab.tokens.pkl文件。<br>最后是txt2pkl.py文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">desc2index</span>(<span class="params">desc_dict</span>):</span><br><span class="line">    desc = []</span><br><span class="line">    desc_index = []</span><br><span class="line"></span><br><span class="line">    fileDesc = codecs.<span class="built_in">open</span>(<span class="string">&#x27;DeepCom_JAVA/test_desc.txt&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">                           errors=<span class="string">&#x27;replace&#x27;</span>).readlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> fileDesc:</span><br><span class="line">        line = line.split()</span><br><span class="line">        desc.append(line)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> desc:</span><br><span class="line">        new_item = []</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> item:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                new_item.append(desc_dict[word])</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                new_item.append(<span class="number">3</span>)</span><br><span class="line">        desc_index.append(new_item)</span><br><span class="line">    <span class="keyword">return</span> desc_index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tokens2index</span>(<span class="params">tokens_dict</span>):</span><br><span class="line">    tokens = []</span><br><span class="line">    tokens_index = []</span><br><span class="line"></span><br><span class="line">    fileTokens = codecs.<span class="built_in">open</span>(<span class="string">&#x27;DeepCom_JAVA/test_tokens.txt&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">                             errors=<span class="string">&#x27;replace&#x27;</span>).readlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> fileTokens:</span><br><span class="line">        line = line.split()</span><br><span class="line">        tokens.append(line)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> tokens:</span><br><span class="line">        new_item = []</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> item:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                new_item.append(tokens_dict[word])</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                new_item.append(<span class="number">3</span>)</span><br><span class="line">        tokens_index.append(new_item)</span><br><span class="line">    <span class="keyword">return</span> tokens_index</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">simWords2index</span>(<span class="params">desc_dict</span>):</span><br><span class="line">    tokens = []</span><br><span class="line">    tokens_index = []</span><br><span class="line">    fileTokens = codecs.<span class="built_in">open</span>(<span class="string">&#x27;DeepCom_JAVA/test_IR_code_desc_sw.txt&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">                             errors=<span class="string">&#x27;replace&#x27;</span>).readlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> fileTokens:</span><br><span class="line">        line = line.split()</span><br><span class="line">        tokens.append(line)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> tokens:</span><br><span class="line">        new_item = []</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> item:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                new_item.append(desc_dict[word])</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                new_item.append(<span class="number">3</span>)</span><br><span class="line">        tokens_index.append(new_item)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> tokens_index</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    desc_dict = pickle.load(<span class="built_in">open</span>(<span class="string">&#x27;DeepCom_JAVA/vocab.desc.pkl&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)) <span class="comment">##描述</span></span><br><span class="line">    tokens_dict = pickle.load(<span class="built_in">open</span>(<span class="string">&#x27;DeepCom_JAVA/vocab.tokens.pkl&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)) <span class="comment">##代码</span></span><br><span class="line">    desc = desc2index(desc_dict) <span class="comment">##描述</span></span><br><span class="line">    tokens = tokens2index(tokens_dict) <span class="comment">##代码</span></span><br><span class="line">    sim_desc=simWords2index(desc_dict) <span class="comment">##相似代码描述</span></span><br><span class="line"></span><br><span class="line">    pickle.dump(desc, <span class="built_in">open</span>(<span class="string">&#x27;DeepCom_JAVA/test.desc.pkl&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)) <span class="comment">##描述</span></span><br><span class="line">    pickle.dump(tokens, <span class="built_in">open</span>(<span class="string">&#x27;DeepCom_JAVA/test.tokens.pkl&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)) <span class="comment">##代码</span></span><br><span class="line">    pickle.dump(sim_desc, <span class="built_in">open</span>(<span class="string">&#x27;DeepCom_JAVA/test_IR_code_desc.pkl&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)) <span class="comment">##相似代码描述</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;finish transfering data to index...&#x27;</span>)</span><br></pre></td></tr></table></figure><br>这个文件的作用是将文本文件中的描述、代码片段和相似代码片段转换为索引，并将这些索引保存到pickle文件中。<br>至此，数据预处理部分已经完成。</p>              </div>            </details><h1 id="四、优化项目"><a href="#四、优化项目" class="headerlink" title="四、优化项目"></a>四、优化项目</h1><p>我们的研究希望能够优化代码搜索。根据<a href="https://webofscience.clarivate.cn/wos/alldb/full-record/WOS:001098366600001">原论文文档</a>，我们尝试通过用大模型处理<code>train_desc.txt</code>来生成新的相似描述<code>sim_desc.txt</code>，然后通过<code>train_tokens.txt</code>和<code>sim_desc.txt</code>制作出模型能够识别的<code>pkl</code>文件来训练模型，而不是仅仅依靠字词的<code>token</code>去制作<code>sim_desc</code>文本从而优化代码搜索。<br>因此，我们利用<code>ollama api</code>实现每一行的描述的相似描述生成，并保存到相似描述文本中。</p><ul><li>大模型的使用可以参考我的这篇文章：<a href="https://hg-dev17.github.io/2024/12/02/ollama-install/">ollama api的使用</a>，完成上述步骤后再进行以下步骤。<br><code>注意，运行以下代码时必须启动open-webui服务</code></li><li><p>建议使用如下代码前安装以下环境:(复制内容到<code>requirements.txt</code>文件中，然后使用<code>pip install -r requirements.txt</code>安装)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">requests==2.28.1</span><br><span class="line">tqdm==4.64.0</span><br><span class="line">concurrent.futures==3.9.2</span><br><span class="line">logging==0.5.1.2</span><br><span class="line">os==0.1.0</span><br><span class="line">signal==0.2.0</span><br></pre></td></tr></table></figure><div class="tabs" id="大模型处理过程"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="大模型处理过程-1">2024/12/2</button><button type="button" class="tab " data-href="大模型处理过程-2">2024/12/3</button></ul><div class="tab-contents"><div class="tab-item-content active" id="大模型处理过程-1"><p><strong>这是实现基本功能的代码</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">askLocalQwen2Model</span>(<span class="params">prompt</span>):</span><br><span class="line">    url = <span class="string">&quot;http://localhost:11434/api/generate&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建要发送的JSON对象</span></span><br><span class="line">    json_input = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: <span class="string">&quot;qwen2.5-coder:latest&quot;</span>,</span><br><span class="line">        <span class="string">&quot;prompt&quot;</span>: prompt,</span><br><span class="line">        <span class="string">&quot;stream&quot;</span>: <span class="literal">False</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 发送POST请求</span></span><br><span class="line">        response = requests.post(url, headers=&#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;, data=json.dumps(json_input))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 检查响应状态码</span></span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="comment"># 解析JSON响应并提取response字段</span></span><br><span class="line">            json_response = response.json()</span><br><span class="line">            <span class="keyword">return</span> json_response.get(<span class="string">&quot;response&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Failed to get response from Qwen2 model. Status code: <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;An error occurred: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取输入文件</span></span><br><span class="line">input_file_path = <span class="string">&quot;train_desc.txt&quot;</span></span><br><span class="line">output_file_path = <span class="string">&quot;final_desc.txt&quot;</span></span><br><span class="line">train_prompt=<span class="string">&quot;Please generate only the similar descriptive text without any extra content. The output should be approximately the same length as the input and in English.\n&quot;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(input_file_path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> input_file:</span><br><span class="line">    lines = input_file.readlines()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理每一行并写入输出文件</span></span><br><span class="line"><span class="keyword">with</span> tqdm(total=<span class="built_in">len</span>(lines), desc=<span class="string">&quot;Processing&quot;</span>, unit=<span class="string">&quot;line&quot;</span>) <span class="keyword">as</span> pbar:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_file_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">            <span class="comment"># 去除行尾的换行符</span></span><br><span class="line">            prompt = train_prompt + line.strip()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 使用模型处理生成相似文本</span></span><br><span class="line">            result = askLocalQwen2Model(prompt)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 将结果写入输出文件</span></span><br><span class="line">            output_file.write(result + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 更新进度条</span></span><br><span class="line">            pbar.update(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;处理完成，结果已保存到final.txt&quot;</span>)</span><br></pre></td></tr></table></figure><br>这是目前的代码，可能还会修改。提示词可以修改<code>train_prompt</code>，来控制生成的文本能够符合输出要求。</p></div><div class="tab-item-content" id="大模型处理过程-2"><p>使用完基本代码发现跑的非常慢，于是添加了多线程，代码如下：<br><strong>这是添加了多线程的代码</strong><br>修改完上述部分以后，发现处理完本项目的<code>train_desc.txt</code>文件竟然要300多个小时，于是想用多进程来加速处理，于是修改了代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor, as_completed</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="comment"># 读取输入文件</span></span><br><span class="line">input_file_path = <span class="string">&quot;train_desc.txt&quot;</span> <span class="comment">##输入文件</span></span><br><span class="line">output_file_path = <span class="string">&quot;final_desc.txt&quot;</span> <span class="comment">##输出文件</span></span><br><span class="line">model_name = <span class="string">&quot;qwen2.5-coder:latest&quot;</span> <span class="comment">## 模型名称</span></span><br><span class="line">num_workers = <span class="number">1000</span> <span class="comment">## 线程数(目前1000最佳)</span></span><br><span class="line"><span class="comment">## 模型提示词（要求）</span></span><br><span class="line">train_prompt = <span class="string">&quot;Please generate only the similar descriptive text without any extra content. The output should be approximately the same length as the input and in English.\n&quot;</span></span><br><span class="line"><span class="comment"># temp_dir = &quot;temp_files&quot;</span></span><br><span class="line"><span class="comment"># os.makedirs(temp_dir, exist_ok=True)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置日志记录</span></span><br><span class="line">logging.basicConfig(level=logging.INFO, <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s - %(levelname)s - %(message)s&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">askLocalQwen2Model</span>(<span class="params">prompt</span>):</span><br><span class="line">    url = <span class="string">&quot;http://localhost:11434/api/generate&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建要发送的JSON对象</span></span><br><span class="line">    json_input = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: model_name, </span><br><span class="line">        <span class="string">&quot;prompt&quot;</span>: prompt,</span><br><span class="line">        <span class="string">&quot;stream&quot;</span>: <span class="literal">False</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 发送POST请求</span></span><br><span class="line">        response = requests.post(url, headers=&#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;, data=json.dumps(json_input))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 检查响应状态码</span></span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>: <span class="comment">#成功</span></span><br><span class="line">            <span class="comment"># 解析JSON响应并提取response字段</span></span><br><span class="line">            json_response = response.json()</span><br><span class="line">            <span class="keyword">return</span> json_response.get(<span class="string">&quot;response&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.error(<span class="string">f&quot;Failed to get response from model. Status code: <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        logging.error(<span class="string">f&quot;An error occurred: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(input_file_path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> input_file:</span><br><span class="line">    lines = input_file.readlines()</span><br><span class="line">results = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_results_and_exit</span>(<span class="params">signum, frame</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_file_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lines)):</span><br><span class="line">            result = <span class="built_in">next</span>((res <span class="keyword">for</span> index, res <span class="keyword">in</span> results <span class="keyword">if</span> index == i), <span class="literal">None</span>)</span><br><span class="line">            <span class="keyword">if</span> result <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                output_file.write(result + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    logging.info(<span class="string">&quot;Results saved to file. Exiting... 多线程无法返回命令提示符，请自行关闭窗口&quot;</span>)</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 捕获中断信号，防止Ctrl+C中断程序</span></span><br><span class="line">signal.signal(signal.SIGINT, save_results_and_exit)</span><br><span class="line"><span class="keyword">with</span> tqdm(total=<span class="built_in">len</span>(lines), desc=<span class="string">&quot;Processing&quot;</span>, unit=<span class="string">&quot;line&quot;</span>) <span class="keyword">as</span> pbar:</span><br><span class="line">    <span class="comment">#并行处理数量</span></span><br><span class="line">    <span class="keyword">with</span> ThreadPoolExecutor(max_workers=num_workers) <span class="keyword">as</span> executor:</span><br><span class="line">        futures = &#123;executor.submit(askLocalQwen2Model, train_prompt + line.strip()): i <span class="keyword">for</span> i, line <span class="keyword">in</span> <span class="built_in">enumerate</span>(lines)&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> future <span class="keyword">in</span> as_completed(futures):</span><br><span class="line">            i = futures[future]</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                result = future.result()</span><br><span class="line">                results.append((i, result))</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                logging.error(<span class="string">f&quot;Error processing line <span class="subst">&#123;i&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">                results.append((i, <span class="string">&quot;&quot;</span>))</span><br><span class="line">            </span><br><span class="line">            pbar.update(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 将结果写入输出文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(output_file_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lines)):</span><br><span class="line">        result = <span class="built_in">next</span>((res <span class="keyword">for</span> index, res <span class="keyword">in</span> results <span class="keyword">if</span> index == i), <span class="literal">None</span>)</span><br><span class="line">        output_file.write(result + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;处理完成，结果已保存到final.txt&quot;</span>)</span><br></pre></td></tr></table></figure><br>但是上述代码有一些问题，例如线程过多会报错，因此优化后的代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor, as_completed</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取输入文件</span></span><br><span class="line">input_file_path = <span class="string">&quot;train_desc.txt&quot;</span> <span class="comment">##输入文件</span></span><br><span class="line">output_file_path = <span class="string">&quot;final_desc.txt&quot;</span> <span class="comment">##输出文件</span></span><br><span class="line">model_name = <span class="string">&quot;qwen2.5-coder:latest&quot;</span> <span class="comment">## 模型名称</span></span><br><span class="line">num_workers = <span class="number">10</span> <span class="comment">## 线程数(目前10最佳)</span></span><br><span class="line"><span class="comment">## 模型提示词（要求）</span></span><br><span class="line">train_prompt = <span class="string">&quot;Please generate only the similar descriptive text without any extra content. The output should be approximately the same length as the input and in English.\n&quot;</span></span><br><span class="line"><span class="comment"># 配置日志记录</span></span><br><span class="line">logging.basicConfig(level=logging.INFO, <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s - %(levelname)s - %(message)s&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">askLocalQwen2Model</span>(<span class="params">prompt, max_retries=<span class="number">3</span></span>):</span><br><span class="line">    url = <span class="string">&quot;http://localhost:11434/api/generate&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建要发送的JSON对象</span></span><br><span class="line">    json_input = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: model_name, </span><br><span class="line">        <span class="string">&quot;prompt&quot;</span>: prompt,</span><br><span class="line">        <span class="string">&quot;stream&quot;</span>: <span class="literal">False</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> attempt <span class="keyword">in</span> <span class="built_in">range</span>(max_retries):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 发送POST请求</span></span><br><span class="line">            response = requests.post(url, headers=&#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;, data=json.dumps(json_input))</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 检查响应状态码</span></span><br><span class="line">            <span class="keyword">if</span> response.status_code == <span class="number">200</span>: <span class="comment">#成功</span></span><br><span class="line">                <span class="comment"># 解析JSON响应并提取response字段</span></span><br><span class="line">                json_response = response.json()</span><br><span class="line">                <span class="keyword">return</span> json_response.get(<span class="string">&quot;response&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                logging.warning(<span class="string">f&quot;Attempt <span class="subst">&#123;attempt + <span class="number">1</span>&#125;</span> failed. Status code: <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">            logging.warning(<span class="string">f&quot;Attempt <span class="subst">&#123;attempt + <span class="number">1</span>&#125;</span> failed: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 如果所有尝试都失败，返回空字符串</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_results_and_exit</span>(<span class="params">signum, frame</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_file_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lines)):</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> processed_indices:</span><br><span class="line">                result = results[processed_indices.index(i)]</span><br><span class="line">                output_file.write(result + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    logging.info(<span class="string">&quot;Results saved to file. Exiting...&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;程序已保存结果并退出。请手动关闭窗口或终端。&quot;</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)  <span class="comment"># 等待一段时间</span></span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line"><span class="comment"># 捕获中断信号，防止Ctrl+C中断程序</span></span><br><span class="line">signal.signal(signal.SIGINT, save_results_and_exit)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(input_file_path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> input_file:</span><br><span class="line">    lines = input_file.readlines()</span><br><span class="line">results = []</span><br><span class="line">processed_indices = []</span><br><span class="line"><span class="keyword">with</span> tqdm(total=<span class="built_in">len</span>(lines), desc=<span class="string">&quot;Processing&quot;</span>, unit=<span class="string">&quot;line&quot;</span>) <span class="keyword">as</span> pbar:</span><br><span class="line">    <span class="comment"># 并行处理数量</span></span><br><span class="line">    <span class="keyword">with</span> ThreadPoolExecutor(max_workers=num_workers) <span class="keyword">as</span> executor:</span><br><span class="line">        futures = &#123;executor.submit(askLocalQwen2Model, train_prompt + line.strip()): i <span class="keyword">for</span> i, line <span class="keyword">in</span> <span class="built_in">enumerate</span>(lines)&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> future <span class="keyword">in</span> as_completed(futures):</span><br><span class="line">            i = futures[future]</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                result = future.result()</span><br><span class="line">                results.append(result)</span><br><span class="line">                processed_indices.append(i)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                logging.error(<span class="string">f&quot;Error processing line <span class="subst">&#123;i&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            pbar.update(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 将结果写入输出文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(output_file_path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lines)):</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> processed_indices:</span><br><span class="line">            result = results[processed_indices.index(i)]</span><br><span class="line">            output_file.write(result + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;处理完成，结果已保存到final_desc.txt&quot;</span>)</span><br></pre></td></tr></table></figure></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></li><li><p>生成文本以后，再通过文本预处理以后生成pkl，我们还可以使用以下代码查看pkl文件的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line">desc_dict = pickle.load(<span class="built_in">open</span>(<span class="string">&#x27;vocab.desc.pkl&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>))</span><br><span class="line"><span class="comment"># desc_dict = pickle.load(open(&#x27;想查看的pkl文件.pkl&#x27;, &#x27;rb&#x27;))</span></span><br><span class="line"><span class="built_in">print</span>(desc_dict)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> GXNU </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> AI </tag>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C和C++学习笔记(二)</title>
      <link href="/2024/10/11/note-cpp-2/"/>
      <url>/2024/10/11/note-cpp-2/</url>
      
        <content type="html"><![CDATA[<h1 id="编程基础"><a href="#编程基础" class="headerlink" title="编程基础"></a>编程基础</h1><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><h3 id="sort简介"><a href="#sort简介" class="headerlink" title="sort简介"></a>sort简介</h3><p>sort函数包含在头文件&lt; algorithm &gt;中<br>在使用前需要#include &lt; algorithm &gt;或使用万能头文件。<br>sort是C++标准库中的一个函数模板，用于对指定范围内的元素进行排序。<br>sort算法使用的是快速排序(QuickSort)或者类似快速排序的改进算法，具有较好的平均时间复杂度，一般为O(nlogn)。</p><h3 id="sort用法"><a href="#sort用法" class="headerlink" title="sort用法"></a>sort用法</h3><p>sort(起始地址，结束地址下一位，*比较函数);<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="comment">//读取数组大小</span></span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="comment">//读取元素</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)cin&gt;&gt;a[i];</span><br><span class="line"><span class="comment">//对数组进行排序</span></span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br></pre></td></tr></table></figure><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化v</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v=&#123;<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">11</span>&#125;;</span><br><span class="line"><span class="comment">//对数组排序</span></span><br><span class="line"><span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)cout&lt;&lt;v[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="comment">//结果：1 3 5 9 11</span></span><br></pre></td></tr></table></figure></p><h3 id="自定义比较函数"><a href="#自定义比较函数" class="headerlink" title="自定义比较函数"></a>自定义比较函数</h3><p>sort默认使用小于号进行排序，如果想要自定义比较规则可以传入第三个参数，可以是函数或lambda表达式<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;u,<span class="type">const</span> <span class="type">int</span> &amp;v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> u&gt;v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//初始化v</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v=&#123;<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">11</span>&#125;;</span><br><span class="line">    <span class="comment">//对数组排序，降序</span></span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)cout&lt;&lt;v[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="comment">//结果：11 9 5 3 1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>lamvda(匿名函数)<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v=&#123;<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">11</span>&#125;;</span><br><span class="line"><span class="comment">//对数组排序，降序排列</span></span><br><span class="line"><span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),[](<span class="type">const</span> <span class="type">int</span> &amp;u, <span class="type">const</span> <span class="type">int</span> &amp;v)&#123;</span><br><span class="line">    <span class="keyword">return</span> u&gt;v;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)cout&lt;&lt;v[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="comment">//结果：11 9 5 3 1</span></span><br></pre></td></tr></table></figure><br>结构体可以将小于号重载后进行排序，当然用前面的方法也是可行的<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Node &amp;m)<span class="type">const</span>&#123;</span><br><span class="line">        <span class="comment">//以u为第一关键字，v为第二关键字排序</span></span><br><span class="line">        <span class="keyword">return</span> u==m.u?v&lt;m.v:u&lt;m.u;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure></p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>题目详见<a href="https://www.lanqiao.cn/problems/1265/learning/">蓝桥OJ：排序</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5e5</span>+<span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//取消同步流</span></span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">  <span class="comment">//输入</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)cin&gt;&gt;a[i];</span><br><span class="line">  <span class="comment">//升序排列</span></span><br><span class="line">  <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; \n&quot;</span>[i==n];<span class="comment">//如果i==n则换行，否则输出空格</span></span><br><span class="line">  <span class="comment">//降序排列lambda法</span></span><br><span class="line">  <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n,[](<span class="type">const</span> <span class="type">int</span> &amp;u,<span class="type">const</span> <span class="type">int</span> &amp;v)&#123;</span><br><span class="line">    <span class="keyword">return</span> u&gt;v;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//或者sort(a+1,a+1+n,cmp);然后再在前面定义bool cmp(int u,int v)&#123;return u&gt;v;&#125;</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; \n&quot;</span>[i==n]; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//或者逆序输出可以在正序排完序以后</span></span><br><span class="line"><span class="comment">//for (int i=1;i&gt;=1;--i)cout&lt;&lt;a[i]&lt;&lt;&quot; \n&quot;[i==n]; </span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="最值查找"><a href="#最值查找" class="headerlink" title="最值查找"></a>最值查找</h2><h2 id="min和max函数"><a href="#min和max函数" class="headerlink" title="min和max函数"></a>min和max函数</h2><p>min(a,b)返回a和b中较小的那个值，只能传入两个值，或传入一个列表。<br>例如:<br>min(3, 5)= 3<br>min({1, 2, 3, 4})=1<br>max(a,b)返回a和b中较大的那个值，只能传入两个值，或传入一个列表。<br>例如:<br>max(7,5)=7<br>min({1, 2, 3, 4})= 4<br>时间复杂度为O(1)，传入参数为数组时时间复杂度为O(n)，n为数组大小。<br>min,max函数是在取最值操作时最常用的操作。</p><h2 id="min-element和max-element"><a href="#min-element和max-element" class="headerlink" title="min_element和max_element"></a>min_element和max_element</h2><p>min_element(st,ed)返回地址[st,ed)中最小的那个值的地址(迭代器)，传入参数为<br>两个地址或迭代器。<br>max_element(st,ed)返回地址[st,ed)中最大的那个值的地址(迭代器)，传入参数为<br>两个地址或迭代器。<br>时间复杂度均为0(n)，n为数组大小(由传入的参数决定)<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化v</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v=&#123;<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">11</span>&#125;;</span><br><span class="line"><span class="comment">//输出最大的元素，*表示解引用，即通过地址(迭代器)得到值</span></span><br><span class="line">cout &lt;&lt; *<span class="built_in">max_element</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>())&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="comment">//输出11</span></span><br></pre></td></tr></table></figure></p><h3 id="nth-element函数"><a href="#nth-element函数" class="headerlink" title="nth_element函数"></a>nth_element函数</h3><p>nth_element(st, k, ed)<br>进行部分排序，返回值为void()<br>传入参数为三个地址或迭代器。其中第二个参数位置的元素将处于正确位置，其他位置元素的顺序可能是任意的，但前面的都比它小，后面的都比它大。<br>时间复杂度O(n)。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化v</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v=&#123;<span class="number">5</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">18</span>,<span class="number">9</span>&#125;;</span><br><span class="line"><span class="comment">//输出最大的元素，*表示解引用，即通过地址(迭代器)得到值</span></span><br><span class="line"><span class="built_in">nth_element</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">begin</span>()+<span class="number">3</span>,v.<span class="built_in">end</span>());</span><br><span class="line"><span class="comment">//这里v[3]的位置将会位于排序后的位置，其他的任意</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i : v)cout&lt;&lt; i&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="comment">//输出：3 1 5 7 9 18 10</span></span><br></pre></td></tr></table></figure></p><h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><p>题目详见<a href="https://www.lanqiao.cn/problems/497/learning/">蓝桥OJ：成绩分析</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll=<span class="type">long</span> <span class="type">long</span>;<span class="comment">//定义ll为long long的别名</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e4</span>+<span class="number">9</span>;<span class="comment">//题目范围10^4+8，这里+9是为了防止数组越界</span></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)cin&gt;&gt;a[i];</span><br><span class="line">  cout&lt;&lt; *<span class="built_in">max_element</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;<span class="comment">//最高分</span></span><br><span class="line">  cout&lt;&lt; *<span class="built_in">min_element</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;<span class="comment">//最低分</span></span><br><span class="line">  ll sum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)sum+=a[i];<span class="comment">//求和</span></span><br><span class="line">  cout&lt;&lt;fixed&lt;&lt;<span class="built_in">setprecision</span>(<span class="number">2</span>)&lt;&lt;<span class="number">1.0</span>*sum/n;<span class="comment">//求平均，强制转化浮点型，保留两位小数</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><h3 id="二分查找的前提"><a href="#二分查找的前提" class="headerlink" title="二分查找的前提"></a>二分查找的前提</h3><p>库函数只能对数组进行二分查找。<br>对一个数组进行二分查找的前提是这个数组中的元素是单调的，一般为单调不减，当然如果是单调不增也可以(需要修改比较函数，类似sort)<br>例如:<br>[1,5,5,9,18]是单调的<br>[1,9,9,7,15]不是单调的<br>[9,8,8,7,7,1]是单调的</p><h3 id="binary-search函数"><a href="#binary-search函数" class="headerlink" title="binary_search函数"></a>binary_search函数</h3><p>binary_search是C++标准库中的一个算法函数，用于在已排序的序列(例如数组或容器)中查找特定元素。<br>它通过<code>二分查找</code>算法来确定序列中<code>是否存在</code>目标元素。<br>函数返回一个<code>bool值</code>，表示目标元素是否存在于序列中。<br>如果需要获取找到的元素的位置，可以使用<br>std::lower bound函数或<br>std::upper_bound函数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt;numbers=&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> target = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 binary_search 查找目标元素</span></span><br><span class="line"><span class="type">bool</span> found = <span class="built_in">binary_search</span>(numbers.<span class="built_in">begin</span>(), numbers.<span class="built_in">end</span>(), target);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(found)&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Target element &quot;</span>&lt;&lt; target &lt;&lt;<span class="string">&quot; found.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Target element&quot;</span>&lt;&lt; target &lt;&lt;<span class="string">&quot; not found.&quot;</span>&lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="lower-bound和upper-bound函数"><a href="#lower-bound和upper-bound函数" class="headerlink" title="lower_bound和upper_bound函数"></a>lower_bound和upper_bound函数</h3><p>前提:数组必须为非降序。<br>如果要在非升序的数组中使用，可以通过修改比较函数实现(方法与sort自定义比较函数类似)<br>lower_bound(st,ed,x)返回地址[st,ed)中第一个大于等于x的元素的<code>地址</code>。<br>upper_bound(st,ed,x)返回地址[st,ed)中第一个大于x的元素的<code>地址</code>。<br>如果不存在则返回最后一个元素的下一个位置，在vector中即end()。<br><code>地址-首地址=下标</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化v</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v=&#123;<span class="number">5</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">3</span>，<span class="number">10</span>，<span class="number">18</span>,<span class="number">9</span>&#125;;</span><br><span class="line"><span class="built_in">sort</span>(v.<span class="built_in">begin</span>()，v.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i : v)cout&lt;&lt; i &lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//找到数组中第一个大于等于8的元素的位置</span></span><br><span class="line">cout&lt;&lt;(<span class="built_in">lower_bound</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>(),<span class="number">8</span>)- v.<span class="built_in">begin</span>())&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure></p><h3 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h3><p>题目详见<a href="https://www.lanqiao.cn/problems/1389/learning/">蓝桥OJ：二分查找数组元素</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> data[<span class="number">200</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">200</span> ; i ++)data[i] = <span class="number">4</span> * i + <span class="number">6</span>;</span><br><span class="line">  <span class="type">int</span> target;cin&gt;&gt;target;</span><br><span class="line">  cout&lt;&lt;(<span class="built_in">lower_bound</span>(data,data+<span class="number">200</span>,target)-data);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h2><h3 id="islower-isupper函数"><a href="#islower-isupper函数" class="headerlink" title="islower/isupper函数"></a>islower/isupper函数</h3><p>islower和isupper是C++标准库中的字符分类函数，用于检查一个字符是否为小写字母或大写字母，islower和isupper函数需要包含头文件&lt; cctype &gt;，也可用万能头文件包含。<br>函数返回值为<code>bool</code>。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> ch1 =<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="type">char</span> ch2 = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line"><span class="comment">// 使用 islower 函数判断字符是否为小写字母</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">islower</span>(ch1))&#123;</span><br><span class="line">cout&lt;&lt;ch1&lt;&lt;<span class="string">&quot;is a lowercase letter.&quot;</span>&lt;&lt; endl;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">cout&lt;&lt; ch1&lt;&lt;<span class="string">&quot;is not a lowercase letter.&quot;</span>&lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用 isupper 函数判断字符是否为大写字母</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isupper</span>(ch2))&#123;</span><br><span class="line">cout &lt;&lt; ch2&lt;&lt;<span class="string">&quot; is an uppercase letter.&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cout&lt;&lt; ch2 &lt;&lt;<span class="string">&quot; is not an uppercase letter.&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="tolower-toupper函数"><a href="#tolower-toupper函数" class="headerlink" title="tolower/toupper函数"></a>tolower/toupper函数</h3><p>tolower(char ch)可以将ch转换为小写字母，如果ch不是大写字母则不进行操作。<br>toupper()同理。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> ch1 =<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="type">char</span> ch2 =<span class="string">&#x27;b&#x27;</span></span><br><span class="line"><span class="comment">//使用 tolower 函数将字符转换为小写字母</span></span><br><span class="line"><span class="type">char</span> lowercasech1 = <span class="built_in">tolower</span>(ch1);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Lowercase of &quot;</span>&lt;&lt; ch1&lt;&lt;<span class="string">&quot;is &quot;</span>&lt;&lt; lowercasech1 &lt;&lt; endl;</span><br><span class="line"><span class="comment">//使用 toupper 函数将字符转换为大写字母</span></span><br><span class="line"><span class="type">char</span> uppercasech2 =<span class="built_in">toupper</span>(ch2);</span><br><span class="line">cout&lt;&lt; <span class="string">&quot;Uppercase of &quot;</span>&lt;&lt; ch2&lt;&lt;<span class="string">&quot;is &quot;</span>&lt;&lt; uppercasech2 &lt;&lt; endl;</span><br></pre></td></tr></table></figure></p><h3 id="ASCII码"><a href="#ASCII码" class="headerlink" title="ASCII码"></a>ASCII码</h3><p>详见<a href="https://www.asciim.cn/">ASCII码表</a><br>char ~ 8bit,2^8种可能，0~127为标准ASCII码，128~255为扩展ASCII码。<br>从48号开始，0~9的ASCII码依次为48~57，A~Z的ASCII码依次为65~90，a~z的ASCII码依次为97~122。<br><code>ASCII码表中，大写字母的ASCII码比小写字母的ASCII码小32。</code><br>在了解了ascii码后，我们可以通过直接对英文字母进行加减运算计算出其大小写的字符。<br>在ASCII码表中，大写字母的编码范围是65(A)到90(Z)，而小写字母的编码范围<br>是97(‘a’)到122(z)。根据这个规则，可以使用ASCII码表进行大小写转换。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> ch=<span class="string">&#x27;A&#x27;</span>; <span class="comment">// 大写字母</span></span><br><span class="line"><span class="type">char</span> convertedch;</span><br><span class="line"><span class="keyword">if</span>(ch &gt;= <span class="string">&#x27;A&#x27;</span>&amp;&amp; ch &lt;= <span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line"><span class="comment">// 大写字母转换为小写字母</span></span><br><span class="line">convertedch=ch+<span class="number">32</span>;<span class="comment">//更推荐ch-&#x27;A+&#x27;a&#x27;的写法</span></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Converted character:&quot;</span></span><br><span class="line">&lt;&lt; convertedch&lt;&lt; endl;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ch &gt;= <span class="string">&#x27;a&#x27;</span>&amp;&amp; ch&lt;= <span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line"><span class="comment">// 小写字母转换为大写字母</span></span><br><span class="line">convertedch=ch<span class="number">-32</span>;<span class="comment">//更推荐ch-&#x27;a+&#x27;A&#x27;的写法</span></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;converted character:&quot;</span></span><br><span class="line">&lt;&lt; convertedch&lt;&lt; endl;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Invalid character!&quot;</span>&lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><code>Tips</code>:在程序设计时，尤其是用到char类型时<br>一定要注意0~9到底是“数字0~9”还是“字符0~9”<br>它们也可以通过ascii进行转换。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">convertedch</span><span class="params">(<span class="type">char</span> ch)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">islower</span>(ch))ch=<span class="built_in">touper</span>(ch);<span class="comment">//if(&#x27;a&#x27;&lt;= ch &amp;&amp; ch&lt;=&#x27;z&#x27;)ch = ch-&#x27;a&#x27;+&#x27;A&#x27;;</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isupper</span>(ch))ch=<span class="built_in">tolower</span>(ch);<span class="comment">//else if(&#x27;A&#x27;&lt;= ch &amp;&amp; ch&lt;=&#x27;Z&#x27;)ch = ch-&#x27;A&#x27;+&#x27;a&#x27;;</span></span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;<span class="built_in">getline</span>(cin, s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i : s)</span><br><span class="line">        i = <span class="built_in">convertedch</span>(i);</span><br><span class="line">    cout&lt;&lt; s&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="全排列"><a href="#全排列" class="headerlink" title="全排列"></a>全排列</h2><h3 id="next-permutation-函数"><a href="#next-permutation-函数" class="headerlink" title="next_permutation()函数"></a>next_permutation()函数</h3><p>next_permutation函数用于生成当前序列的下一个排列。它按照字典序对序列进行重新排列，如果存在下一个排列，则将当前序列更改为下一个排列，并返回true;如果当前序列已经是最后一个排列，则将序列更改为第一个排列，并返回 false。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt;nums=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Initial permutation:&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> num :nums)&#123;</span><br><span class="line">cout &lt;&lt; num&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成下一个排列</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">next_permutation</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>()))&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Next permutation:&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> num :nums)&#123;</span><br><span class="line">    cout &lt;&lt; num &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 123</span></span><br><span class="line"><span class="comment">// 132</span></span><br><span class="line"><span class="comment">// 213</span></span><br><span class="line"><span class="comment">// 231</span></span><br><span class="line"><span class="comment">// 312</span></span><br><span class="line"><span class="comment">// 321</span></span><br></pre></td></tr></table></figure></p><h3 id="prev-permutation-函数"><a href="#prev-permutation-函数" class="headerlink" title="prev_permutation()函数"></a>prev_permutation()函数</h3><p>prev_permutation函数与next_permutation函数相反，它用于生成当前序列的上一个排列。它按照字典序对序列进行重新排列，如果存在上一个排列，则将当前序列更改为上一个排列，并返回true;如果当前序列已经是第一个排列，则将序列更改为最后一个排列，并返回false。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt;nums2 =&#123;<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Initial permutation:&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> num : nums2)&#123;</span><br><span class="line">    cout &lt;&lt; num&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成上一个排列</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">prev_permutation</span>(nums2.<span class="built_in">begin</span>(),nums2.<span class="built_in">end</span>()))&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Previous permutation:&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> num :nums2)&#123;</span><br><span class="line">        cout &lt;&lt; num &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 321</span></span><br><span class="line"><span class="comment">// 312</span></span><br><span class="line"><span class="comment">// 231</span></span><br><span class="line"><span class="comment">// 213</span></span><br><span class="line"><span class="comment">// 132</span></span><br><span class="line"><span class="comment">// 123</span></span><br></pre></td></tr></table></figure></p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i &lt;= <span class="number">4</span>;++i)a[i]=i;</span><br><span class="line">    <span class="comment">//哪怕是从中间开始，也最终输出4 3 2 1截止</span></span><br><span class="line">    <span class="type">bool</span> tag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span>(tag)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i &lt;= <span class="number">4</span>;++i)cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        tag = <span class="built_in">next_permutation</span>(a+<span class="number">1</span>,a+<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i &lt;= <span class="number">4</span>;++i)cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 1 2 3 4</span></span><br><span class="line"><span class="comment">// 1 3 2 4</span></span><br><span class="line"><span class="comment">// 1 3 4 2</span></span><br><span class="line"><span class="comment">// 1 4 2 3</span></span><br><span class="line"><span class="comment">// 1 4 3 2</span></span><br><span class="line"><span class="comment">// 2 1 3 4</span></span><br><span class="line"><span class="comment">// 2 1 4 3</span></span><br><span class="line"><span class="comment">// 2 3 1 4</span></span><br><span class="line"><span class="comment">// 2 3 4 1</span></span><br><span class="line"><span class="comment">// 2 4 1 3</span></span><br><span class="line"><span class="comment">// 2 4 3 1</span></span><br><span class="line"><span class="comment">// 3 1 2 4</span></span><br><span class="line"><span class="comment">// 3 1 4 2</span></span><br><span class="line"><span class="comment">// 3 2 1 4</span></span><br><span class="line"><span class="comment">// 3 2 4 1</span></span><br><span class="line"><span class="comment">// 3 4 1 2</span></span><br><span class="line"><span class="comment">// 3 4 2 1</span></span><br><span class="line"><span class="comment">// 4 1 2 3</span></span><br><span class="line"><span class="comment">// 4 1 3 2</span></span><br><span class="line"><span class="comment">// 4 2 1 3</span></span><br><span class="line"><span class="comment">// 4 2 3 1</span></span><br><span class="line"><span class="comment">// 4 3 1 2</span></span><br><span class="line"><span class="comment">// 4 3 2 1</span></span><br><span class="line"><span class="comment">// 1 2 3 4</span></span><br></pre></td></tr></table></figure><h2 id="其他库函数"><a href="#其他库函数" class="headerlink" title="其他库函数"></a>其他库函数</h2><p>（万能头文件&lt; bits/stdc++.h &gt;就能省略其他库了）</p><h3 id="memset"><a href="#memset" class="headerlink" title="memset()"></a>memset()</h3><p>memset()是一个用于设置内存块值的函数。它的原型定义在&lt; cstring &gt;头文件中，函数声明如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> *<span class="title">memset</span><span class="params">(<span class="type">void</span> *ptr, <span class="type">int</span> value, <span class="type">size_t</span> num)</span></span>;</span><br></pre></td></tr></table></figure><br>memset()函数接受三个参数:<br>1.ptr:指向要设置值的内存块的指针。<br>2.value:要设置的值，通常是一个整数。<br>3.num:要设置的字节数。（Byte=8bit）<br>memset()函数将ptr指向的内存块的前num个字节设置为value的值。它返回一个指向ptr的指针。<br>memset()函数通常用于初始化内存块，将其设置为特定的值。<br>例如，如果要将一个整型数组的所有元素设置为0，可以使用memset()函数如下<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">memset</span>(arr,<span class="number">0</span>,<span class="built_in">sizeof</span>(arr));</span><br></pre></td></tr></table></figure><br>在上述示例中，<br><code>memset(arr,0,sizeof(arr))</code>将数组arr的所有元素设置为0。<br>需要注意的是，memset()函数对于非字符类型的数组可能会产生未定义行为。<br>在处理非字符类型的数组时，更好使用C++中的其他方法，如循环遍历来初始化数组。<br>memset会将每个byte设置为value。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> a[<span class="number">5</span>];</span><br><span class="line"> <span class="built_in">memset</span>(a,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> a);<span class="comment">//memset(a,0,sizeof(a));(0x3f二进制字节中为0011 1111)</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;++i)cout &lt;&lt; <span class="built_in">bitset</span>&lt;<span class="number">32</span>&gt;(a[i]) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="swap"><a href="#swap" class="headerlink" title="swap()"></a>swap()</h3><p>swap(T &amp;a,T &amp;b)函数接受两个参数:<br>要交换值的第一个变量的引用。<br>1.a:要交换值的第二个变量的引用<br>2.b:swap()函数通过将第一个变量的值存储到临时变量中，然后将第二个变量的值赋给第一个变量，最后将临时变量的值赋给第二个变量，实现两个变量值的交换。<br>swap()函数可以用于交换任意类型的变量，包括基本类型(如整数、浮点数等)和自定义类型(如结构体、类对象等)。<br>以下是一个示例，展示如何使用swap()函数交换两个整数的值:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">std::<span class="built_in">swap</span>(a,b);</span><br></pre></td></tr></table></figure></p><h3 id="reverse"><a href="#reverse" class="headerlink" title="reverse()"></a>reverse()</h3><p>reverse()是一个用于反转容器中元素顺序的函数。<br>它的原型定义在&lt; algorithm &gt;头文件中，函数的声明如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">BidirIt</span>&gt;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reverse</span> <span class="params">(BidirIt first, BidirIt last)</span></span>;</span><br></pre></td></tr></table></figure><br>reverse()函数接受两个参数:<br>1.first:指向容器中要反转的第一个元素的迭代器<br>2.last:指向容器中要反转的最后一个元素的下一个位置的迭代器。<br>reverse()函数将[first, last)范围内的元素顺序进行反转。<br>也就是说，它会将[first,last)范围内的元素按相反的顺序重新排列。<br>reverse()函数可用于反转各种类型的容器，包括数组、向量、链表等。<br>以下是一个示例，展示如何使用reverse()函数反转一个整型向量的元素顺序:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    std::vector&lt;<span class="type">int</span>&gt;vec=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    std::<span class="built_in">reverse</span>(vec.<span class="built_in">begin</span>(),vec.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> num :vec)&#123;</span><br><span class="line">        std::cout&lt;&lt; num&lt;&lt;“</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="unique"><a href="#unique" class="headerlink" title="unique()"></a>unique()</h3><p>unique()是一个用于去除容器中<code>相邻</code>重复元素的函数,<br>它的原型定义在&lt; algorithm &gt;头文件中，函数的声明如下<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">ForwardIt</span>&gt;</span><br><span class="line"><span class="function">ForwardIt <span class="title">unique</span> <span class="params">(ForwardIt first, ForwardIt last)</span></span>;</span><br></pre></td></tr></table></figure><br>unique(first, last)函数接受两个参数:<br>1.first:指向容器中要去重的第一个元素的迭代器,<br>2.last:指向容器中要去重的最后一个元素的下一个位置的迭代器。<br>unique()函数将[first,last)范围内的相邻重复元素去除，并返回一个指向去重后范围的尾后迭代器。去重后的范围中只保留了第一个出现的元素，后续重复的元素都被移除。<br>unique()函数可用于去除各种类型的容器中的相邻重复元素，包括数组、向量、链表等。<br>以下是一个示例，展示如何使用unique()函数去除一个整型向量中的相邻重复元素:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    std::vector&lt;<span class="type">int</span>&gt;vec=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">auto</span> it = std::<span class="built_in">unique</span>(vec.<span class="built_in">begin</span>(),vec.<span class="built_in">end</span>());<span class="comment">//1234512334</span></span><br><span class="line">    vec.<span class="built_in">erase</span>(it,vec.<span class="built_in">end</span>());<span class="comment">//12345</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> num :vec)&#123;</span><br><span class="line">        std::cout&lt;&lt; num&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    std::cout&lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>在上述示例中，std::unique(vec.begin(),vec.end())将整型向量vec中的相邻重复元素去除。最终输出的结果是1 2 3 4 5.<br>需要注意的是，unigue()函数只能去除相邻的重复元素，如果容器中存在非相邻的重复元素，则无法去除。<br>如果需要去除所有重复元素，而不仅仅是相邻的重复元素，可对容器进行排序，然后再使用unique()函数。<br>unique()时间复杂度为O(n).<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[]= &#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="built_in">sort</span>(a,a+<span class="number">5</span>);<span class="comment">//必需排序，不然输出结果是3 1 2 3</span></span><br><span class="line">    <span class="type">int</span> n = <span class="built_in">unique</span>(a,a+<span class="number">5</span>)-a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C和C++学习笔记(一)</title>
      <link href="/2024/10/07/note-cpp-1/"/>
      <url>/2024/10/07/note-cpp-1/</url>
      
        <content type="html"><![CDATA[<h1 id="编程基础"><a href="#编程基础" class="headerlink" title="编程基础"></a>编程基础</h1><h2 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h2><p>C++98 (ISO/IEC 14882:1998):C++的第一个版本于 1998年10月发布。有一些较老的oj在使用。<br>C++03 (ISO/IEC 14882:2003):在这个版本的c++中，值初始化(<code>int i=1;</code>)是在2003年2月引入的。<br><code>C++11(蓝桥杯选用)</code>:它于 2011年8月发布。这个 C++修订版引入了 Lambda 表达式、委托构造函数、统一初始化语法、自动类型推导auto、nullptr、decltype、Rvalue、References 等。<br>C++14：它于 2014年8月发布。此版本中添加的功能包括多态lambda、数字分隔符、通用lambda捕获、变量模板、二进制整数文字、引用字符串等。<br>C++17:它于 2017年 12月发布。它引入了折叠表达式、十六进制浮点文字、u8字符文字、带有初始化程序的选择语句、内联变量等。<br>C++20:它于 2020年12月发布。包括的一些新功能包括:测试宏3路比较、运算符&lt;=&gt;和运算符==()=默认值、新属性:[[no_unique_address]]、[[likely]]</p><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><p><code>int</code> 整数<br><code>lomg long</code> 长整<br><code>float</code> 单精度浮点型（小数）<br><code>double</code> 双精度浮点型（小数）<br><code>char</code> 字符<br><code>chan[]</code> 字符串（数组）<br><code>bool</code> 布尔型（true/false），输出是1/0。</p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p><code>#define</code> 定义常量，如<code>#define PI 3.14</code>，使用时<code>PI</code>就是<code>3.14</code>。<br><code>const</code> 定义常量，如<code>const int PI = 3.14</code>，使用时<code>PI</code>就是<code>3.14</code>。</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p><code>int a = 1;</code> 定义变量a，并赋值为1。<br><code>int a;</code> 定义变量a，不赋值。<br><code>int a, b, c;</code> 定义多个变量。<br><code>int a[n];</code> 定义数组，n为数组长度。,元素下标为a[0]~a[n-1]。（注意，n必须为常量（不会变化的））。</p><h2 id="C-代码格式与语法基础"><a href="#C-代码格式与语法基础" class="headerlink" title="C++代码格式与语法基础"></a>C++代码格式与语法基础</h2><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello, World!"></a>Hello, World!</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">代码</button><button type="button" class="tab " data-href="test1-2">输入输出</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//使用万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;<span class="comment">//使用标准命名空间</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span><span class="comment">//main函数是c++中内置的启动函数，也就是程序入口</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Hello, World!&quot;</span>;<span class="comment">//利用cout将字符串输出，字符串用双引号括起来</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello, World!&quot;</span>);<span class="comment">//利用printf将字符串输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//函数遇到return会立刻结束。返回0表示main函数正常结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>输出<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello, World!</span><br><span class="line">Hello, World!</span><br></pre></td></tr></table></figure></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="基本数据类型-1"><a href="#基本数据类型-1" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">代码</button><button type="button" class="tab " data-href="test1-2">输入输出</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//使用万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;<span class="comment">//使用标准命名空间</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span><span class="comment">//main函数是c++中内置的启动函数，也就是程序入口</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">3</span>;<span class="comment">//整数型x=3</span></span><br><span class="line">    <span class="type">double</span> d=<span class="number">3.14</span>;<span class="comment">//浮点型（小数）d=3.14</span></span><br><span class="line">    <span class="type">char</span> ch =<span class="string">&#x27;A&#x27;</span><span class="comment">//字符ch</span></span><br><span class="line">    <span class="type">char</span> s[]=<span class="string">&quot;Hello&quot;</span>;<span class="comment">//字符串s</span></span><br><span class="line">    <span class="type">bool</span> b=<span class="literal">true</span>;<span class="comment">//布尔型(即真假值)b</span></span><br><span class="line"></span><br><span class="line">    cout&lt;&lt;x&lt;&lt;endl;<span class="comment">//输出整数x，endl表示换行</span></span><br><span class="line">    cout&lt;&lt;d&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;<span class="comment">//输出浮点数d，&#x27;\n&#x27;表示换行,\n换行会更快</span></span><br><span class="line">    cout&lt;&lt;ch&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;<span class="comment">//输出字符ch</span></span><br><span class="line">    cout&lt;&lt;s&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;<span class="comment">//输出字符串s</span></span><br><span class="line">    cout&lt;&lt;b&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;<span class="comment">//输出布尔型b</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//函数遇到return会立刻结束。返回0表示main函数正常结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>输出<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">3.14</span></span><br><span class="line">A</span><br><span class="line">Hello</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="示例代码1（数组）"><a href="#示例代码1（数组）" class="headerlink" title="示例代码1（数组）"></a>示例代码1（数组）</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//const表示常量，后续不可被修改</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">9</span>;</span><br><span class="line"><span class="type">int</span> a[N];<span class="comment">//开一个大小为N的全局数组，下标为[0,N-1]，自动初始化为0（全局变量自动声明）</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例代码2-typedef"><a href="#示例代码2-typedef" class="headerlink" title="示例代码2(typedef)"></a>示例代码2(typedef)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;<span class="comment">//typedef可以给类型起别名，如ll表示long long</span></span><br><span class="line"><span class="comment">//const表示常量，后续不可被修改</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">9</span>;</span><br><span class="line"><span class="comment">//开一个大小为N的全局数组(类型为long long)，下标为[0,N-1]，自动初始化为0（全局变量自动声明）</span></span><br><span class="line">ll a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例代码3-字符串"><a href="#示例代码3-字符串" class="headerlink" title="示例代码3(字符串)"></a>示例代码3(字符串)</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">代码</button><button type="button" class="tab " data-href="test1-2">输入输出</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[]=<span class="string">&quot;Hello&quot;</span><span class="comment">//长度为5的数组，下标区间为[0,4]</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;++i)<span class="comment">//数组下标从0开始，for(初始化;结束条件;后语句，一次循环结束执行)</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;s[i];<span class="comment">//字符串s中下标为i的元素</span></span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;<span class="comment">//换行</span></span><br><span class="line">    cout&lt;&lt;s&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;<span class="comment">//输出s(遇到\0结束)，并换行</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>输出<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello</span><br><span class="line">Hello</span><br></pre></td></tr></table></figure></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="示例代码4-交换变量"><a href="#示例代码4-交换变量" class="headerlink" title="示例代码4(交换变量)"></a>示例代码4(交换变量)</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">代码</button><button type="button" class="tab " data-href="test1-2">输入输出</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">5</span>,b=<span class="number">3</span>;<span class="comment">//初始化变量a,b</span></span><br><span class="line">    <span class="type">int</span> tmp=b;<span class="comment">//定义临时变量tmp</span></span><br><span class="line">    b=a;<span class="comment">//a的值给b</span></span><br><span class="line">    a=tmp;<span class="comment">//tmp的值给a</span></span><br><span class="line">    cout&lt;&lt;a&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;b&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;<span class="comment">//输出a,b的值</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>输出<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="示例代码5-判断"><a href="#示例代码5-判断" class="headerlink" title="示例代码5(判断)"></a>示例代码5(判断)</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">代码</button><button type="button" class="tab " data-href="test1-2">输入输出</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//输出1~n中所有偶数</span></span><br><span class="line">    <span class="type">int</span> n=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//如果后面不加大括号则仅执行一条语句</span></span><br><span class="line">        <span class="comment">//i%2==0表述i除以2余数为0</span></span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)cout&lt;&lt;i&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>输出<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h2><h3 id="scnanf和printf"><a href="#scnanf和printf" class="headerlink" title="scnanf和printf"></a>scnanf和printf</h3><p>scanf和printf的优势：<br>1.格式化和输出<br>2.效率高<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);<span class="comment">//&amp;取址符and；输入2 9</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d, %d\n&quot;</span>, a, b);<span class="comment">//输出2, 9</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;a, &amp;b);<span class="comment">//输入3 5</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f, %.3f\n&quot;</span>, a, b);<span class="comment">//输出3.00, 5.000(自动四舍五入)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c %c&quot;</span>, &amp;a, &amp;b);<span class="comment">//输入a b</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c, %c\n&quot;</span>, a, b);<span class="comment">//输出a, b,\n换行</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);<span class="comment">//输入abc这里因为本来就是指针形式，所以不用&amp;</span></span><br><span class="line">    <span class="comment">//scanf遇到空格或换行符就停止</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s);<span class="comment">//输出abc</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">15</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%[^\n]&quot;</span>, s);<span class="comment">//[]中是正则表达式，表示只要不是回车就读入。^上尖号表示排除。\n回车转义字符</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s);<span class="comment">//输出abc</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>常见类型<br>int <code>%d</code>或<code>%i</code>(少用)<br>double <code>%lf</code><br>char <code>%c</code><br>char[] <code>%s</code><br>string <code>%s</code><br>long long <code>%lld</code></p><h3 id="cin-和-cout"><a href="#cin-和-cout" class="headerlink" title="cin 和 cout"></a>cin 和 cout</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;<span class="comment">//输入2 9</span></span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b &lt;&lt; endl;<span class="comment">//输出2 9</span></span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> c,d;</span><br><span class="line">    cin&gt;&gt;c&gt;&gt;d;<span class="comment">//输入3 5</span></span><br><span class="line">    cout&lt;&lt;c&lt;&lt;d;<span class="comment">//输出35</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">double</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;<span class="comment">//输入3 5</span></span><br><span class="line">    cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; a &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">3</span>) &lt;&lt; b &lt;&lt; endl;<span class="comment">//输出3.00, 5.000(自动四舍五入)</span></span><br><span class="line">    <span class="comment">//fixed表示固定小数点，setprecision表示保留几位小数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    cin &gt;&gt; ch;<span class="comment">//输入a</span></span><br><span class="line">    cout &lt;&lt; ch &lt;&lt; endl;<span class="comment">//输出a</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">10</span>];</span><br><span class="line">    cin &gt;&gt; s;<span class="comment">//输入lan qiao</span></span><br><span class="line">    cout&lt;&lt; s &lt;&lt; endl;<span class="comment">//输出lan,因为遇到空格或回车就停止</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="built_in">getline</span>(cin, s);<span class="comment">//输入lan qiao 这里的避免了cin遇到空格或回车就停止</span></span><br><span class="line">    cout&lt;&lt; s &lt;&lt; endl;<span class="comment">//输出lan qiao</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="取消同步流"><a href="#取消同步流" class="headerlink" title="取消同步流"></a>取消同步流</h3><p>由于cin和cout需要自动判断变量类型等内部原因flash()，读写效率比scanf和printf更低。当数据量较大时，可能导致程序运行超时,我们可以通过取消同步流来加速cin和cout，加速后效率相差无几。<br><code>注意，最好不要cin/cout和scanf/printf混用，防止出问题</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//取消同步流</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//其他操作不变</span></span><br><span class="line">    <span class="type">int</span> x;cin&gt;&gt;x;</span><br><span class="line">    cout&lt;&lt;x&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;<span class="comment">//取消后换行用\n</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="代码示例1"><a href="#代码示例1" class="headerlink" title="代码示例1"></a>代码示例1</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">150</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//取消同步流</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;<span class="comment">//输入数组大小</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin&gt;&gt;a[i];<span class="comment">//遍历输入数组元素</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 输入5</span></span><br><span class="line">    <span class="comment">// 1 2 3 4 5</span></span><br><span class="line">    <span class="comment">// 输出5 4 3 2 1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码示例2"><a href="#代码示例2" class="headerlink" title="代码示例2"></a>代码示例2</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">150</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//取消同步流</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    cin&gt;&gt;s+<span class="number">1</span>;<span class="comment">//从s[1]开始输入</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;s[i];++i) cout&lt;&lt;s[i];<span class="comment">//从s[1]开始输出，i=1;中间结束条件是s[i]≠&#x27;\0&#x27;的省略写法</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 输入lanqiao</span></span><br><span class="line">    <span class="comment">// 输出lanqiao</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码示例3"><a href="#代码示例3" class="headerlink" title="代码示例3"></a>代码示例3</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">150</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);<span class="comment">//不用取址符号</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;s[i];++i) cout&lt;&lt;s[i]&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;<span class="comment">//注意以后不要混用scanf和cin</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 输入lanqiao</span></span><br><span class="line">    <span class="comment">// 输出l</span></span><br><span class="line">    <span class="comment">// a</span></span><br><span class="line">    <span class="comment">// n</span></span><br><span class="line">    <span class="comment">// q</span></span><br><span class="line">    <span class="comment">// i</span></span><br><span class="line">    <span class="comment">// a</span></span><br><span class="line">    <span class="comment">// o</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码示例4"><a href="#代码示例4" class="headerlink" title="代码示例4"></a>代码示例4</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">150</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) sum+=a[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,sum);<span class="comment">//保留两位小数，自动四舍五入</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 输入5</span></span><br><span class="line">    <span class="comment">//1.0 2.313 6.22 5.47 9.299</span></span><br><span class="line">    <span class="comment">// 输出24.30</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例题目"><a href="#示例题目" class="headerlink" title="示例题目"></a>示例题目</h3><p>题目详见<a href="https://www.lanqiao.cn/problems/254/learning/">蓝桥OJ：A+B问题</a><br>在里面好好练习输入输出吧，顺便练习一下取消同步流。</p><h2 id="String的使用"><a href="#String的使用" class="headerlink" title="String的使用"></a>String的使用</h2><h3 id="string简介"><a href="#string简介" class="headerlink" title="string简介"></a>string简介</h3><p>string是C++标准库的重要组成部分，主要用于字符串处理。<br>使用string库需要在头文件中包括该库#include<string><br>string与char[]不同，string实现了高度的封装，可以很方便地完成各种字符串的操作，比如拼接、截取、匹配等等。</p><ol><li>字符串管理:string封装了字符串的存储和管理。它自动处理字符串的内存分配和释放，避免了手动管理内存的麻烦。</li><li>动态大小调整:string可以根据需要自动调整字符串的大小。在添加或删除字符时，string会自动调整内部的存储容量，确保足够的空间来容纳字符串。</li><li>安全性:string提供了一些方法来确保字符串的安全性。例如，它提供了越界访问检查，以避免访问超出字符串范围的字符。</li><li>迭代器支持:string支持迭代器，可以使用迭代器遍历字符串中的字符，进行字符级别的操作。</li><li>兼容性:string是C++标准库的一部分，因此在C++中广泛使用，并且与其他标准库组件和C++语言特性兼容。<h3 id="string的声明与初始化"><a href="#string的声明与初始化" class="headerlink" title="string的声明与初始化"></a>string的声明与初始化</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">代码</button><button type="button" class="tab " data-href="test1-2">输入输出</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//如果用了using namespace std;则不需要std::</span></span><br><span class="line">    <span class="comment">//声明并初始化一个空字符串</span></span><br><span class="line">    std::string str1;</span><br><span class="line">    <span class="comment">//使用字符串字面量初始化字符串</span></span><br><span class="line">    std::string str2 = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">    <span class="comment">//使用另一个string对象来初始化字符串</span></span><br><span class="line">    std::string str3=str2;</span><br><span class="line">    <span class="comment">//使用部分字符串初始化字符串，从第0位开始，选5位</span></span><br><span class="line">    std::string str4 = str2.<span class="built_in">substr</span>(<span class="number">0</span>, <span class="number">5</span>);;</span><br><span class="line">    <span class="comment">//使用字符数组初始化字符串</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* charArray=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    <span class="function">std::string <span class="title">str5</span><span class="params">(charArrary)</span></span>;</span><br><span class="line">    <span class="comment">//使用重复字符初始化字符串AAAAA</span></span><br><span class="line">    <span class="function">std::string <span class="title">str6</span><span class="params">(<span class="number">5</span>, <span class="string">&#x27;A&#x27;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    std::cout &lt;&lt; str1 &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; str2 &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; str3 &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; str4 &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; str5 &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; str6 &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>输出<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Hello, World!</span><br><span class="line">Hello, World!</span><br><span class="line">Hello</span><br><span class="line">Hello</span><br><span class="line">AAAAA</span><br><span class="line"></span><br></pre></td></tr></table></figure></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="string的常用操作0：printf输出字符串"><a href="#string的常用操作0：printf输出字符串" class="headerlink" title="string的常用操作0：printf输出字符串"></a>string的常用操作0：printf输出字符串</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">代码</button><button type="button" class="tab " data-href="test1-2">输入输出</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">100</span>];<span class="comment">//临时变量，用于输入</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,buf);<span class="comment">//输入buf</span></span><br><span class="line">    <span class="function">string <span class="title">str</span><span class="params">(buf)</span></span>;<span class="comment">//用buf构造str</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;str = %s\n&quot;</span>,str.<span class="built_in">c_str</span>());<span class="comment">//输出str</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>输入<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello</span><br></pre></td></tr></table></figure><br>输出<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str = Hello</span><br><span class="line"></span><br></pre></td></tr></table></figure></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="string的常用操作1：获取字符串长度"><a href="#string的常用操作1：获取字符串长度" class="headerlink" title="string的常用操作1：获取字符串长度"></a>string的常用操作1：获取字符串长度</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">std::string str = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line"><span class="type">int</span> len = str.<span class="built_in">length</span>();<span class="comment">//或者int len = str.size();</span></span><br><span class="line">std::cout &lt;&lt; len &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h3 id="string的常用操作2：字符串拼接"><a href="#string的常用操作2：字符串拼接" class="headerlink" title="string的常用操作2：字符串拼接"></a>string的常用操作2：字符串拼接</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">std::string str1 = <span class="string">&quot;Hello, &quot;</span>;</span><br><span class="line">std::string str2 = <span class="string">&quot;World!&quot;</span>;</span><br><span class="line">std::string str3 = str1 + str2;<span class="comment">//使用+运算符</span></span><br><span class="line">std::string str4 = str1.<span class="built_in">append</span>(<span class="string">&quot;,&quot;</span>).<span class="built_in">append</span>(str2);<span class="comment">//使用append函数</span></span><br><span class="line">std::cout &lt;&lt; str3 &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; str4 &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h3 id="string的常用操作3：字符串查找"><a href="#string的常用操作3：字符串查找" class="headerlink" title="string的常用操作3：字符串查找"></a>string的常用操作3：字符串查找</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">std::string str = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line"><span class="type">size_t</span> pos = str.<span class="built_in">find</span>(<span class="string">&quot;World&quot;</span>);<span class="comment">//查找子串&quot;World&quot;在str中的位置</span></span><br><span class="line"><span class="keyword">if</span> (pos != std::string::npos) &#123;<span class="comment">//npos=-1，表示未找到</span></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Found at position: &quot;</span> &lt;&lt; pos &lt;&lt; std::endl;<span class="comment">//pos目前是等于7的,下标（index）从0开始</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Not found&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="string的常用操作4：字符串替换"><a href="#string的常用操作4：字符串替换" class="headerlink" title="string的常用操作4：字符串替换"></a>string的常用操作4：字符串替换</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">std::string str = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">str.<span class="built_in">replace</span>(<span class="number">7</span>, <span class="number">5</span>, <span class="string">&quot;Universe&quot;</span>);<span class="comment">//将str中从第7个位置开始的5个字符替换为&quot;Universe&quot;</span></span><br><span class="line">std::cout &lt;&lt; str &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h3 id="string的常用操作5：字符串截取"><a href="#string的常用操作5：字符串截取" class="headerlink" title="string的常用操作5：字符串截取"></a>string的常用操作5：字符串截取</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">std::string str = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">std::string subStr = str.<span class="built_in">substr</span>(<span class="number">7</span>, <span class="number">5</span>);<span class="comment">//从第7个位置开始截取5个字符</span></span><br><span class="line">std::cout &lt;&lt; subStr &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure><h3 id="string的常用操作6：字符串比较"><a href="#string的常用操作6：字符串比较" class="headerlink" title="string的常用操作6：字符串比较"></a>string的常用操作6：字符串比较</h3>string重载了不等号，所以可以直接使用s1 &lt; s2的方式来比较string的大小，比较的规则是按照字典序大小进行比较。<br>字典序的比较方法是从小到大一个一个比较，一旦遇到不相等的字符就确定大小关系。<br>例如:<br>аааа &lt; bььь<br>аzz &lt; baaa<br>aZZZZZZZZZZZZz &lt; b<br>lanqiao == lanqiao<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">std::string str1 = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">std::string str2 = <span class="string">&quot;World&quot;</span>;</span><br><span class="line"><span class="type">int</span> result = str1.<span class="built_in">compare</span>(str2);<span class="comment">//比较两个字符串的大小</span></span><br><span class="line"><span class="keyword">if</span> (result == <span class="number">0</span>) &#123;</span><br><span class="line">    std::cout &lt;&lt; str1 &lt;&lt; <span class="string">&quot; is equal to &quot;</span> &lt;&lt; str2 &lt;&lt; std::endl;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (result &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    std::cout &lt;&lt; str1 &lt;&lt; <span class="string">&quot; is less than &quot;</span> &lt;&lt; str2 &lt;&lt; std::endl;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    std::cout &lt;&lt; str1 &lt;&lt; <span class="string">&quot; is less than &quot;</span> &lt;&lt; str2 &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="string的常用操作7：字符串遍历"><a href="#string的常用操作7：字符串遍历" class="headerlink" title="string的常用操作7：字符串遍历"></a>string的常用操作7：字符串遍历</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">循环枚举下标</button><button type="button" class="tab " data-href="test1-2">迭代器</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">string s = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">length</span>(); ++i)cout &lt;&lt; s[i];</span><br><span class="line">cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : s)&#123;</span><br><span class="line">    cout &lt;&lt; i;</span><br><span class="line">    i=<span class="string">&#x27;z&#x27;</span>;<span class="comment">//此处i只是s的拷贝，不是引用，因此修改无效</span></span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="comment">//此时s为&quot;Hello&quot;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i : s)&#123;</span><br><span class="line">    cout&lt;&lt;i;</span><br><span class="line">    i=<span class="string">&#x27;a&#x27;</span>;<span class="comment">//此处修改会改变s的值</span></span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="comment">//此时s为&quot;aaaaa&quot;</span></span><br><span class="line">cout&lt;&lt;s&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string s = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> it = s.<span class="built_in">begin</span>(); it != s.<span class="built_in">end</span>(); it++) &#123;</span><br><span class="line">    cout &lt;&lt; *it &lt;&lt; endl;<span class="comment">//利用迭代器依次输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="string练习题：反转字符串中的字符"><a href="#string练习题：反转字符串中的字符" class="headerlink" title="string练习题：反转字符串中的字符"></a>string练习题：反转字符串中的字符</h3>题目详见<a href="https://www.lanqiao.cn/problems/250/learning/">蓝桥OJ:反转字符串中的字符</a><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">反向输出法</button><button type="button" class="tab " data-href="test1-2">reverse函数</button><button type="button" class="tab " data-href="test1-3">swap函数对半替换</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  string s;</span><br><span class="line">  <span class="built_in">getline</span>(cin, s);  <span class="comment">// 用于获取带有空格的字符串</span></span><br><span class="line">  <span class="keyword">for</span> ( <span class="type">int</span> i=s.<span class="built_in">size</span>()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i-- ) cout &lt;&lt; s[i];  <span class="comment">// 反向输出字符串</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  string s;</span><br><span class="line">  <span class="built_in">getline</span>(cin, s);</span><br><span class="line">  <span class="built_in">reverse</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br><span class="line">  cout &lt;&lt; s;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-3"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  string s;</span><br><span class="line">  <span class="built_in">getline</span>(cin, s); </span><br><span class="line">  <span class="keyword">for</span> ( <span class="type">int</span> i=<span class="number">0</span>; i&lt;s.<span class="built_in">size</span>()/<span class="number">2</span>; i++) <span class="built_in">swap</span>(s[i], s[s.<span class="built_in">size</span>()<span class="number">-1</span>-i]); </span><br><span class="line">  cout &lt;&lt; s;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="小作业：妮妮的翻转游戏"><a href="#小作业：妮妮的翻转游戏" class="headerlink" title="小作业：妮妮的翻转游戏"></a>小作业：妮妮的翻转游戏</h2>题目详见<a href="https://www.lanqiao.cn/problems/4983/learning/">蓝桥OJ：妮妮的翻转游戏</a><br>方法很多，这里列举一种。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="type">int</span> x;</span><br><span class="line">  cin&gt;&gt;x;</span><br><span class="line">  <span class="keyword">if</span>(x)x=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">else</span> x=<span class="number">1</span>;</span><br><span class="line">  cout&lt;&lt;x&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息学与信息学竞赛习题题解(一)</title>
      <link href="/2024/10/02/oier-1/"/>
      <url>/2024/10/02/oier-1/</url>
      
        <content type="html"><![CDATA[<h1 id="1-新建代码模板"><a href="#1-新建代码模板" class="headerlink" title="1.新建代码模板"></a>1.新建代码模板</h1><p>本次使用C++语言，新建一个代码模板，方便后续使用。在小熊猫工具-代码模板-C++中新建一个代码模板，内容如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>如果是蓝桥杯，这里有一些小建议建议你加上：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span><span class="comment">//如果改了cin/cout速读速写，这里建议你改为&#x27;\n&#x27;，不然没用。</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long<span class="comment">//为了防止数据溢出，这里建议你将int改为long long</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f3f3f3f3f<span class="comment">//int类型的正无穷</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//这里写你的代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="comment">//signed避免int被改为long long报错，也是int类的</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);<span class="comment">//上面三行修改cin/cout速读速写</span></span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin&gt;&gt;t;</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">solve</span>();<span class="comment">//蓝桥杯一般是多个测试用例，这里建议你写一个solve函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="2-题解基础（一）C-语言"><a href="#2-题解基础（一）C-语言" class="headerlink" title="2.题解基础（一）C++语言"></a>2.题解基础（一）C++语言</h1><h2 id="第一章C-语言入门"><a href="#第一章C-语言入门" class="headerlink" title="第一章C++语言入门"></a>第一章C++语言入门</h2><h3 id="1000：入门测试题目"><a href="#1000：入门测试题目" class="headerlink" title="1000：入门测试题目"></a>1000：入门测试题目</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>求两个整数的和。<br>【输入】<br>一行，两个用空格隔开的整数。<br>【输出】<br>两个整数的和。<br>【输入样例】<br><code>2 3</code><br>【输出样例】<br><code>5</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,x+y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="2060：【例1-1】计算机输出"><a href="#2060：【例1-1】计算机输出" class="headerlink" title="2060：【例1.1】计算机输出"></a>2060：【例1.1】计算机输出</h3><p>打印个helloworld，应该都会吧？</p><h3 id="2061：【例1-2】梯形面积"><a href="#2061：【例1-2】梯形面积" class="headerlink" title="2061：【例1.2】梯形面积"></a>2061：【例1.2】梯形面积</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=2061">2061：【例1.2】梯形面积</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">float</span> area;</span><br><span class="line">    <span class="type">int</span> h;</span><br><span class="line">    h=<span class="number">2</span>*<span class="number">150</span>/<span class="number">15</span>;</span><br><span class="line">    area=(<span class="number">15</span>+<span class="number">25</span>)*h/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,area);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="2062：【例1-3】电影票"><a href="#2062：【例1-3】电影票" class="headerlink" title="2062：【例1.3】电影票"></a>2062：【例1.3】电影票</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>已知一位小朋友的电影票价是10元，计算x位小朋友的总票价是多少？<br>【输入】<br>输入x。<br>【输出】<br>人数和电影票总价，中间用一个空格隔开。<br>【输入样例】<br><code>2</code><br>【输出样例】<br><code>2 20</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>,x,x*<span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="2063：【例1-4】牛吃牧草"><a href="#2063：【例1-4】牛吃牧草" class="headerlink" title="2063：【例1.4】牛吃牧草"></a>2063：【例1.4】牛吃牧草</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>有一个牧场，牧场上的牧草每天都在匀速生长，这片牧场可供15头牛吃20天，或可供20头牛吃10天，那么，这片牧场每天新生的草量可供几头牛吃1天？<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; (<span class="number">15</span> * <span class="number">20</span> - <span class="number">20</span> * <span class="number">10</span>) / (<span class="number">20</span> - <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1001：Hello-World"><a href="#1001：Hello-World" class="headerlink" title="1001：Hello,World!"></a>1001：Hello,World!</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>编写一个能够输出“<code>Hello,World!</code>”的程序，这个程序常常作为一个初学者接触一门新的编程语言所写的第一个程序，也经常用来测试开发、编译环境是否能够正常工作。<br>提示：“<code>Hello,World!</code>”中间没空格。<br>【输入】<br>无<br>【输出】<br>Hello,World!<br>【输入样例】<br>（无）<br>【输出样例】<br><code>Hello,World!</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Hello,World!&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1002：输出第二个整数"><a href="#1002：输出第二个整数" class="headerlink" title="1002：输出第二个整数"></a>1002：输出第二个整数</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>输入三个整数，整数之间由一个空格分隔，整数是32位有符号整数。把第二个输入的整数输出。<br>【输入】<br>只有一行，共三个整数，整数之间由一个空格分隔。整数是32位有符号整数。<br>【输出】<br>只有一行，一个整数，即输入的第二个整数。<br>【输入样例】<br><code>123 456 789</code><br>【输出样例】<br><code>456</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> x,y,z;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">cout &lt;&lt; y;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1003：对齐输出"><a href="#1003：对齐输出" class="headerlink" title="1003：对齐输出"></a>1003：对齐输出</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>读入三个整数，按每个整数占8个字符的宽度，右对齐输出它们，按照格式要求依次输出三个整数，之间以一个空格分开。<br>【输入】<br>只有一行，包含三个整数，整数之间以一个空格分开。<br>【输出】<br>只有一行，按照格式要求依次输出三个整数，之间以一个空格分开。<br>【输入样例】<br><code>123456789 0 -1</code><br>【输出样例】<br><code>123456789       0      -1</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%8d %8d %8d&quot;</span>,a,b,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1004：字符三角形"><a href="#1004：字符三角形" class="headerlink" title="1004：字符三角形"></a>1004：字符三角形</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>给定一个字符，用它构造一个底边长5个字符，高3个字符的等腰字符三角形。<br>【输入】<br>输入只有一行，包含一个字符。<br>【输出】<br>该字符构成的等腰三角形，底边长5个字符，高3个字符。<br>【输入样例】<br><em><br>【输出样例】  </em></p><hr><hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">(<span class="type">void</span>)</span></span>&#123; </span><br><span class="line">    <span class="type">char</span> a ;</span><br><span class="line">    <span class="type">int</span> i ,j ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;a);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">3</span>-i;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;i*<span class="number">2</span>;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><h3 id="1005：地球人口承载力估计"><a href="#1005：地球人口承载力估计" class="headerlink" title="1005：地球人口承载力估计"></a>1005：地球人口承载力估计</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>假设地球上的新生资源按恒定速度增长。照此测算，地球上现有资源加上新生资源可供x亿人生活a年，或供y亿人生活b年。为了能够实现可持续发展，避免资源枯竭，地球最多能够养活多少亿人？<br>【输入】<br>一行，包括四个正整数x，a，y，b，两个整数之间用单个空格隔开。x&gt;y，a&lt; b，ax&lt; by，各整数均不大于10000<br>【输出】<br>一个实数z，表示地球最多养活z亿人，舍入到小数点后两位。<br>【输入样例】<br>110 90 90 210<br>【输出样例】<br>75.00<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> x,a,b,y;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;a&gt;&gt;y&gt;&gt;b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,(b*y-a*x)*<span class="number">1.0</span>/(<span class="number">1.0</span>*(b-a)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h2 id="第二章-顺序结构程序设计"><a href="#第二章-顺序结构程序设计" class="headerlink" title="第二章 顺序结构程序设计"></a>第二章 顺序结构程序设计</h2><h3 id="第一节-运算符和表达式"><a href="#第一节-运算符和表达式" class="headerlink" title="第一节 运算符和表达式"></a>第一节 运算符和表达式</h3><h4 id="2064：【例2-1】交换值"><a href="#2064：【例2-1】交换值" class="headerlink" title="2064：【例2.1】交换值"></a>2064：【例2.1】交换值</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目描述】<br>输入两个正整数a和b，试交换a、b的值（使a的值等于b，b的值等于a）。<br>【输入】<br>输入两个正整数a和b。<br>【输出】<br>输出a与b交换值后的结果。<br>【输入样例】<br><code>2 3</code><br>【输出样例】<br><code>3 2</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a,b,t;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">t=a;a=b;b=t;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="2065：【例2-2】整数的和"><a href="#2065：【例2-2】整数的和" class="headerlink" title="2065：【例2.2】整数的和"></a>2065：【例2.2】整数的和</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>求3个整数的和。<br>输入a、b、c这3个整数，求它们的和。<br>【输入】<br>3个整数。<br>【输出】<br>三个数的和。<br>【输入样例】<br><code>1 2 3</code><br>【输出样例】<br><code>6</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a,b,c;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">cout&lt;&lt;a+b+c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="2066：【例2-3】买图书"><a href="#2066：【例2-3】买图书" class="headerlink" title="2066：【例2.3】买图书"></a>2066：【例2.3】买图书</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>已知小明有n元，他买了一本书，这本书原价为m元，现在打8折出售。求小明还剩多少钱(保留2位小数)。<br>【输入】<br>输入n,m。<br>【输出】<br>小明还剩多少钱(保留2位小数)。<br>【输入样例】<br><code>100 100</code><br>【输出样例】<br><code>20.00</code></p>              </div>            </details><h4 id="1006：A-B问题-同1000做法"><a href="#1006：A-B问题-同1000做法" class="headerlink" title="1006：A+B问题(同1000做法)"></a>1006：A+B问题(同1000做法)</h4><p>这里不再赘述，详情看1000</p><h4 id="1007：计算-a-b-×c的值"><a href="#1007：计算-a-b-×c的值" class="headerlink" title="1007：计算(a+b)×c的值"></a>1007：计算(a+b)×c的值</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>给定3个整数a、b、c，计算表达式(a+b)×c的值。<br>【输入】<br>输入仅一行，包括三个整数a、b、c, 数与数之间以一个空格分开。(－10,000&lt; a,b,c&lt; 10,000)<br>【输出】<br>输出一行，即表达式的值。<br>【输入样例】<br><code>2 3 5</code><br>【输出样例】<br><code>25</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a,b,c;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">cout&lt;&lt;(a+b)*c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1008：计算-a-b-c的值"><a href="#1008：计算-a-b-c的值" class="headerlink" title="1008：计算(a+b)/c的值"></a>1008：计算(a+b)/c的值</h4><p><code>*</code>改为<code>/</code>即可。</p><h4 id="1009：带余除法"><a href="#1009：带余除法" class="headerlink" title="1009：带余除法"></a>1009：带余除法</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>给定被除数和除数，求整数商及余数。此题中请使用默认的整除和取余运算，无需对结果进行任何特殊处理。<br>【输入】<br>一行，包含两个整数，依次为被除数和除数（除数非零），中间用一个空格隔开。<br>【输出】<br>一行，包含两个整数，依次为整数商和余数，中间用一个空格隔开。<br>【输入样例】<br><code>10 3</code><br>【输出样例】<br><code>3 1</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a,b;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">cout&lt;&lt;a/b&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;a%b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1010：计算分数的浮点数值"><a href="#1010：计算分数的浮点数值" class="headerlink" title="1010：计算分数的浮点数值"></a>1010：计算分数的浮点数值</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>两个整数a和b分别作为分子和分母，既分数ab，求它的浮点数值(双精度浮点数，保留小数点后9位)。<br>【输入】<br>输入仅一行，包括两个整数a和b。<br>【输出】<br>输出也仅一行，分数ab的浮点数值（双精度浮点数，保留小数点后9位）。<br>【输入样例】<br><code>5 7</code><br>【输出样例】<br><code>0.714285714</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> a,b;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.9lf&quot;</span>,a/b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="第二节-常量和变量"><a href="#第二节-常量和变量" class="headerlink" title="第二节 常量和变量"></a>第二节 常量和变量</h3><h4 id="2067：【例2-5】圆"><a href="#2067：【例2-5】圆" class="headerlink" title="2067：【例2.5】圆"></a>2067：【例2.5】圆</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>输入半径r，输出圆的直径、周长、面积，数与数之间以一个空格分开，每个数保留小数点后4位。<br>【输入】<br>输入半径。<br>【输出】<br>如题述。数与数之间以一个空格分开。<br>【输入样例】<br><code>1.0</code><br>【输出样例】<br><code>2.0000 6.2832 3.1416</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi 3.1415926</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> r;</span><br><span class="line">cin&gt;&gt;r;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.4lf %.4lf %.4lf&quot;</span>,<span class="number">2</span>*r,<span class="number">2</span>*pi*r,pi*r*r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="2068：【例2-6】鸡兔同笼"><a href="#2068：【例2-6】鸡兔同笼" class="headerlink" title="2068：【例2.6】鸡兔同笼"></a>2068：【例2.6】鸡兔同笼</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=2061">2068：【例2.6】鸡兔同笼</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> ck,rb,f,h;</span><br><span class="line">cin&gt;&gt;h&gt;&gt;f;</span><br><span class="line">rb=(f<span class="number">-2</span>*h)/<span class="number">2</span>;</span><br><span class="line">ck=h-rb;</span><br><span class="line">cout&lt;&lt;ck&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;rb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1011：甲流疫情死亡率"><a href="#1011：甲流疫情死亡率" class="headerlink" title="1011：甲流疫情死亡率"></a>1011：甲流疫情死亡率</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>甲流并不可怕，在中国，它的死亡率并不是很高。请根据截止2009年12月22日各省报告的甲流确诊数和死亡数，计算甲流在各省的死亡率。<br>【输入】<br>输入仅一行，有两个整数，第一个为确诊数，第二个为死亡数。<br>【输出】<br>输出仅一行，甲流死亡率，以百分数形式输出，精确到小数点后3位。<br>【输入样例】<br><code>10433 60</code><br>【输出样例】<br><code>0.575%</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> a,b;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.3lf%%&quot;</span>,b*<span class="number">100</span>/a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1012：计算多项式的值"><a href="#1012：计算多项式的值" class="headerlink" title="1012：计算多项式的值"></a>1012：计算多项式的值</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>对于多项式f(x)=ax3+bx2+cx+d和给定的a,b,c,d,x，计算f(x)的值，保留到小数点后7位。<br>【输入】<br>输入仅一行，包含5个实数，分别是x，及参数a、b、c、d的值，每个数都是绝对值不超过100的双精度浮点数。数与数之间以一个空格分开。<br>【输出】<br>输出一个实数，即f(x)的值，保留到小数点后位。<br>【输入样例】<br><code>2.31 1.2 2 2 3</code><br>【输出样例】<br><code>33.0838692</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> x,a,b,c,d,ans;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line">ans=a*x*x*x+b*x*x+c*x+d;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.7lf&quot;</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1013：温度表达转化"><a href="#1013：温度表达转化" class="headerlink" title="1013：温度表达转化"></a>1013：温度表达转化</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1013">1013：温度表达转化</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> C,F;</span><br><span class="line">cin&gt;&gt;F;</span><br><span class="line">C=<span class="number">5</span>*(F<span class="number">-32</span>)/<span class="number">9</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.5lf&quot;</span>,C);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1014：与圆相关的计算"><a href="#1014：与圆相关的计算" class="headerlink" title="1014：与圆相关的计算"></a>1014：与圆相关的计算</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1014">1014：与圆相关的计算</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> r,pi=<span class="number">3.14159</span>;</span><br><span class="line">cin&gt;&gt;r;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.4lf %.4lf %.4lf&quot;</span>,<span class="number">2</span>*r,<span class="number">2</span>*pi*r,pi*r*r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1015：计算并联电阻的阻值"><a href="#1015：计算并联电阻的阻值" class="headerlink" title="1015：计算并联电阻的阻值"></a>1015：计算并联电阻的阻值</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1015">1015：计算并联电阻的阻值</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> r1,r2;</span><br><span class="line">cin&gt;&gt;r1&gt;&gt;r2;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,<span class="number">1</span>/((<span class="number">1</span>/r1)+(<span class="number">1</span>/r2)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="第三节-标准数据类型"><a href="#第三节-标准数据类型" class="headerlink" title="第三节 标准数据类型"></a>第三节 标准数据类型</h3><h4 id="1414：【17NOIP普及组】成绩"><a href="#1414：【17NOIP普及组】成绩" class="headerlink" title="1414：【17NOIP普及组】成绩"></a>1414：【17NOIP普及组】成绩</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1414">1414：【17NOIP普及组】成绩</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a,b,c;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">cout&lt;&lt;a*<span class="number">0.2</span>+b*<span class="number">0.3</span>+c*<span class="number">0.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1016：整型数据类型存储空间大小"><a href="#1016：整型数据类型存储空间大小" class="headerlink" title="1016：整型数据类型存储空间大小"></a>1016：整型数据类型存储空间大小</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>分别定义int，short类型的变量各一个，并依次输出它们的存储空间大小(单位：字节)。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">short</span> b;</span><br><span class="line">cout&lt;&lt;<span class="built_in">sizeof</span>(a)&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="built_in">sizeof</span>(b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1017：浮点型数据类型存储空间大小"><a href="#1017：浮点型数据类型存储空间大小" class="headerlink" title="1017：浮点型数据类型存储空间大小"></a>1017：浮点型数据类型存储空间大小</h4><p>将1016题代码中的<code>int</code>和<code>short</code>类型改为<code>float</code>和<code>double</code>类型，输出它们的存储空间大小(单位：字节)即可。</p><h4 id="1018：其他数据类型存储空间大小"><a href="#1018：其他数据类型存储空间大小" class="headerlink" title="1018：其他数据类型存储空间大小"></a>1018：其他数据类型存储空间大小</h4><p>将1016题代码中的<code>int</code>和<code>short</code>类型改为<code>bool</code>和<code>char</code>类型，输出它们的存储空间大小(单位：字节)即可。</p><h4 id="1019：浮点数向零舍入"><a href="#1019：浮点数向零舍入" class="headerlink" title="1019：浮点数向零舍入"></a>1019：浮点数向零舍入</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>输入一个单精度浮点数，将其向零舍入到整数。说明：向零舍入的含义是，正数向下舍入，负数向上舍入。提示：可以使用强制类型转换来实现。<br>【输入】<br>一个单精度浮点数。<br>【输出】<br>一个整数，即向零舍入到整数的结果。<br>【输入样例】<br>2.3<br>【输出样例】<br>2<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">float</span> a;</span><br><span class="line">cin&gt;&gt;a;</span><br><span class="line">cout&lt;&lt;<span class="built_in">int</span>(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1020：打印ASCII码"><a href="#1020：打印ASCII码" class="headerlink" title="1020：打印ASCII码"></a>1020：打印ASCII码</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1020">1020：打印ASCII码</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">char</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1021：打印字符"><a href="#1021：打印字符" class="headerlink" title="1021：打印字符"></a>1021：打印字符</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1021">1021：打印字符</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1022：整型与布尔型的转换"><a href="#1022：整型与布尔型的转换" class="headerlink" title="1022：整型与布尔型的转换"></a>1022：整型与布尔型的转换</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1022">1022：整型与布尔型的转换</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">bool</span>(a));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>或<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">bool</span> b;</span><br><span class="line">cin&gt;&gt;a;</span><br><span class="line">b=a;</span><br><span class="line">cout&lt;&lt;b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1023：Hello-World-的大小"><a href="#1023：Hello-World-的大小" class="headerlink" title="1023：Hello,World!的大小"></a>1023：Hello,World!的大小</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1023">1023：Hello,World!的大小</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="built_in">sizeof</span>(<span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="第四节-数据输入输出"><a href="#第四节-数据输入输出" class="headerlink" title="第四节 数据输入输出"></a>第四节 数据输入输出</h3><h4 id="1024：保留3位小数的浮点数"><a href="#1024：保留3位小数的浮点数" class="headerlink" title="1024：保留3位小数的浮点数"></a>1024：保留3位小数的浮点数</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1024">1024：保留3位小数的浮点数</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> a;</span><br><span class="line">cin&gt;&gt;a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.3lf&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1025：保留12位小数的浮点数"><a href="#1025：保留12位小数的浮点数" class="headerlink" title="1025：保留12位小数的浮点数"></a>1025：保留12位小数的浮点数</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1025">1025：保留12位小数的浮点数</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> a;</span><br><span class="line">cin&gt;&gt;a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.12lf&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1026：空格分隔输出"><a href="#1026：空格分隔输出" class="headerlink" title="1026：空格分隔输出"></a>1026：空格分隔输出</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1026">1026：空格分隔输出</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">char</span> a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="type">float</span> c;</span><br><span class="line"><span class="type">double</span> d;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c %d %.6lf %.6lf&quot;</span>,a,b,c,d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1027：输出浮点数"><a href="#1027：输出浮点数" class="headerlink" title="1027：输出浮点数"></a>1027：输出浮点数</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1027">1027：输出浮点数</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> a;</span><br><span class="line">cin&gt;&gt;a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n%.5f\n%e\n%g&quot;</span>,a,a,a,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1028：字符菱形"><a href="#1028：字符菱形" class="headerlink" title="1028：字符菱形"></a>1028：字符菱形</h4><p>不太会打印题哇<br><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1028">1028：字符菱形</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line">cin&gt;&gt;c;</span><br><span class="line"><span class="type">int</span> n = <span class="number">5</span>;<span class="comment">//菱形对角线长度。若要输出任意对角线长度的菱形，则输入该变量。 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)<span class="comment">//一共有n行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sn = <span class="built_in">abs</span>(i - n / <span class="number">2</span>);<span class="comment">//该行前面空格数</span></span><br><span class="line"><span class="type">int</span> en = n - <span class="number">2</span> * sn;<span class="comment">//该行字符个数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; sn; ++j)</span><br><span class="line">cout&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; en; ++j)</span><br><span class="line">cout&lt;&lt;c;</span><br><span class="line">cout&lt;&lt;endl; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details></p><h3 id="第五节-顺序结构实例"><a href="#第五节-顺序结构实例" class="headerlink" title="第五节 顺序结构实例"></a>第五节 顺序结构实例</h3><h4 id="2070：【例2-13】数字对调"><a href="#2070：【例2-13】数字对调" class="headerlink" title="2070：【例2.13】数字对调"></a>2070：【例2.13】数字对调</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=2070">2070：【例2.13】数字对调</a><br>第一种方法没有考虑0不能作为首位的情况，所以会提交失败<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line">cin&gt;&gt;a;</span><br><span class="line">cout&lt;&lt;a%<span class="number">10</span>&lt;&lt;a/<span class="number">10</span>%<span class="number">10</span>&lt;&lt;a/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, a, b, c;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">a = n%<span class="number">10</span>;<span class="comment">//个位</span></span><br><span class="line">b = n/<span class="number">10</span>%<span class="number">10</span>;<span class="comment">//十位</span></span><br><span class="line">c = n/<span class="number">100</span>;<span class="comment">//百位</span></span><br><span class="line">cout &lt;&lt; a*<span class="number">100</span>+b*<span class="number">10</span>+c;<span class="comment">//如果a是0，那么输出的数字没有百位</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1031：反向输出一个三位数"><a href="#1031：反向输出一个三位数" class="headerlink" title="1031：反向输出一个三位数"></a>1031：反向输出一个三位数</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>将一个三位数反向输出，例如输入358，反向输出853。<br>【输入】<br>一个三位数n。<br>【输出】<br>反向输出n。<br>【输入样例】<br><code>100</code><br>【输出样例】<br><code>001</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n,g,s,b;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">g=n%<span class="number">10</span>;</span><br><span class="line">s=n/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">b=n/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; g &lt;&lt; s &lt;&lt; b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h4 id="1035：等差数列末项计算"><a href="#1035：等差数列末项计算" class="headerlink" title="1035：等差数列末项计算"></a>1035：等差数列末项计算</h4><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>给出一个等差数列的前两项a1，a2，求第n项是多少。<br>【输入】<br>一行，包含三个整数a1，a2，n。−100≤a1,a2≤100，0<n≤1000。【输出】一个整数，即第n项的值。【输入样例】`1 4 100`【输出样例】`298`<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> a1,a2,n;</span><br><span class="line">cin&gt;&gt;a1&gt;&gt;a2&gt;&gt;n;</span><br><span class="line">cout&lt;&lt;a1+(n<span class="number">-1</span>)*(a2-a1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 教育技术学 </category>
          
          <category> GXNU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教育技术学 </tag>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>易语言制作刷屏器</title>
      <link href="/2024/09/25/EPL-sp/"/>
      <url>/2024/09/25/EPL-sp/</url>
      
        <content type="html"><![CDATA[<h1 id="易语言制作刷屏器"><a href="#易语言制作刷屏器" class="headerlink" title="易语言制作刷屏器"></a>易语言制作刷屏器</h1><p>注意：本文章仅供学习交流，请勿用于非法用途！<br>记得用易语言全选支持库，否则可能代码无法运行</p><ul><li>这个代码还增加了管理员不限速的功能，所以如果需要原始功能，可以自行删除部分代码 <h2 id="窗口界面"><a href="#窗口界面" class="headerlink" title="窗口界面"></a>窗口界面</h2>这里只介绍我们主要功能的界面内容，其余注释等UI、标签可自行添加。</li><li>编辑框（内容框）：用于显示当前鼠标点击的次数</li><li>超级按钮x2（开始、关闭）：用于控制程序开始和关闭</li><li>编辑框（速度框）：用于设置刷屏速度</li><li>透明标签1：用于显示当前刷屏的状态</li><li>时钟1：用于控制刷屏<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2>因为我这是写在另一个窗口上的，不是启动窗口，所以你可以使用<code>载入（窗口名，，假）</code>然后换行<code>销毁()</code>来调用这个窗口。<h3 id="刷屏器窗口代码"><a href="#刷屏器窗口代码" class="headerlink" title="刷屏器窗口代码"></a>刷屏器窗口代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">.版本 2</span><br><span class="line">.支持库 eAPI</span><br><span class="line">.支持库 iext</span><br><span class="line"></span><br><span class="line">.程序集 窗口程序集_刷屏器</span><br><span class="line"></span><br><span class="line">.子程序 _刷屏器_创建完毕</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.子程序 _时钟1_周期事件</span><br><span class="line"></span><br><span class="line">置剪辑板文本 (内容框.内容)</span><br><span class="line">模拟按键 (#Ctrl键, #V键, )</span><br><span class="line">模拟按键 (#回车键, , )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.子程序 _开始_被单击</span><br><span class="line"></span><br><span class="line">.如果 (速度框.内容 ＝ “” 或 速度框.内容 ＝ “请填写速度”)</span><br><span class="line">    速度框.内容 ＝ “1000”</span><br><span class="line"></span><br><span class="line">.否则</span><br><span class="line"></span><br><span class="line">.如果结束</span><br><span class="line">.如果 (管理员 ＝ 假)</span><br><span class="line">    .如果真 (到整数 (速度框.内容) ＜ 700)</span><br><span class="line">        速度框.内容 ＝ “700”</span><br><span class="line">    .如果真结束</span><br><span class="line"></span><br><span class="line">.否则</span><br><span class="line"></span><br><span class="line">.如果结束</span><br><span class="line">时钟1.时钟周期 ＝ 到整数 (速度框.内容)</span><br><span class="line">.如果 (管理员 ＝ 假)</span><br><span class="line">    透明标签1.标题 ＝ “状态：您未激活，最快速度为700，已开始”</span><br><span class="line">.否则</span><br><span class="line">    透明标签1.标题 ＝ “状态：已开始”</span><br><span class="line">.如果结束</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.子程序 _关闭_被单击</span><br><span class="line"></span><br><span class="line">时钟1.时钟周期 ＝ 0</span><br><span class="line">透明标签1.标题 ＝ “状态：已停止”</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2>使用方法：输入刷屏内容后点击开始，再点击需要刷屏的软件的输入框<br>刷屏速度：1000为1秒，100为0.1秒，建议最少输入10，否则容易卡顿</li></ul>]]></content>
      
      
      <categories>
          
          <category> 易语言 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 易语言 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 黑科技 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>易语言制作连点器</title>
      <link href="/2024/09/25/EPL-click/"/>
      <url>/2024/09/25/EPL-click/</url>
      
        <content type="html"><![CDATA[<h1 id="易语言制作连点器"><a href="#易语言制作连点器" class="headerlink" title="易语言制作连点器"></a>易语言制作连点器</h1><p>注意：本文章仅供学习交流，请勿用于非法用途！</p><h2 id="窗口界面"><a href="#窗口界面" class="headerlink" title="窗口界面"></a>窗口界面</h2><p>这里只介绍我们主要功能的界面内容，其余注释等UI、标签可自行添加。</p><ul><li>按钮1：点击按钮用于测试是否开启连点。</li><li>编辑框1：用于显示当前连点数量,只读。</li><li>标签3：用于显示当前连点状态。</li><li>时钟1：用于寻找鼠标坐标并模拟点击。</li><li>时钟2：监测按钮是否按下开始连点或关闭连点。<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Dll自定义表"><a href="#Dll自定义表" class="headerlink" title="Dll自定义表"></a>Dll自定义表</h3>这里我们需要利用一个dll文件，用于模拟鼠标点击。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.版本 2</span><br><span class="line"></span><br><span class="line">.DLL命令 监视热键, 整数型, , &quot;GetAsyncKeyState&quot;</span><br><span class="line">    .参数 键值, 整数型</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="启动窗口"><a href="#启动窗口" class="headerlink" title="启动窗口"></a>启动窗口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">.版本 2</span><br><span class="line">.支持库 eAPI</span><br><span class="line"></span><br><span class="line">.程序集 窗口程序集_启动窗口</span><br><span class="line">.程序集变量 a, 整数型</span><br><span class="line"></span><br><span class="line">.子程序 __启动窗口_创建完毕</span><br><span class="line"></span><br><span class="line">时钟2.时钟周期 ＝ 1</span><br><span class="line"></span><br><span class="line">.子程序 _时钟2_周期事件</span><br><span class="line"></span><br><span class="line">.如果真 (监视热键 (#F1键) ≠ 0)</span><br><span class="line">    时钟1.时钟周期 ＝ 1</span><br><span class="line">    标签3.标题 ＝ “状态：已开启”</span><br><span class="line">.如果真结束</span><br><span class="line">.如果真 (监视热键 (#F2键) ≠ 0)</span><br><span class="line">    时钟1.时钟周期 ＝ 0</span><br><span class="line">    标签3.标题 ＝ “状态：已关闭”</span><br><span class="line">.如果真结束</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.子程序 _时钟1_周期事件</span><br><span class="line"></span><br><span class="line">模拟鼠标点击 (取鼠标水平位置 (), 取鼠标垂直位置 (), )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.子程序 _按钮1_被单击</span><br><span class="line"></span><br><span class="line">a ＝ a ＋ 1</span><br><span class="line">编辑框1.内容 ＝ “点击数：” ＋ 到文本 (a)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2>运行只需要使用F1键开启，F2键关闭即可。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 易语言 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 易语言 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 黑科技 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dlib人脸识别</title>
      <link href="/2024/09/21/Dilb-face-recognize/"/>
      <url>/2024/09/21/Dilb-face-recognize/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近我们宿舍前任室委书记陈同志参加了软工那边的人工智能基地，入门考核搞了个这个玩意的环境配置。看他抓耳挠腮的样子，于是决定写一下我的配置过程。</p><h1 id="一、anaconda和Visual-Studio安装"><a href="#一、anaconda和Visual-Studio安装" class="headerlink" title="一、anaconda和Visual Studio安装"></a>一、anaconda和Visual Studio安装</h1><p>如果你是python小白，建议使用anaconda安装python环境，省去了很多麻烦。anaconda类似于一个python的集成环境，可以创建各个环境来适配各个项目，方便我们使用。</p><h2 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h2><p><a href="https://www.anaconda.com/products/distribution">下载链接：https://www.anaconda.com/products/distribution</a></p><h2 id="1-2-安装"><a href="#1-2-安装" class="headerlink" title="1.2 安装"></a>1.2 安装</h2><p>双击运行，一直下一步即可。（如不想安装在C盘，自行选择目录即可）</p><h2 id="1-3-Visual-Studio安装"><a href="#1-3-Visual-Studio安装" class="headerlink" title="1.3 Visual Studio安装"></a>1.3 Visual Studio安装</h2><p><a href="https://visualstudio.microsoft.com/zh-hans/">下载链接：https://visualstudio.microsoft.com/zh-hans/</a></p><h1 id="二、环境配置"><a href="#二、环境配置" class="headerlink" title="二、环境配置"></a>二、环境配置</h1><h2 id="2-1-创建环境"><a href="#2-1-创建环境" class="headerlink" title="2.1 创建环境"></a>2.1 创建环境</h2><p>我给这个项目命名为<code>face_recognition</code>，python版本为3.8。<br>打开终端，输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n face_recognition python=3.8</span><br></pre></td></tr></table></figure></p><h2 id="2-2-激活环境"><a href="#2-2-激活环境" class="headerlink" title="2.2 激活环境"></a>2.2 激活环境</h2><p>以后需要运行这个项目只需要在项目文件夹的终端输入这个命令启动环境即可。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate face_recognition</span><br></pre></td></tr></table></figure></p><h2 id="2-3-安装项目依赖"><a href="#2-3-安装项目依赖" class="headerlink" title="2.3 安装项目依赖"></a>2.3 安装项目依赖</h2><p>因为项目文件夹有<code>requirements.txt</code>提示了我们需要下载的库文件，所以在终端输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><br>等待下载完成，发现编辑器中库文件没有报错则为下载完成。</p><h1 id="三、运行项目"><a href="#三、运行项目" class="headerlink" title="三、运行项目"></a>三、运行项目</h1><p>大概流程如图<br><img src="https://raw.githubusercontent.com/coneypo/Dlib_face_recognition_from_camera/refs/heads/master/introduction/overview.png" alt="流程"></p><h2 id="3-1-运行以及采集人脸"><a href="#3-1-运行以及采集人脸" class="headerlink" title="3.1 运行以及采集人脸"></a>3.1 运行以及采集人脸</h2><p><code>注意，python3如果不能运行则改为python。当然你直接在编辑器如vscode或pycharm里点运行也行</code><br>在项目文件夹的终端输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 get_face_from_camera.py</span><br></pre></td></tr></table></figure><br>这个窗口通过键盘来操作，但我不喜欢，我更喜欢下面这个<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 get_face_from_camera_tkinter.py</span><br></pre></td></tr></table></figure><br><img src="https://raw.githubusercontent.com/coneypo/Dlib_face_recognition_from_camera/refs/heads/master/introduction/face_register_tkinter_GUI.png" alt="tkinter采集人脸"><br>然后确保人脸识别为白色（没有超出拍摄范围）输入你的人脸名字（最好是英文，防止编码问题），然后点拍照即可。<br>输入这个命令是提取人脸特征，提取后会在项目文件夹中生成一个csv文件，这个文件是用于识别的。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 features_extraction_to_csv.py</span><br></pre></td></tr></table></figure></p><h2 id="3-3-识别"><a href="#3-3-识别" class="headerlink" title="3.3 识别"></a>3.3 识别</h2><p>输入这个命令，即可开始识别之前已录入的人脸。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 face_reco_from_camera_ot.py</span><br></pre></td></tr></table></figure><br><img src="https://raw.githubusercontent.com/coneypo/Dlib_face_recognition_from_camera/refs/heads/master/introduction/face_reco_ot.png" alt="人脸识别"></p><h1 id="四、项目仓库"><a href="#四、项目仓库" class="headerlink" title="四、项目仓库"></a>四、项目仓库</h1><p><a href="https://github.com/coneypo/Dlib_face_recognition_from_camera">项目仓库：https://github.com/coneypo/Dlib_face_recognition_from_camera</a></p>]]></content>
      
      
      <categories>
          
          <category> 教育技术学 </category>
          
          <category> GXNU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教育技术学 </tag>
            
            <tag> Github </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息学与信息学竞赛习题题解</title>
      <link href="/2024/09/15/oier/"/>
      <url>/2024/09/15/oier/</url>
      
        <content type="html"><![CDATA[<h1 id="信息学与信息学竞赛习题题解"><a href="#信息学与信息学竞赛习题题解" class="headerlink" title="信息学与信息学竞赛习题题解"></a>信息学与信息学竞赛习题题解</h1><p>本帖子会不断更新进度！~</p><h2 id="1-新建代码模板"><a href="#1-新建代码模板" class="headerlink" title="1.新建代码模板"></a>1.新建代码模板</h2><p>本次使用C++语言，新建一个代码模板，方便后续使用。在小熊猫工具-代码模板-C++中新建一个代码模板，内容如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>如果是蓝桥杯，这里有一些小建议建议你加上：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span><span class="comment">//万能头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span><span class="comment">//如果改了cin/cout速读速写，这里建议你改为&#x27;\n&#x27;，不然没用。</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long<span class="comment">//为了防止数据溢出，这里建议你将int改为long long</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f3f3f3f3f<span class="comment">//int类型的正无穷</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//这里写你的代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="comment">//signed避免int被改为long long报错，也是int类的</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);<span class="comment">//上面三行修改cin/cout速读速写</span></span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin&gt;&gt;t;</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">solve</span>();<span class="comment">//蓝桥杯一般是多个测试用例，这里建议你写一个solve函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2-题解"><a href="#2-题解" class="headerlink" title="2.题解"></a>2.题解</h2><p>如果本篇没有的话拿可能就是没写或者已经剪切进归类了</p><h3 id="1043：整数大小比较"><a href="#1043：整数大小比较" class="headerlink" title="1043：整数大小比较"></a>1043：整数大小比较</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>输入两个整数，比较它们的大小。若x&gt;y，输出&gt;；若x=y，输出=；若x&lt; y，输出&lt;。<br>【输入】<br>一行，包含两个整数x和y，中间用单个空格隔开。0≤x<232, −231≤y<231。【输出】一个字符。若x>y，输出 &gt;；若x=y，输出 = ；若x&lt; y，输出&lt; ；<br>【输入样例】<br><code>1000 100</code><br>【输出样例】<br><code>&gt;</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">switch</span> (x&lt;y) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">if</span>(x==y)cout&lt;&lt;<span class="string">&quot;=&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:cout&lt;&lt;<span class="string">&quot;&lt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1048：有一门课不及格的学生"><a href="#1048：有一门课不及格的学生" class="headerlink" title="1048：有一门课不及格的学生"></a>1048：有一门课不及格的学生</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>给出一名学生的语文和数学成绩，判断他是否恰好有一门课不及格(成绩小于60分)。若该生恰好有一门课不及格，输出1；否则输出0。<br>【输入】<br>一行，包含两个在0到100之间的整数，分别是该生的语文成绩和数学成绩。<br>【输出】<br>若该生恰好有一门课不及格，输出1；否则输出0。<br>【输入样例】<br><code>50 80</code><br>【输出样例】<br><code>1</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> chi,math;</span><br><span class="line">cin&gt;&gt;chi&gt;&gt;math;</span><br><span class="line"><span class="keyword">if</span>((chi&lt;<span class="number">60</span>)+(math&lt;<span class="number">60</span>)==<span class="number">1</span>)cout&lt;&lt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1077：统计满足条件的4位数"><a href="#1077：统计满足条件的4位数" class="headerlink" title="1077：统计满足条件的4位数"></a>1077：统计满足条件的4位数</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>给定若干个四位数，求出其中满足以下条件的数的个数：个位数上的数字减去千位数上的数字，再减去百位数上的数字，再减去十位数上的数字的结果大于零。<br>【输入】<br>输入为两行，第一行为四位数的个数n，第二行为n个的四位数。(n&lt;=100)<br>【输出】<br>输出为一行，包含一个整数，表示满足条件的四位数的个数。<br>【输入样例】<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1234 1349 6119 2123 5017</span><br></pre></td></tr></table></figure><br>【输出样例】<br><code>3</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n,x,g,num=<span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line">g=x%<span class="number">10</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span>(x)&#123;</span><br><span class="line">g=g-x%<span class="number">10</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(g&gt;<span class="number">0</span>)num++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1138：将字符串中的小写字母转换成大写字母"><a href="#1138：将字符串中的小写字母转换成大写字母" class="headerlink" title="1138：将字符串中的小写字母转换成大写字母"></a>1138：将字符串中的小写字母转换成大写字母</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1138">1138：将字符串中的小写字母转换成大写字母</a><br>因为可能包含空格，所以我们需要输入<code>getline(cin,s);</code>代替cin&gt;&gt;s;<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">string s;</span><br><span class="line"><span class="built_in">getline</span>(cin,s);</span><br><span class="line"><span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">islower</span>(s[i]))&#123;</span><br><span class="line">s[i]=<span class="built_in">toupper</span>(s[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>或者按照传统方法；<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">string s;</span><br><span class="line"><span class="built_in">getline</span>(cin,s);</span><br><span class="line"><span class="type">int</span> n=s.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;z&#x27;</span>)&#123;</span><br><span class="line">s[i]=s[i]<span class="number">-32</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1153：绝对素数"><a href="#1153：绝对素数" class="headerlink" title="1153：绝对素数"></a>1153：绝对素数</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>如果一个自然数是素数,且它的数字位置经过对换后仍为素数,则称为绝对素数,例如13。试求出所有二位绝对素数。<br>【输入】<br>（无）<br>【输出】<br>所有二位绝对素数（由小到大，一个数一行）。<br>【输入样例】<br>（无）<br>【输出样例】<br>（无）<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=x;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">11</span>;i&lt;=<span class="number">97</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isprime</span>(i)&amp;&amp;<span class="built_in">isprime</span>(i%<span class="number">10</span>*<span class="number">10</span>+i/<span class="number">10</span>))&#123;</span><br><span class="line">cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1165：Hermite多项式"><a href="#1165：Hermite多项式" class="headerlink" title="1165：Hermite多项式"></a>1165：Hermite多项式</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>用递归的方法求Hermite多项式的值，题目详见<br><a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1165">1165：Hermite多项式</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">h</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">2</span>*x;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>*x*<span class="built_in">h</span>(n<span class="number">-1</span>)<span class="number">-2</span>*(n<span class="number">-1</span>)*<span class="built_in">h</span>(n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,<span class="built_in">h</span>(n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1166：求f-x-n"><a href="#1166：求f-x-n" class="headerlink" title="1166：求f(x,n)"></a>1166：求f(x,n)</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1166">1166：求f(x,n)</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">f</span><span class="params">(<span class="type">float</span> x,<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)<span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="number">1</span>+x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">sqrt</span>(n+<span class="built_in">f</span>(x,n<span class="number">-1</span>));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">double</span> x,n;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,<span class="built_in">f</span>(x,n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1167：再求f-x-n"><a href="#1167：再求f-x-n" class="headerlink" title="1167：再求f(x,n)"></a>1167：再求f(x,n)</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1167">1167：再求f(x,n)</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">f</span><span class="params">(<span class="type">float</span> x,<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)<span class="keyword">return</span> x/(<span class="number">1</span>+x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> x/(n+<span class="built_in">f</span>(x,n<span class="number">-1</span>));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x,n;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>,<span class="built_in">f</span>(x,n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1177：奇数单增序列"><a href="#1177：奇数单增序列" class="headerlink" title="1177：奇数单增序列"></a>1177：奇数单增序列</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1177">1177：奇数单增序列</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">509</span>],x,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(x%<span class="number">2</span>==<span class="number">1</span>)a[++m]=x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(a,a+<span class="number">1</span>+m);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot;, &quot;</span>[i==m];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1178：成绩排序"><a href="#1178：成绩排序" class="headerlink" title="1178：成绩排序"></a>1178：成绩排序</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1178">1178：成绩排序</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">stu</span>&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;a[<span class="number">21</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i].name&gt;&gt;a[i].score;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n,[](stu x,stu y)&#123;</span><br><span class="line"><span class="keyword">if</span>(x.score==y.score) <span class="keyword">return</span> x.name&lt;y.name;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> x.score&gt;y.score;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cout&lt;&lt;a[i].name&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;a[i].score&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1181：整数奇偶排序"><a href="#1181：整数奇偶排序" class="headerlink" title="1181：整数奇偶排序"></a>1181：整数奇偶排序</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1181">1181：整数奇偶排序</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">20</span>],b[<span class="number">20</span>],x,m,n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(x%<span class="number">2</span>==<span class="number">1</span>)a[++m]=x;</span><br><span class="line"><span class="keyword">else</span> b[++n]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+m,[](<span class="type">const</span> <span class="type">int</span> u,<span class="type">const</span> <span class="type">int</span> v)&#123;</span><br><span class="line"><span class="keyword">return</span> u&gt;v;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+<span class="number">1</span>+n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cout&lt;&lt;b[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1184：明明的随机数"><a href="#1184：明明的随机数" class="headerlink" title="1184：明明的随机数"></a>1184：明明的随机数</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1184">1184：明明的随机数</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">1010</span>],n,m,x;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(a[x]==<span class="number">0</span>)m++;</span><br><span class="line">a[x]++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;m&lt;&lt;endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i])&#123;<span class="comment">//while如果要全部输出的话</span></span><br><span class="line">cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="comment">// a[i]--;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1188：菲波那契数列-2"><a href="#1188：菲波那契数列-2" class="headerlink" title="1188：菲波那契数列(2)"></a>1188：菲波那契数列(2)</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1188">1188：菲波那契数列(2)</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> b[<span class="number">1000001</span>]; <span class="comment">//提前计算出数列每一项的值 （这里本地会报错，但是OJ上不会）</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="type">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line">b[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">b[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//计算数列 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=<span class="number">1000000</span>; i++) &#123;</span><br><span class="line">b[i]=(b[i<span class="number">-1</span>]+b[i<span class="number">-2</span>])%<span class="number">1000</span>;<span class="comment">//利用高精度思想，每次计算后都取模 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">cout&lt;&lt;b[a[i]<span class="number">-1</span>]&lt;&lt;endl;<span class="comment">//输出第i位的值，由于数列下标从0开始，要减1 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1189：Pell数列"><a href="#1189：Pell数列" class="headerlink" title="1189：Pell数列"></a>1189：Pell数列</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1189">1189：Pell数列</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">1000005</span>];<span class="comment">//这里本地会报错，但是OJ上不会</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, x;</span><br><span class="line">a[<span class="number">1</span>] = <span class="number">1</span>, a[<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">1000000</span>; ++i)</span><br><span class="line">a[i] = (<span class="number">2</span>*a[i<span class="number">-1</span>] + a[i<span class="number">-2</span>])%<span class="number">32767</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">cout &lt;&lt; a[x] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1190：上台阶"><a href="#1190：上台阶" class="headerlink" title="1190：上台阶"></a>1190：上台阶</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1190">1190：上台阶</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> f[<span class="number">81</span>],n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">f[<span class="number">1</span>]=<span class="number">1</span>;f[<span class="number">2</span>]=<span class="number">2</span>;f[<span class="number">3</span>]=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">4</span>;i&lt;=<span class="number">70</span>;i++)</span><br><span class="line">f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>]+f[i<span class="number">-3</span>];</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">while</span>(n)&#123;</span><br><span class="line">cout&lt;&lt;f[n]&lt;&lt;endl;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1200：分解因数"><a href="#1200：分解因数" class="headerlink" title="1200：分解因数"></a>1200：分解因数</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1200">1200：分解因数</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">tot++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=m;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>)<span class="built_in">f</span>(n/i,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n,a;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">tot=<span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;a;</span><br><span class="line"><span class="built_in">f</span>(a,<span class="number">2</span>);</span><br><span class="line">cout&lt;&lt;tot&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1205：汉诺塔问题"><a href="#1205：汉诺塔问题" class="headerlink" title="1205：汉诺塔问题"></a>1205：汉诺塔问题</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1205">1205：汉诺塔问题</a><br>主题cin/cout会超时，尽管取消同步流也超时（ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);），所以只能用scanf/printf<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">hanoi</span><span class="params">(<span class="type">int</span> n, <span class="type">char</span> a, <span class="type">char</span> b, <span class="type">char</span> c)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">hanoi</span>(n<span class="number">-1</span>,a,c,b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c-&gt;%d-&gt;%c\n&quot;</span>,a,n,b);</span><br><span class="line"><span class="built_in">hanoi</span>(n<span class="number">-1</span>,c,b,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> a,b,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %c %c %c&quot;</span>,&amp;n,&amp;a,&amp;b,&amp;c);</span><br><span class="line"><span class="built_in">hanoi</span>(n,a,b,c);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1207：求最大公约数问题"><a href="#1207：求最大公约数问题" class="headerlink" title="1207：求最大公约数问题"></a>1207：求最大公约数问题</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1207">1207：求最大公约数问题</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> n==<span class="number">0</span>?m:<span class="built_in">gcd</span>(n,m%n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line">cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">cout&lt;&lt;<span class="built_in">gcd</span>(m,n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1222：放苹果"><a href="#1222：放苹果" class="headerlink" title="1222：放苹果"></a>1222：放苹果</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1222">1222：放苹果</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> m,n,K;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> a,<span class="type">int</span> l)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(p==n&amp;&amp;a==m)&#123;</span><br><span class="line">K++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p==n || a&gt;m)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=m;i++)</span><br><span class="line"><span class="built_in">dfs</span>(p+<span class="number">1</span>,a+i,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">K=<span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">cout&lt;&lt;K&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1310：【例2-2】车厢重组"><a href="#1310：【例2-2】车厢重组" class="headerlink" title="1310：【例2.2】车厢重组"></a>1310：【例2.2】车厢重组</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1310">1310：【例2.2】车厢重组</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10010</span>],n,num;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)<span class="comment">//冒泡排序</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n-i;j++)</span><br><span class="line"><span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>])&#123;</span><br><span class="line"><span class="built_in">swap</span>(a[j],a[j+<span class="number">1</span>]);</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;num;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1315：【例4-5】集合的划分"><a href="#1315：【例4-5】集合的划分" class="headerlink" title="1315：【例4.5】集合的划分"></a>1315：【例4.5】集合的划分</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1315">1315：【例4.5】集合的划分</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">s</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n&lt;k||k==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(n==k||k==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">s</span>(n<span class="number">-1</span>,k<span class="number">-1</span>)+k*<span class="built_in">s</span>(n<span class="number">-1</span>,k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">cout&lt;&lt;<span class="built_in">s</span>(n,k)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1317：【例5-2】组合的输出"><a href="#1317：【例5-2】组合的输出" class="headerlink" title="1317：【例5.2】组合的输出"></a>1317：【例5.2】组合的输出</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1317">1317：【例5.2】组合的输出</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,r,a[<span class="number">25</span>],f[<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line">cout&lt;&lt;<span class="built_in">setw</span>(<span class="number">3</span>)&lt;&lt;a[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=a[k<span class="number">-1</span>]+<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!f[i])&#123;</span><br><span class="line">a[k]=i;f[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(k==r)<span class="built_in">print</span>();</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">dfs</span>(k+<span class="number">1</span>);</span><br><span class="line">f[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;r;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="1318：【例5-3】自然数的拆分"><a href="#1318：【例5-3】自然数的拆分" class="headerlink" title="1318：【例5.3】自然数的拆分"></a>1318：【例5.3】自然数的拆分</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1318">1318：【例5.3】自然数的拆分</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">9</span>;</span><br><span class="line"><span class="type">int</span> n,a[N],tot;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">cout&lt;&lt;n&lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt;a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=k;i++)&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;+&quot;</span>&lt;&lt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//tot++;</span></span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> s)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=a[k<span class="number">-1</span>];i&lt;=s;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;n)&#123;</span><br><span class="line">a[k]=i;s-=i;</span><br><span class="line"><span class="keyword">if</span>(s==<span class="number">0</span>)<span class="built_in">print</span>(k);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">dfs</span>(k+<span class="number">1</span>,s);</span><br><span class="line">s+=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,n);</span><br><span class="line"><span class="comment">//cout&lt;&lt;&quot;total=&quot;&lt;&lt;tot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="2048：【例5-18】串排序"><a href="#2048：【例5-18】串排序" class="headerlink" title="2048：【例5.18】串排序"></a>2048：【例5.18】串排序</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>题目详见<a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=2048">2048：【例5.18】串排序</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">string s[<span class="number">21</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;s[i];</span><br><span class="line"><span class="built_in">sort</span>(s,s+n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)cout&lt;&lt;s[j]&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="2059：【例3-11】买笔"><a href="#2059：【例3-11】买笔" class="headerlink" title="2059：【例3.11】买笔"></a>2059：【例3.11】买笔</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>              <p>【题目描述】<br>期末来临了，班长小Q决定将剩余班费x元钱，用于购买若干支钢笔奖励给一些学习好、表现好的同学。已商店里有三种钢笔，它们的单价为6元、5元和4元。小Q想买尽量多的笔（鼓励尽量多的同学），同时他又不想有剩余钱。请您编一程序，帮小Q制订出一种买笔的方案。<br>【输入】<br>一个正整数x（剩余班费）。<br>【输出】<br>一行，依次为6元、5元和4元钱笔的数目，用一个空格隔开。<br>【输入样例】<br><code>10</code><br>【输出样例】<br><code>1 0 1</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x,n6,n5,n4;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line">n4=x/<span class="number">4</span>;</span><br><span class="line"><span class="keyword">switch</span> (x%<span class="number">4</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:n4--;n5++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:n4--;n6++;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:n4-=<span class="number">2</span>;n5++;n6++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;n6&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;n5&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;n4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><h3 id="正在补充ing"><a href="#正在补充ing" class="headerlink" title="正在补充ing"></a>正在补充ing</h3><details class="folding-tag" green><summary> 查看本题 </summary>              <div class='content'>                            </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 教育技术学 </category>
          
          <category> GXNU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教育技术学 </tag>
            
            <tag> 信息学竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教育学部2023级教育技术学专业人才培养方案</title>
      <link href="/2024/06/13/23ET-method/"/>
      <url>/2024/06/13/23ET-method/</url>
      
        <content type="html"><![CDATA[<h1 id="教育学部2023级教育技术学专业人才培养方案"><a href="#教育学部2023级教育技术学专业人才培养方案" class="headerlink" title="教育学部2023级教育技术学专业人才培养方案"></a>教育学部2023级教育技术学专业人才培养方案</h1><h2 id="一、专业简介"><a href="#一、专业简介" class="headerlink" title="一、专业简介"></a>一、专业简介</h2><ul><li>广西师范大学教育技术学专业于1994年开始专科层次招生，1999年开始本科层次招生，2001年开始培养硕士研究生，2005年获硕士点，2018年获博士学位授权点，2020年获教育博士学位授权点，是广西唯一拥有从全日制本科到硕博培养的重要教育技术人才培养基地。本专业是广西首批教师教育优势特色专业、自治区级一流本科专业建设点。拥有国家级实验教学示范中心、广西高校高水平创新团队和卓越学者计划、广西高校重点实验室、广西教育大数据协同创新中心等高端人才培养平台，拥有省级示范教学实践基地、卓越教师协同培养创新实验区等教育科研实习基地10余个。专业秉承“素养本位”理念，坚持“产出导向”，创设“U-G-E-S”协同育人平台，构建信息技术（义务教育阶段表述为信息科技，后文同）教育与教育信息化建设人才职前职后一体化培养模式。近三年，建设自治区级以上一流课程6门，师生获自治区级以上奖励和项目支持130余项。毕业生综合素质高，深受区内外优质学校和企事业单位青睐。</li></ul><h2 id="二、专业代码、名称"><a href="#二、专业代码、名称" class="headerlink" title="二、专业代码、名称"></a>二、专业代码、名称</h2><ol><li>专业代码：<code>040104</code></li><li>专业名称：教育技术学<code>（师范类）</code></li></ol><h2 id="三、培养目标及毕业要求"><a href="#三、培养目标及毕业要求" class="headerlink" title="三、培养目标及毕业要求"></a>三、培养目标及毕业要求</h2><ul><li><p>（一）培养类型：师范学术型</p></li><li><p>（二）培养目标<br>本专业坚持以习近平新时代中国特色社会主义思想为指导，依据广西师范大学人才培养定位，着眼信息社会对基础教育人才的诉求，立足广西，辐射全国，围绕新师范建设，培养师德修养高、专业理论实、实践技能硬、教学能力强、综合素养高的教学研究型信息技术优秀教师，以及面向基础教育信息化建设的高素质人才。<br>学生毕业5年左右成长为中学信息技术教学、教研和教育信息化建设工作中的骨干力量。根据教育技术学专业培养目标的人才定位，对师范生毕业5年左右的职业发展预期目标分解如下： </p></li></ul><ol><li>师德修养。具有良好的思想政治素质、高度的社会责任感和专业认同感，践行社会主义核心价值观，热爱教育技术事业，自觉贯彻党和国家的教育方针、政策，遵守师德规范，立德树人，关心、尊重和爱护学生，做学生人生成长的引路人。</li><li>专业知识。具备扎实的中学信息技术学科知识，熟谙所教学科的知识体系、基本思想与方法；熟练掌握中学教学、管理和育人的理论和方法，把握国内外基础教育改革动向；熟悉学科核心素养、课程标准与教材。同时较为系统地掌握从事教育技术或教育信息化建设工作所需要的理论知识与方法技能，了解与本学科领域相关的战略、政策、法规、标准、前沿和发展趋势。</li><li>专业能力。具有过硬的教师职业技能，具备教学设计、组织、评价等教学能力，能够创新地开展信息技术及相关课程教学与研究工作；具备综合育人的素质，能创造性地在学科教学、文化创设和社团活动中，对学生进行教育和引导；具备对数字化教/学环境、资源进行设计与开发的能力，以及综合解决信息化环境下教育教学实际问题的能力，能够灵活应用教育技术学理论与方法，进行教育信息化建设工作。</li><li>文化素养。拥有丰富的学识；善于沟通与合作，勤于探索与反思；具备问题解决、批判性思维与创新能力，能创造性地开展教育教学研究与创业实践；有强烈的民族文化自信心和认同感，能主动传承和创新中华优秀传统文化；具有国际与前瞻视野，能终身学习，与时俱进，更新自身知识与提升能力，实现自我专业发展。</li></ol><ul><li><p>（三）毕业要求<br>本专业毕业生应达到以下要求（包括践行师德、学会教学、学会育人、学会发展四个维度，对应师德规范、教育情怀、学科素养、教学能力、班级指导、综合育人、学会反思、沟通合作八个二级指标）：</p><blockquote><pre><code>践行师德</code></pre><blockquote><p>1【师德规范】 践行社会主义核心价值观，增进对中国特色社会主义的思想认同、政治认同、理论认同和情感认同。贯彻党的教育方针，以立德树人为己任。遵守教师职业道德规范，具有依法执教意识和高尚的师德修养，立志成为“四有好老师”。</p><blockquote><p>1.1 思想政治素质。爱党爱国，遵纪守法，认真践行社会主义核心价值观，对中国特色社会主义具有深刻的思想认同、政治认同、理论认同和情感认同。<br>1.2 职业道德素养。能贯彻党和国家的教育方针，以立德树人为己任；具有依法执教意识，遵守教师职业道德规范和专业伦理，立志成为有理想信念、有道德情操、有扎实学识、有仁爱之心的“四有”好老师。<br>2【教育情怀】 具有从教意愿，认同教师工作的意义和专业型，具有积极的情感、端正的态度和正确的价值观。具有丰富的人文底蕴和科学精神，尊重学生并给予正确的指导，立志做学生成长的引路人。<br>2.1职业认同。认同信息技术教师职业价值，对信息技术教育和教育技术事业具有积极的情感、端正的态度、正确的价值观。<br>2.2关爱学生。具有人文底蕴和科学精神，尊重学生人格和个性，富有爱心、责任心、事业心，工作细心、耐心，立志做学生锤炼品格、学习知识、创新思维、奉献祖国的引路人。</p><pre><code>学会教学</code></pre><p>3【学科素养】 掌握教育技术学科的基本理论与实践方法，能够将教育技术理论、方法与学校教育、教育信息化建设等教育实践相结合。掌握信息技术学科的基础知识、基本原理和基本技能，理解信息技术学科基本思想与方法，了解信息技术学科与他学科以及社会实践之间的联系，对学习科学的相关知识有一定了解。<br>3.1教育技术专业素养。掌握教育技术学科的基本知识、原理和技能，理解学科体系基本思想和方法。了解教育技术学与学科教学以及教育信息化建设的联系，具有教育技术应用于教育实践的意识。<br>3.2信息技术学科素养。具备较为扎实的信息技术学科知识，具备较为全面的数字素养，较为熟练地掌握信息技术学科知识体系、教学思想和教学方法，理解信息技术学科核心素养的内涵。了解信息技术学科与其他学科之间的关系，具有跨学科教学意识，具备信息技术与其他学科融合的基本技能。<br>3.3 科学和人文素养。具备广博的人文、科学、艺术、技术、工程等基本知识和素养；掌握并理解教育学、心理学、学习科学等教育科学基本原理；熟知中学教育中学科融合的价值，理解社会实践、生活实践对于学生全面发展的深刻意义。<br>4【教学能力】 在教育实践中，能够依据信息技术学科课程标准，针对中学生身心发展和学科认知特点，运用学科教学知识，进行教学设计、实施和评价，获得教学体验，掌握教学基本技能，具有初步的教学能力和一定的教学研究能力。具备运用教育技术知识和技能，进行数字化教/学环境、资源和过程的设计与开发，以及综合解决信息化环境下教育教学实践问题的基本能力。<br>4.1 信息技术教学实施能力。了解学生的认知与发展规律及特征，掌握教学基本技能，熟悉学科课程标准，具备运用教学相关理论，进行信息技术课程教学的准备与设计、组织与实施、评价与反思等基本能力。<br>4.2 数字化设计与开发能力。具备运用教育技术理论与方法，进行数字化环境设计与开发、数字资源设计与开发、数字化学习过程设计与开发的基本能力。<br>4.3 信息化环境下教育教学问题解决能力。具备运用教育技术理论与方法，开展信息技术教育研究、信息技术与课程融合，或综合解决信息化环境下其他教育教学实际问题的基本能力。</p><pre><code>学会育人</code></pre><p>5【班级指导】 具有德育为先的理念，了解中学德育原理与方法。掌握班级组织与建设的工作规律和基本方法，能够在班主任工作实践中，参与德育和心理健康教育等活动的组织与指导，获得积极体验。<br>5.1 班级建设与组织。了解学生身心发展特点，掌握班级建设与班级活动组织的基本理论与方法，具备组建班级和组织开展班级活动的基本能力。<br>5.2 德育和心理健康教育。树立德育为先理念，了解中学德育原理和方法，能够在班主任工作实践中，参与德育和心理健康教育等活动的组织与指导。<br>6【综合育人】 了解中学生发展规律和养成教育规律。理解信息技术学科的育人价值，能有机结合学科教学进行育人活动。了解学校文化和教育活动的育人内涵和方法，参与组织主题教育和社团活动，对学生进行教育和引导。<br>6.1 学科育人。了解学生身心发展和养成教育规律，理解信息技术学科的育人价值，熟悉信息技术学科在各学段、各主题内容的情感态度价值观的育人内涵、目标和方法，具备有机结合信息技术学科教学开展育人活动的基本能力。<br>6.2 文化与活动育人。了解文化育人的基本原理和方法，具备参与创设学校信息技术文化环境与氛围的基本能力，能参与到设计、筹划或组织信息技术创新文化节等大型学校文化活动中。了解教育活动育人的基本原理和方法，具备设计和组织信息技术相关主题教育或社团活动，指导学生参与信息技术应用或创新实践活动等的基本能力。<br>   学会发展<br>7【学会反思】 具有终身学习与专业发展意识。了解国内外基础教育改革、教育技术研究以及信息技术学科等方面的发展趋势与前沿动态，能够适应时代和教育发展需求，进行学习和职业生涯规划。初步掌握反思方法和技能，具有一定创新意识，运用批判性思维方法，学会分析和解决教育教学问题。<br>7.1 终身学习与专业发展。具有国际化的教育视野，了解国内外基础教育改革、教育技术研究以及信息技术学科教学等方面的发展趋势与前沿动态，具备跨文化交流的能力。具有终身学习与专业发展的意识与态度，能够根据教育技术学科专业发展、教师专业发展，以及基础教育对信息化教育人才的需求，合理地规划专业学习和职业生涯。<br>7.2 反思与创新意识。掌握反思方法和技能，能够进行自我反思、诊断和改进；掌握教育研究方法，经历研究的过程，能够分析或尝试解决教育教学实践中的问题，具备一定研究能力和学术表达能力；具有一定的创新意识，运用批判性思维和创新方法，分析和解决教育实践中遇到的问题。<br>8【沟通合作】 理解学习共同体的作用，具有团队协作精神，具有小组互助和合作学习体验，能够在团队中承担个体、团队成员和负责人的角色。能够清晰、有条理地表达和有效的沟通与交流。<br>8.1沟通交流。能够逻辑合理、条理清晰的通过口头、书面以及数字化方式表达自己的观点，具备与他人进行有效沟通的基本能力。<br>8.2团队合作。理解学习共同体的价值，理解团队中每个角色的定位以及对于整个团队的意义，具有团队协作精神。能够在小组学习、专题研讨、网络分享等学习活动中，承担多种角色且做好自己所承担角色的工作，并与其他成员协调合作。</p></blockquote></blockquote></blockquote></li><li><p>毕业要求与培养目标关系矩阵</p></li></ul><div class="table-container"><table><thead><tr><th>毕业要求</th><th>培养目标1师德修养</th><th>培养目标2专业知识</th><th>培养目标3专业能力</th><th>培养目标4文化素养</th></tr></thead><tbody><tr><td>师德规范</td><td>√</td><td></td><td></td><td>√</td></tr><tr><td>教育情怀</td><td>√</td><td></td><td></td><td>√</td></tr><tr><td>学科素养</td><td>√</td><td>√</td><td>√</td><td></td></tr><tr><td>教学能力</td><td></td><td>√</td><td>√</td><td>√</td></tr><tr><td>班级指导</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>综合育人</td><td>√</td><td>√</td><td>√</td><td></td></tr><tr><td>学会反思</td><td></td><td>√</td><td>√</td><td>√</td></tr><tr><td>沟通合作</td><td></td><td></td><td>√</td><td>√</td></tr></tbody></table></div><h2 id="四、学制和修业年限"><a href="#四、学制和修业年限" class="headerlink" title="四、学制和修业年限"></a>四、学制和修业年限</h2><ol><li>学制：标准学制为4年，实行弹性学制和学分制管理。</li><li>修业年限：可在3-6年内完成学业。</li></ol><h2 id="五、专业所属学科门类及相近专业"><a href="#五、专业所属学科门类及相近专业" class="headerlink" title="五、专业所属学科门类及相近专业"></a>五、专业所属学科门类及相近专业</h2><ol><li>所属学科门类：教育学。</li><li>相近专业：计算机科学与技术，计算机应用，网络与新媒体。</li></ol><h2 id="六、专业主干（核心）课程"><a href="#六、专业主干（核心）课程" class="headerlink" title="六、专业主干（核心）课程"></a>六、专业主干（核心）课程</h2><ul><li>教育技术学导论、教学设计、教育传播理论、教育技术学研究方法、学习科学与技术、高级程序设计、算法与数据结构、数字影视编导与制作、人工智能基础、信息技术教育应用、教育技术实践项目（1-4）等。</li></ul><h2 id="七、主要实验及实践教学要求"><a href="#七、主要实验及实践教学要求" class="headerlink" title="七、主要实验及实践教学要求"></a>七、主要实验及实践教学要求</h2><p>本专业主要实践教学环节包括课程实践实训和集中实践教学环节两个组成部分。</p><ul><li>（一）课程实践与实训<br>大部分的必修课和选修课均设有实践课时，包括实验实训、实践等，以支持学生课程学习的理论与实践结合，达到学以致用的目标。</li></ul><ol><li>开设实践课时的必修课<br>大学计算机、电子技术与开源硬件、高级语言程序设计、网络技术基础、数据库技术基础、摄影技术基础、教育研究方法、算法与数据结构、数字影视编导与制作、信息技术课程与教学论、教育技术实践项目、教师职业技能训练等。</li><li>开设实践课时的选修课<br>多媒体课件制作、多媒体技术基础、视觉艺术基础、三维设计与创意、摄像与后期处理、网页设计与制作、移动学习应用开发、智能机器人程序设计与实践、多媒体美术设计、影视后期制作、传感与控制技术、人工智能教育应用、网络课程设计与开发、通用技术、创新创业实践、教育游戏的设计与开发、人机交互技术与设计、STEM教育理论与方法、数字化校园工程规划与设计等。</li><li>实践（实验）要求</li></ol><ul><li>（1）配套实践（实验）课程需与理论课程在教学内容、教学进度上统筹安排，通常由理论课教师同时承担相应的实验课，实验室教师辅助。<br>（2）实践（实验）课程以验证型实验为辅，以设计作品和综合性设计为主。其中，以设计作品为主的实验，应向学生公布评价标准，并组织期末的作品展示、集体观摩、点评和总结活动。</li><li>（二）教育见习</li></ul><ol><li>实践教学周<br>1-3年级，每学年设置1周“实践教学周”，组织实践基地观摩、校园文化体验、课堂教学观察、教研专题讲座学习等见习活动，以及相关的专业实践项目活动。</li><li>集中见习<br>集中见习于教育实习前期进行，聆听学科教师与班主任开设教育教学讲座，学习课堂教学、班级管理与课外活动组织的方法。</li></ol><ul><li>（三）教育实习</li></ul><ol><li>教学工作实习<br>主要包括备课、说课、试讲、课堂教学、实验指导等环节，以及课外辅导、作业讲评、学业测评、教学反思等活动。</li><li>班主任工作实习<br>主要包括班主任实习工作计划制定、思想品德教育、心理健康教育、主题班会组织、社团活动指导等。</li></ol><ul><li>（四）教育研习<br>反思自己与他人教育教学实践，选定研习主题，收集整理资料，合作探究，交流研讨，撰写研习报告与总结。教育研习贯穿于师范生培养的全过程，集中研习于教育实习后期或结束后开展。</li><li>（五）毕业论文或毕业设计<br>主要包括毕业论文（设计）选题、开题、中期检查、撰写、检测与答辩等环节。</li><li>（六）社会实践<br>要求学生参加社会实践或社会调查，完成社会实践相关学习活动。</li><li>（七）第二课堂<br>根据“第二课堂成绩单”制度规定，参与并完成第二课堂课程或实践活动评价考核，获得“第二课堂学分”并形成“第二课堂课程成绩单”记录至学生档案。“第二课堂”学分认定内容包括：思想成长、实践锻炼与志愿服务、创新创业、文体活动、社会工作（含社团）、技能特长及其他等七个模块。<br>鼓励学生开展创新创业实践，对学生开展创新实验、发表论文、获专业比赛奖励、获得专利和自主创业等情况累积并折算为学分，可兑换相应的实践课程学分。</li><li>（八）劳动教育与军事技能训练<br>开展劳动教育和军事技能训练，完成相应的劳动实践活动和军事技能实训活动。</li></ul><h2 id="八、毕业学分与授予学位"><a href="#八、毕业学分与授予学位" class="headerlink" title="八、毕业学分与授予学位"></a>八、毕业学分与授予学位</h2><ol><li>毕业最低学分要求：<code>165</code>学分</li><li>授予学位：<code>理学学士学位</code></li></ol><h2 id="九、课程结构与学分分布比例"><a href="#九、课程结构与学分分布比例" class="headerlink" title="九、课程结构与学分分布比例"></a>九、课程结构与学分分布比例</h2><p><img src="https://img.picgo.net/2024/06/13/1e956106616d90106.png" alt=""></p><h2 id="十、课程设置计划"><a href="#十、课程设置计划" class="headerlink" title="十、课程设置计划"></a>十、课程设置计划</h2><ul><li>见附表：（1）教育学部教育技术学系专业课程设置计划总表<br>（2）课程体系对毕业要求指标点支撑矩阵图</li></ul><h2 id="十一、说明"><a href="#十一、说明" class="headerlink" title="十一、说明　　"></a>十一、说明　　</h2><ol><li>本次培养方案的执行对象：从2023级学生开始均使用此方案，直到新版培养方案出台；</li><li>本次培养方案修订的负责人和参加人员，包括利益相关方代表、同行专家、毕业生代表、高年级学生代表。</li><li>其他说明情况</li></ol><ul><li>方案修订过程中，组织多次交流研讨，全系教师群策群力，学部与学校的相关人员提出了许多宝贵的意见与建议，在调查利益相关方的意愿与建议基础上，结合我校办学理念与实际条件，明确专业未来发展方向，审慎修订各项内容。</li></ul><h2 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h2><p><img src="https://img.picgo.net/2024/06/13/248846ae63d208465.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/342dddca9c1d254a2.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/494dd35821a391ada.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/58f2ccc07062c4c2a.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/6cf77a39567e3b862.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/7112a77d7037f813a.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/8806f06d439829a8c.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/907639d7f70976811.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/10e86da57281b36b7a.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/110ad0a0e56e0b8c4c.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/12322276f02f0f6ad1.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/1326de3af0612b161b.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/14dc19e47939723098.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/15014b26af8b722196.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/161ed7f88ab5fef84f.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/173e0f41ce5bbc885f.png" alt=""><br><img src="https://img.picgo.net/2024/06/13/18f511244081e7d84b.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 教育技术学 </category>
          
          <category> GXNU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教育技术学 </tag>
            
            <tag> 人才培养方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的单词本</title>
      <link href="/2024/06/12/my-words-book/"/>
      <url>/2024/06/12/my-words-book/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="c5b56edf6e9a83bede9498a5e61fecc78783a609fbc4772bb462c5011af57b61"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
          <category> 加密 </category>
          
          <category> GXNU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密 </tag>
            
            <tag> 英语 </tag>
            
            <tag> 单词本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语四六级写作经典句子</title>
      <link href="/2024/06/12/CET-4-6-sentence/"/>
      <url>/2024/06/12/CET-4-6-sentence/</url>
      
        <content type="html"><![CDATA[<h1 id="Typical-sentences-for-CET-4-and-CET-6-Writing"><a href="#Typical-sentences-for-CET-4-and-CET-6-Writing" class="headerlink" title="Typical sentences for CET-4 and CET-6 Writing"></a>Typical sentences for CET-4 and CET-6 Writing</h1><ol><li>Knowledge is power. 知识就是力量</li><li>Nothing is impossible. 世上无难事，只怕有心人</li><li>No pains, no gains. 不劳则无获</li><li>Nothing seek, nothing find. 无所求则无所获</li><li>God helps those who help themselves. 苍天不负有心人</li><li>Never do things byhalves. 勿半途而废</li><li>Where there’s a will, there’s a way. 有志者事竟成</li><li>The proof of the pudding is in the eating. 空谈不如实践</li><li>Rome was not built in a day. 冰冻三尺，非一日之寒</li><li>Actions speak louder than words. 行动胜于空话</li><li>All roads lead to Rome. 条条道路通罗马</li><li>Opportunity knocks only once. 机不可失，失不再来</li><li>All things are difficult before they are easy. 万事开头难</li><li>A good beginning makes a good ending. 善始才有善终</li><li>Practice makes perfect. 熟能生巧</li><li>Pride goes before a fall. 骄兵必败</li><li>Time and tide wait fo no man. 岁月不等人</li><li>Time is money. 一寸光阴一寸金</li><li>Money spent on the brain is never spent in vain. 投资教育，必有回报</li><li>Health is better than wealth. 健康胜于财富</li><li>There is no friend so faithful as a good book. 好书是忠实的朋友</li><li>All are equal before the law. 法律面前人人平等</li><li>All that glitters is not gold. 闪光的未必都是金子</li><li>Well begun, half done. 好的开始是成功的一半</li><li>It’s never too old to learn. 活到老学到老</li><li>Do as Romans do in Rome. 入乡随俗</li><li>As the tree, so the fruit. 种瓜得瓜，种豆得豆</li><li>If there is no failure, there will be no success. 失败乃成功之母</li><li>If we waste our youth, we will spend the rest of our lives wishing we were young again. 虚度年华将终身后悔</li><li>A friend in need is a friend indeed. 患难见真情</li><li>Thus effective measures should be taken immediately.</li><li>Government should enact strict laws to prevent people from water pollution.</li><li>Therefore, it is urgent for the government to take immediate measures to solve the problem of water shortage.</li><li>Energy can be saved by various ways.</li><li>Though it is hard to do away with this convention. it is worth trying.</li><li>Let’s make a comparison between living in the city and living in the countryside.</li><li>Compared with cars, bicycles have many advantages.</li><li>There are many(several/ a number of/ a variety of) causes(reasons) for this phenomenon.</li><li>I think one of the main problems with today’s education is that we place too much emphasis on test scores.</li><li>No matter how well educated you may be, you can learn a lot during your travels.</li><li>The above analysis naturally leads us to the following possible solutions to the problem.</li><li>Many social problems deserve our attention.</li><li>So we should not simply say studying abroad is a good thing or a bad thing.</li><li>It is the different characters that attract people to live in the countryside or in the city.</li><li>As far as I am concerned (As for me), I agree to the latter opinion to some extent.</li><li>Being self-employed has become a hot topic among people, especially university leavers.</li><li>To reduce the number of accidents, we should take the following measures.</li><li>Only by doing so can we improve the situation.</li><li>Deciding all things for the children will only make them a passive listener and dependent doer, which will do them no good in the long run.  事事替孩子做主，只会使孩子被动地顺从，不能自立。从长远观点来看，这对孩子并无好处。</li><li>When our life is filled with sunshine, we need a bit of rain to make our heads clear. 当生活充满阳光的时候，我们也需要一点点雨来清醒一下头脑。</li><li>As we can see from the chart /table/ graph (As the chart shows), the number of people below the poverty line decreased dramatically during the twenty years from 1978 to 1997.</li><li>A is twice larger /higher than (three times as large/high/ much as) B.</li><li>A is half the size/height of B.</li><li>A is (makes up/ accounts for) 50% of the total population (output/ income/consumption).</li><li>Different people have (got) different attitudes (views) towards (on) bike sharing.</li><li>Why have more and more teenagers become phone freaks? The reasons are as follows.</li><li>There are at least three reasons why so many farmer-workers return home to start their own businesses. </li><li>A number of reasons have led me to choose this occupation/job.</li><li>There are many reasons for my choosing to attend college.</li><li>In my life I have met many people who are really worth recalling. But perhaps the most unforgettable person I ever knew is my mother.</li><li>One of the most attractive places I have ever visited is the capital of our country Beijing.</li><li>Many people consider it necessary to adopt it.</li><li>Some people however, take a different attitude.</li><li>In contrast, others think (argue / hold/ believe/ deem/ conclude/ maintain/ affirm) that students should absorb all kinds of knowledge to broaden their minds.</li><li>As far as I am concerned, I am completely in favor of the policy.</li><li>We are all aware that everything has its two sides.</li><li>We get a lot of benefits from the open-door policy.</li><li>Just as a coin has two sides, the policy also has some bad (ill/ side) effects.</li><li>We should take full advantage of it and avoid its disadvantages.</li><li>Weighing the two sides, both arguments seem to be reasonable.</li><li>The key point is how to make good use of its positive aspects and avoid its negative points.</li><li>Some people claim that wealth is the most powerful and important thing in life, while some other people believe that there are many things that cannot be bought with wealth.</li><li>This will bring some serious dreadful consequences.</li><li>Although there are some similarities between A and B, there still exist great differences between them in the following areas.</li><li>In a word, both A and B have their virtues and shortcomings.</li><li>Some people hold the opinion that money can buy happiness.</li><li>I strongly disagree with this reasoning.</li><li>My argument is based on the following reasons.</li><li>Therefore, we can draw the conclusion that money cannot buy everything.</li><li>It is obvious that health will gain further in developing countries within several decades to come.</li><li>It is true that there has been a tremendous growth in the student use of computers since 1990.</li><li>There are many reasons explaining the change.</li><li>What impresses us most is that the number of private houses was approximately 4 times of the state-owned in 2000.</li><li>What’s more, people’s income has risen significantly along with the rapid development of our economy.</li><li>Many examples can be found to prove big data has found a way into every aspect of our life.</li><li>Take our behaviors as a typical example.</li><li>It is believed that haste makes waste.</li><li>All mentioned above tells us that we should be ready to help others only if we are able to.</li><li>I venture to write you a letter about the canteen service on campus.</li><li>All in all, there is still much room for improvement.</li><li>I am writing to apply for the post of a sales manager advertised in your website.</li><li>I am delighted to learn that you will visit me for a week during the National Day holidays.</li><li>Please inform me once you have made your choice.</li><li>I’m looking forward to seeing you soon.</li><li>There is no denying that successful business lies in a healthy body and mind.</li><li>Among various kinds of sports, I like jogging in particular.</li><li>We need to live a regular life. That is, we can keep good hours and refrain from smoking and drinking in our daily activities.</li><li>Only with combined efforts, can we expect the company to take a new face in due course.</li><li>Whenever I think of the clean brook near my home, I cannot but feel sad.</li></ol>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
          <category> GXNU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CET </tag>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024年度目标</title>
      <link href="/2024/06/11/2024-goal/"/>
      <url>/2024/06/11/2024-goal/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="c6a52dc6d77de4c7a5351399d9b7fc05bd6dcb883bd160149016b4a5af615318">7105125d490fa0f033f6c41d7eafb1d19098858c06ec7064fe2ea415146a94add8586251f16a8a870bc1aea4d10cf0a307d06ef26758abb09ca90d4d26a0600c5947e8e2a7b8aff25cd7d72edeceacf8ba63781b040a0a5ac13c611cbbcb3c53393fe01a7ce126c4f1c9faa2d16ae653364692ec356cbfe88f67aa4636f2475fb1767ce27bece29afe6af9c49199f6291e5f836162d9414a2022cee3fbc30f6ec5f7a0b0c179e69d520ea478722fc969a8f1d08acfea8758656bde026a65665d59497fd75351a59d59341420b69429efc44894d4e7bf5f661f942fbeec3ceca48e3904365e6e45a768e0129fb04bd5c4864ef3a42d7841d38d06d7daeaed0b950337f663fa394f9faba9a7afe860f22c81fc73510bec9e4ed00c5976a58012ebcb298740b75a06f14a52f48c28db914c43d2053a633807c7fd7163c5370d6917d1f6288f58f15d24aca60cb00fb38678e63e8392d175de8bb81e2dcda312571b26278214841790b91b047795d61df4e3a2703b676bdb56c883dd6f2644ae415f73f7e5f92fec4babe59608fe3f5383a0f4dfca63506acc53ac566af65c1bd77d750d3705bd3ff72bc67b042da456f5bd616d4c5a370fa425c7415be65bcec065cc10fd90a5adc7358d2dde87c5492d33a5fb64c935c44d7c7bc96fa107da612beaae4d4a20c9ab0d9502c0ad28077bb6697893196be62425eeecaf2ed8dd9f4f0bce255de5aca951c0c83cc128655ff1a9002102c0827cace8649d1f290683171927bd41d67165ef10f2caaddcb235330c0b3a45f5bdd2ba06da44ad6d2672ae5581901e0a22fbd97d23d2e2f39769eb3672ab4a617551659a27cec6ac0a24d45afc433c9c13a1cecb091fe41ea7c84367921dcea67afecb53e4c6b0603e92b5474726c33da8efcea3d5c9c0abf9de970545ec139c1824643aed7f6af675503c8439693b23483582312df30bb018d4ae3447eac32131d4ff859fa41750e437fb0b4f83bd438003c39f059a1359b614b896830c80484eea21cf30d3e4766056c603ab2377d4733896f6c3d067ad0c8cc0eb21e518b5a02e9f374eadd2ec574737888094f19cd4a2893e1a049bcbcf26422bd1cf3ce1f449913cdc7a61b7bb110f1d74c2f1acd4c3cff4cfa8bb5cbfed1cd31e17d40aaab88f76f7cee18a81db02149e0efad7ee369cbec9cd2dd4ec903c60016e0693b6dc7b574c333dc82a43f3a7ad31d06192c17c5eb26cf43c12f0b6d645e7240cb477cab48024870ceda4d98238d977e11f46fc5f51d1ece49cb4ba4e313c966053f4a3fcd5c97917d1288a884a2ac533d73a01af29a55ee9f206e1ddeb66703b698a00da3ba93776cef6d7945441ffa5efbc55fbd3a498f789f12d40e3d6dc49872ed054b83b3b9c13bd52059c75e3d21ccb72971177e97328ff4e2aea54106eb22ef8232c084cbfa6f4c8b7355f8838f0d8d3a56877df26bcf3ec571ebf4028a35f256204d68bc252cdff83d9a514fbdb921f4b18b4a2732e2a32d2cb0007585ce1d8bc92da96a6454b5c6f7569cb0ad64a59723ae6473d4bdbd1af7c2e5ee74d982a043195c398a0accf51bfcef187ec2a61c955451b49da261f347899cdf71aa5c0e100325e6fa549d0cfa20a71769883550fd7304f63fe925c2962878feb310a5d26008e658c7aec102b9618075d50b224f1a415c1f77c29b302e0383b5e83c455fc11c574c8d39e0f4e248707fccdd95b07e537fb7d8e12de83e4e3d473a7fc94616e630cb7ff132be037113e491d5b3745d0aceb8bcd827816acb0aa8f7a7e42b3534908a1902c84d045746e93ad7d54866c810ae2041bdb94e26ebbc62a65d176795dfecc816c118a037a0e962e9c2ea96d1f35cf7d6d9ed82113c719492074462bae11a855e33a4c7f8eccc3bd27c45b4cf1012ac3bc2865c795d22092e8b81d026f9973ab5f7392cddfc2f663a03d067aa5f6ff0613e11a705f47996662598469705eac8f85f9b4e9672044847c28b64eb532ef2f9b489b4c12bab017723dbb001b6f94ae2afc340e260c9eb523ea50606e1641b7f5196d1aa3e98234ba91d0f32b1baa6a1bcb6a5444ae31a4cfd15f9848104bf91033b0a2ab8a7e51c7a8bed8930a623e4b1d1cce0bf94486e6690828ac34e33ce0b94b3120347edc224e6b0d3b1267e7012bb0b67da8ca950057da5ecb088c75aa0df92c46f7f2e247e2a5f24ddb17dff5664942aa8efa6e1490f1512bfd26b2cbab6d67ad6ee03726a42a3d957b38dcb5cab358de4b2e8539f72b6225f4b7048da3de7979b87177a58b251dc4cf76008184ebaa125666426a16b22453d3d8e3e0d224b73b84de8b8b47189f7ad6d2de85a432c6afc91e19493cf7e8cbf3ef605964602722e3772f9442db64d713861f853eb1068178f03e26b67e17fdc6593d58262f7b7089e6bfa1af90b37948f26db671488ce2f1313224588cacb1653f182a8699e7c065e4e4da28267e402d84173ba28f9a567036b8a65c7bbac5bb2eeb536dadbf94ed012934d387a99133ae98fa0483239349e6557a5a44858d7ef151c832a9167251f32813a200f2bd8b491c44ea4459ac4935e1fc087dcda379f2a7af1cb89570aaccfc9125d172b0747c722d30889bbc4b681ca551992d2723187cc91629f1eea4662e091a45ad0d89d84ed6154a55cc122c4d2c1e709e41f928eb73faaaf2c21b7258fccafa2586c85d5cfc2ec7c2640864782bd8e03e6d8c86bd662a4c175d7177dd510927d231076579ed302beca74204062191d9d1e242ac5fc63a2efbae99cff41d298101d45e06606adc1f32de2d79a03b07ca3d6263a3bfd0e8b90ef4fd1280b1c19e681df1b04758fbb622f58ac0843c29c63d37a43b89c656636cf09651e57493cc2d7d568430ba8f05e3d58751d352d005db7a7dc449a424096fb50c7e4ca37b8fd498797f811e8d4c60be0ffd0e29372005f0474dfed178e9c7b0083c5ae2b419b09e01914f53a3eed0f54577ad2a48f30239822bf539fc4e89d396e8f93a10f39ee6f5e74a86c1d93877f94a26fc4504341058be8b17d9f389633fdcd1dbc98b499e6a0d389850782782d0405f8623e1e181f690c21283389a7988efdcd0903c3d697d0b45d9c161f7ed08edc98b34affac5a1cd60349aac8dc56d208deefddf00019917d21fa7810e9b8e394389ca5ef6750377fcfd8b340884442431cd84620f6f802359c96efda3b1c6acebef557e7d800f9905af8d8e8a1bdaf764ae16e6fe5bf96350eb2a453084e60da3ffbc6fc9e6310c6774542db40d99746e0f9a17ad0981ca11e505c6216f3f99e8b8d4d961fc7ed70bf4a934572e07cab19e97efa2701270c3c8f48edad167ee8d787d865447bd370860c3a69cef20e0993f3e78ee2581b00cc8858d6b49920cd7aacfede79ed854f3d7d490c0f662436e013d1f3dad35635b097bc6740af650472586342835ef563279bf35d10efdbab6271e8229fa7ca84e0968eb3a833500db60081a64db90bdf6a61f4e5228f2980a2f7bfe408fcc8a06a4f9a15a744ec298ab9c04a7e980bb8105452665dfeb85bf639bb71ae5d90691456eae1525a51559878a275d4d1dd7f4ab256e2a33c50a1f40b7218f3a9a1b47c4bb312837c1a388738eec04392fd4fb2703c2ca6c6f5fd9d38828764e36c47eeac0326d4f7ce771f42e9238a41d277f7371afe11c9dd5be9963a28adbc2b366067cc2676a5f03c6653b17db1d8bc8143a4b8f5f211ddb95109e5145d7790bff4f28c7030f72a5c0dba24309bb950700c5677bdf4c28ffbde48d982d9db9b8071c68be4804d2a3b7df2806d0205ad22d65a58f3a9b73d3acdf87cb136d2585ae6c151a588eb67116c466f767eeda8a4bfcabc478ebaa8bdd2a7e673a5c7f20c1dd22f2ca14fd321b05954d209d22c98387f65e301d8d9cd3212272d52361284d0c281785b329cfdd137a66a74e5d470360a385ce6b833ae259cdd4a67794f660eeab2b0cdb2cb752bb79a085d8d281752b85a83e5cbf167ccf7ee61ed2819295160052a4370e50c92b6bec5b9462a20b76bd5b1e9285d138597082a29bd80b38afea5adbc8cbe6ab042d124929fdac90fe02335d5e601fe0530ae3e02fa30a41ca337efb784b66be92ff7806d7950d535bbfda5af65d2e9aabe1be87749473217526c9e1e010af8fbce67fd40d638456de926eed9a7487f1ca1b7b2d7b05d4caa61697a33c67db4fbed99fb27c93ba6734ec66d6289ae11a36e45e86482c373e7e88d56a705e6a034e03816481c59ee50d19e2948dda03e73bdca5303ace9e1cfc2b63071bc1f014da9793ee05c15c460131f42d3d4955127487772df4cf87b92eb8b9bb5e42eb41838f64080c833ffab90f91c91ea5a026b87783e0b78d9d14f42db65bca1f3f28fab54548990f91489a79ac9cfca4cae8a1610d1349474c8a841c3f8cfa73e2655ba1a6246b0d370439baa662712dc87e9e0e1e12ec3e4038e6d46c29fae5bf5457e36802c504ea8a86281937e50cb1b0b994eddcd5e72c6460aa5b87ffc36f7b6cba2f75c3ca83177c37</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 年度目标 </category>
          
          <category> 加密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密 </tag>
            
            <tag> 年度目标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/2024/06/10/Markdown-all/"/>
      <url>/2024/06/10/Markdown-all/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法自带格式"><a href="#Markdown语法自带格式" class="headerlink" title="Markdown语法自带格式"></a>Markdown语法自带格式</h1><div class="note info modern"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning modern"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">源码演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="多级标题"><a href="#多级标题" class="headerlink" title="多级标题"></a>多级标题</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>见文章标题</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<del>删除</del>线演示</p><font size = 5>5号字</font><font face="黑体">黑体</font><font color=blue>蓝色</font><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><div class="note info modern"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><blockquote><p> Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>….</p></blockquote></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><hr><hr></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="列表-跟空格都可以"><a href="#列表-跟空格都可以" class="headerlink" title="列表(*,+,-跟空格都可以)"></a>列表(*,+,-跟空格都可以)</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 列表1</span><br><span class="line"><span class="bullet">-</span> 列表2</span><br><span class="line"><span class="bullet">-</span> 列表3</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ul><li>列表1</li><li>列表2</li><li>列表3</li></ul></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 列表1</span><br><span class="line"><span class="bullet">2.</span> 列表2</span><br><span class="line"><span class="bullet">3.</span> 列表3</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li>列表1</li><li>列表2</li><li>列表3</li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 列表1</span><br><span class="line"><span class="bullet">    -</span> 列表1-1</span><br><span class="line"><span class="bullet">    -</span> 列表1-2</span><br><span class="line"><span class="bullet">2.</span> 列表2</span><br><span class="line"><span class="bullet">3.</span> 列表3</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li>列表1<ul><li>列表1-1</li><li>列表1-2</li></ul></li><li>列表2</li><li>列表3</li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>本地图片<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 表头1 | 表头2 | 表头3 |</span><br><span class="line">| ---- | ---- | ---- |</span><br><span class="line">| 单元格1 | 单元格2 | 单元格3 |</span><br><span class="line">| 单元格4 | 单元格5 | 单元格6 |</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><div class="table-container"><table><thead><tr><th>表头1</th><th>表头2</th><th>表头3</th></tr></thead><tbody><tr><td>单元格1</td><td>单元格2</td><td>单元格3</td></tr><tr><td>单元格4</td><td>单元格5</td><td>单元格6</td></tr></tbody></table></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">示例源码</button><button type="button" class="tab " data-href="test1-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><script type="math/tex; mode=display">\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.</script></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h1 id="Butterfly外挂标签"><a href="#Butterfly外挂标签" class="headerlink" title="Butterfly外挂标签"></a>Butterfly外挂标签</h1><div class="note info modern"><p>这部分参考安知鱼:<a href="https://blog.anheyu.com/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">示例源码</button><button type="button" class="tab " data-href="test1-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol></div><div class="tab-item-content" id="test1-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line">- 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="引用note"><a href="#引用note" class="headerlink" title="引用note"></a>引用note</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">通用配置</button><button type="button" class="tab " data-href="test1-2">语法格式</button><button type="button" class="tab " data-href="test1-3">参数配置</button><button type="button" class="tab " data-href="test1-4">示例源码</button><button type="button" class="tab " data-href="test1-5">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-3"><p>1.自带icon</p><div class="table-container"><table><thead><tr><th>参数</th><th>用法</th></tr></thead><tbody><tr><td>class</td><td>【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td>【可选】不显示 icon</td></tr><tr><td>style</td><td>【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><p>2.外部icon</p><div class="table-container"><table><thead><tr><th>参数</th><th>用法</th></tr></thead><tbody><tr><td>color</td><td>【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td>【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td>【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div></div><div class="tab-item-content" id="test1-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>2.<code>modern</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>3.<code>flat</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>4.<code>disabled</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>5.<code>no-icon</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>2.<code>modern</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>3.<code>flat</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>4.<code>disabled</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><br>5.<code>no-icon</code>样式<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details></div><div class="tab-item-content" id="test1-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div><p>2.<code>modern</code>样式</p><div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon modern"><p>默认 提示块标签</p></div><div class="note default no-icon modern"><p>default 提示块标签</p></div><div class="note primary no-icon modern"><p>primary 提示块标签</p></div><div class="note success no-icon modern"><p>success 提示块标签</p></div><div class="note info no-icon modern"><p>info 提示块标签</p></div><div class="note warning no-icon modern"><p>warning 提示块标签</p></div><div class="note danger no-icon modern"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon modern"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon modern"><p>2021年快到了….</p></div><div class="note pink no-icon modern"><p>小心开车 安全至上</p></div><div class="note red no-icon modern"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon modern"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon modern"><p>剪刀石头布</p></div><div class="note green no-icon modern"><p>前端最讨厌的浏览器</p></div>              </div>            </details></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><div class="note info modern"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div></div><div class="tab-item-content" id="test1-3"><p>1.On DOM load（当页面加载时显示动画）<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><br>2.调整动画速度<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><br>3.On hover（当鼠标悬停时显示动画）<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><br>4.On parent hover（当鼠标悬停在父级元素时显示动画）<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></p></div><div class="tab-item-content" id="test1-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color:timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">示例源码</button><button type="button" class="tab " data-href="test1-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="按钮-btns"><a href="#按钮-btns" class="headerlink" title="按钮 btns"></a>按钮 btns</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">参数配置</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加<code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><div class="table-container"><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table></div></div><div class="tab-item-content" id="test1-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="github卡片-ghcard"><a href="#github卡片-ghcard" class="headerlink" title="github卡片 ghcard"></a>github卡片 ghcard</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">参数配置</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><div class="table-container"><table><thead><tr><th>参数名</th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table></div></div><div class="tab-item-content" id="test1-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><p>1.用户信息卡片</p><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><p>2.仓库信息卡片</p><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="github徽标-ghbdage"><a href="#github徽标-ghbdage" class="headerlink" title="github徽标 ghbdage"></a>github徽标 ghbdage</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol></div><div class="tab-item-content" id="test1-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><p>1.基本参数,定义徽标左右文字和图标</p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object>2.信息参数，定义徽标右侧内容背景色，指向链接<object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object>3.拓展参数，支持shields的API的全部参数内容<object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="网站卡片-sites"><a href="#网站卡片-sites" class="headerlink" title="网站卡片 sites"></a>网站卡片 sites</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">示例源码</button><button type="button" class="tab " data-href="test1-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-3"><div class="site-card-group"><a class="site-card" href="https://xaoxuu.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">xaoxuu</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>高度</code>：height=20px</li></ol></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="单张图片-image"><a href="#单张图片-image" class="headerlink" title="单张图片 image"></a>单张图片 image</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol></div><div class="tab-item-content" id="test1-3"><p>1.添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>2.指定宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><p>3.指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>4.设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2.指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：复制成功<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">示例源码</button><button type="button" class="tab " data-href="test1-3">配置参数</button><button type="button" class="tab " data-href="test1-4">示例源码</button><button type="button" class="tab " data-href="test1-5">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br><span class="line"><span class="code">````</span></span><br><span class="line"><span class="code">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">&lt;!-- tab 渲染演示--&gt;</span></span><br><span class="line"><span class="code">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span></span><br><span class="line"><span class="code">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">&#123;% endtabs %&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">## 视频 video</span></span><br><span class="line"><span class="code">&#123;% tabs test1 %&#125;</span></span><br><span class="line"><span class="code">&lt;!-- tab 标签语法--&gt;</span></span><br><span class="line"><span class="code">```Markdown</span></span><br><span class="line"><span class="code">&#123;% video 视频链接 %&#125;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-3"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol></div><div class="tab-item-content" id="test1-4"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><p>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-5"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="相册-gallery"><a href="#相册-gallery" class="headerlink" title="相册 gallery"></a>相册 gallery</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">参数配置</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ul><li>gallerygroup 相册图库</li></ul><div class="table-container"><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr><tr><td>gallery</td><td>相册</td></tr></tbody></table></div><ul><li>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。建议在粘贴时故意使用长短、大小、横竖不一的图片，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</li></ul></div><div class="tab-item-content" id="test1-3"><p>1.gallerygroup 相册图库</p><figure class="highlight plaintext"><figcaption><span>class</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main"><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="gallery-container" data-type="data" data-button="">      <div class="gallery-data">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":""}]</div>      <div class="gallery-items">      </div>    </div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">示例源码</button><button type="button" class="tab " data-href="test1-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><ol><li><code>颜色</code>：blue, cyan, green, yellow, red</li><li><code>状态</code>：状态填写 open 代表默认打开。</li></ol></div><div class="tab-item-content" id="test1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">配置参数</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li>Unique name :</li></ol><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul><ol><li>[index]:</li></ol><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul><ol><li>[Tab caption]:</li></ol><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul><ol><li>[@icon]:</li></ol><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></div><div class="tab-item-content" id="test1-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">test1 1</button><button type="button" class="tab " data-href="test1-2">test1 2</button><button type="button" class="tab " data-href="test1-3">test1 3</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><button type="button" class="tab " data-href="test2-1">test2 1</button><button type="button" class="tab " data-href="test2-2">test2 2</button><button type="button" class="tab  active" data-href="test2-3">test2 3</button></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs no-default"><button type="button" class="tab " data-href="test3-1">test3 1</button><button type="button" class="tab " data-href="test3-2">test3 2</button><button type="button" class="tab " data-href="test3-3">test3 3</button></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test4-1">第一个Tab</button><button type="button" class="tab " data-href="test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button><button type="button" class="tab " data-href="test4-3"><i class="fas fa-bomb"></i>炸弹</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">参数配置</button><button type="button" class="tab " data-href="test1-2">示例源码</button><button type="button" class="tab " data-href="test1-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol></div><div class="tab-item-content" id="test1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="阿里图标-icon"><a href="#阿里图标-icon" class="headerlink" title="阿里图标 icon"></a>阿里图标 icon</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">参数配置</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="引用文献-reference"><a href="#引用文献-reference" class="headerlink" title="引用文献 reference"></a>引用文献 reference</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">参数配置</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li>referto 引用上标</li></ol><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul><ol><li>referfrom 引用出处</li></ol><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，Butterfly主题<span class="hidden-anchor" id="referto_[3]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[7]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[8]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[9]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="气泡注释-bubble"><a href="#气泡注释-bubble" class="headerlink" title="气泡注释 bubble"></a>气泡注释 bubble</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">参数配置</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span>&lt;/span&gt;，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局”，用来为盒状模型提供最大的灵活性”</span>&lt;/span&gt;，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span>&lt;/span&gt;，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span>&lt;/span&gt;写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span>&lt;/span&gt;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="进度条-progress"><a href="#进度条-progress" class="headerlink" title="进度条 progress"></a>进度条 progress</h2><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen">Cuteen</a>主题。</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">标签语法</button><button type="button" class="tab " data-href="test1-2">参数配置</button><button type="button" class="tab " data-href="test1-3">示例源码</button><button type="button" class="tab " data-href="test1-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol></div><div class="tab-item-content" id="test1-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>可见<a href="https://www.fomal.cc/posts/2013454d.html">猕猴桃</a>的教学</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GPT-sovits使用教程</title>
      <link href="/2024/06/02/GPT-sovits/"/>
      <url>/2024/06/02/GPT-sovits/</url>
      
        <content type="html"><![CDATA[<p>大家好，今天介绍一下一款很强大的AI人声克隆（TTS）工具，GPT-sovits！</p><h1 id="GPT-sovits"><a href="#GPT-sovits" class="headerlink" title="GPT-sovits"></a>GPT-sovits</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li><p>零样本文本到语音（TTS）： 输入 5 秒的声音样本，即刻体验文本到语音转换。</p></li><li><p>少样本 TTS： 仅需 1 分钟的训练数据即可微调模型，提升声音相似度和真实感。</p></li><li><p>跨语言支持： 支持与训练数据集不同语言的推理，目前支持英语、日语和中文。</p></li><li><p>WebUI 工具： 集成工具包括声音伴奏分离、自动训练集分割、中文自动语音识别(ASR)和文本标注，协助初学者创建训练数据集和 GPT/SoVITS 模型。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2></li><li>下载地址：<a href="https://github.com/RVC-Boss/GPT-SoVITS/archive/refs/heads/main.zip">GPT-SoVITS</a></li><li>仓库：<a href="https://github.com/RVC-Boss/GPT-SoVITS">GPT-SoVITS</a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2></li><li><p>中国地区用户可<a href="https://www.codewithgpu.com/i/RVC-Boss/GPT-SoVITS/GPT-SoVITS-Official">点击此处</a>使用 AutoDL 云端镜像进行体验。</p></li><li><p>测试通过的环境<br>Python 3.9，PyTorch 2.0.1，CUDA 11<br>Python 3.10.13，PyTorch 2.1.2，CUDA 12.3<br>Python 3.9，Pytorch 2.2.2，macOS 14.4.1（Apple 芯片）<br>Python 3.9，PyTorch 2.2.2，CPU 设备<br>注: numba==0.56.4 需要 python&lt;3.11</p></li></ul><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul><li><p>如果你是 Windows 用户（已在 win&gt;=10 上测试），可以下载<a href="https://huggingface.co/lj1995/GPT-SoVITS-windows-package/resolve/main/GPT-SoVITS-beta-fast-inference-branch.7z?download=true">0206fix3</a> 整合包或<a href="https://huggingface.co/lj1995/GPT-SoVITS-windows-package/resolve/main/GPT-SoVITS-beta0217fix2.7z?download=true">0217fix2</a> 整合包，解压后双击 go-webui.bat 即可启动 GPT-SoVITS-WebUI。</p></li><li><p>中国地区用户可以通过点击链接并选择“下载副本”来下载<a href="https://www.icloud.com.cn/iclouddrive/075NNKIRC2zqnWn-9rhD63WGA#GPT-SoVITS-beta0206fix3">0206fix3</a> 整合包或<a href="https://www.icloud.com.cn/iclouddrive/091QHaIbZMDZYQg7IX3g2kCqg#GPT-SoVITS-beta0217fix2">0217fix2</a> 整合包。(如果下载时遇到错误，请退出登录)<br>注：0206版本的推理速度更快，0217新版的推理效果更好，可按需选择</p><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda create -n GPTSoVits python=3.9</span><br><span class="line">conda activate GPTSoVits</span><br><span class="line">bash install.sh</span><br></pre></td></tr></table></figure><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p><strong>注：在 Mac 上使用 GPU 训练的模型效果显著低于其他设备训练的模型，所以我们暂时使用CPU进行训练。</strong></p></li><li><p>运行 <code>xcode-select --install</code> 安装 <code>Xcode command-line tools</code>。<br>运行 <code>brew install ffmpeg</code> 或 <code>conda install ffmpeg</code> 安装 <code>FFmpeg</code>。<br>完成上述步骤后，运行以下的命令来安装本项目：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda create -n GPTSoVits python=3.9</span><br><span class="line">conda activate GPTSoVits</span><br><span class="line"></span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h3><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h4 id="安装ffmpg"><a href="#安装ffmpg" class="headerlink" title="安装ffmpg"></a>安装ffmpg</h4><h5 id="conda使用者"><a href="#conda使用者" class="headerlink" title="conda使用者"></a>conda使用者</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install ffmpeg</span><br></pre></td></tr></table></figure><h5 id="Ubuntu-Debian-使用者"><a href="#Ubuntu-Debian-使用者" class="headerlink" title="Ubuntu/Debian 使用者"></a>Ubuntu/Debian 使用者</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ffmpeg</span><br><span class="line">sudo apt install libsox-dev</span><br><span class="line">conda install -c conda-forge &#x27;ffmpeg&lt;7&#x27;</span><br></pre></td></tr></table></figure><h5 id="Windows使用者"><a href="#Windows使用者" class="headerlink" title="Windows使用者"></a>Windows使用者</h5></li><li>下载并将 <a href="https://huggingface.co/lj1995/VoiceConversionWebUI/blob/main/ffmpeg.exe">ffmpeg.exe</a> 和 <a href="https://huggingface.co/lj1995/VoiceConversionWebUI/blob/main/ffprobe.exe">ffprobe.exe</a> 放置在 GPT-SoVITS 根目录下。<h3 id="Docker中使用"><a href="#Docker中使用" class="headerlink" title="Docker中使用"></a>Docker中使用</h3><h4 id="docker-compose-yaml-设置"><a href="#docker-compose-yaml-设置" class="headerlink" title="docker-compose.yaml 设置"></a>docker-compose.yaml 设置</h4></li><li>image 的标签：由于代码库更新很快，镜像的打包和测试又很慢，所以请自行在 Docker Hub 查看当前打包好的最新的镜像并根据自己的情况选用，或者在本地根据您自己的需求通过 Dockerfile 进行构建。 环境变量：</li><li>is_half: 半精度/双精度控制。在进行 “SSL extracting” 步骤时如果无法正确生成 4-cnhubert/5-wav32k 目录下的内容时，一般都是它引起的，可以根据实际情况来调整为 True 或者 False。</li><li>Volume 设置，容器内的应用根目录设置为 /workspace。 默认的 docker-compose.yaml 中列出了一些实际的例子，便于上传/下载内容。</li><li>shm_size：Windows 下的 Docker Desktop 默认可用内存过小，会导致运行异常，根据自己情况酌情设置。</li><li>deploy 小节下的 gpu 相关内容，请根据您的系统和实际情况酌情设置。<h4 id="通过-docker-compose-运行"><a href="#通过-docker-compose-运行" class="headerlink" title="通过 docker compose 运行"></a>通过 docker compose 运行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose -f &quot;docker-compose.yaml&quot; up -d</span><br></pre></td></tr></table></figure><h4 id="通过-docker-命令运行"><a href="#通过-docker-命令运行" class="headerlink" title="通过 docker 命令运行"></a>通过 docker 命令运行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -it --gpus=all --env=is_half=False --volume=G:\GPT-SoVITS-DockerTest\output:/workspace/output --volume=G:\GPT-SoVITS-DockerTest\logs:/workspace/logs --volume=G:\GPT-SoVITS-DockerTest\SoVITS_weights:/workspace/SoVITS_weights --workdir=/workspace -p 9880:9880 -p 9871:9871 -p 9872:9872 -p 9873:9873 -p 9874:9874 --shm-size=&quot;16G&quot; -d breakstring/gpt-sovits:xxxxx</span><br></pre></td></tr></table></figure><h2 id="预训练模型"><a href="#预训练模型" class="headerlink" title="预训练模型"></a>预训练模型</h2>从 <a href="https://huggingface.co/lj1995/GPT-SoVITS">GPT-SoVITS Models</a> 下载预训练模型，并将它们放置在 <code>GPT_SoVITS\pretrained_models</code> 中。</li></ul><p>对于 UVR5（人声/伴奏分离和混响移除，附加），从<a href="https://huggingface.co/lj1995/VoiceConversionWebUI/tree/main/uvr5_weights"> UVR5 Weights</a> 下载模型，并将它们放置在 <code>tools/uvr5/uvr5_weights</code> 中。</p><p>中国地区用户可以进入以下链接并点击“下载副本”下载以上两个模型：</p><ul><li><p><a href="https://www.icloud.com.cn/iclouddrive/056y_Xog_HXpALuVUjscIwTtg#GPT-SoVITS_Models">GPT-SoVITS Models</a></p></li><li><p><a href="https://www.icloud.com.cn/iclouddrive/0bekRKDiJXboFhbfm3lM2fVbA#UVR5_Weights">UVR5 Weights</a></p></li></ul><p>对于中文自动语音识别（附加），从 <a href="https://modelscope.cn/models/damo/speech_paraformer-large_asr_nat-zh-cn-16k-common-vocab8404-pytorch/files">Damo ASR Model</a>, <a href="https://modelscope.cn/models/iic/speech_fsmn_vad_zh-cn-16k-common-pytorch/files">Damo VAD Model</a>, 和 <a href="https://modelscope.cn/models/iic/punc_ct-transformer_zh-cn-common-vocab272727-pytorch/files">Damo Punc Model</a> 下载模型，并将它们放置在 <code>tools/asr/models</code> 中。</p><p>对于英语与日语自动语音识别（附加）,从 <a href="https://huggingface.co/Systran/faster-whisper-large-v3">Faster Whisper Large V3</a> 下载模型，并将它们放置在<code>tools/asr/models</code> 中。 此外，其他模型可能具有类似效果，但占用更小的磁盘空间。</p><p>中国地区用户可以通过以下链接下载：</p><ul><li><p><a href="https://www.icloud.com/iclouddrive/0c4pQxFs7oWyVU1iMTq2DbmLA#faster-whisper-large-v3">Faster Whisper Large V3</a> (点击“下载副本”)</p></li><li><p><a href="https://hf-mirror.com/Systran/faster-whisper-large-v3">Faster Whisper Large V3</a> (Hugging Face镜像站)</p><h2 id="数据集格式"><a href="#数据集格式" class="headerlink" title="数据集格式"></a>数据集格式</h2></li><li>文本到语音（TTS）注释 .list 文件格式：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vocal_path|speaker_name|language|text</span><br></pre></td></tr></table></figure><h3 id="语言字典："><a href="#语言字典：" class="headerlink" title="语言字典："></a>语言字典：</h3></li><li>‘zh’: Chinese</li><li>‘ja’: Japanese</li><li>‘en’: English<br>示例：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\GPT-SoVITS\xxx/xxx.wav|xxx|en|I like playing Genshin.</span><br></pre></td></tr></table></figure><h2 id="（附加）命令行运行方式"><a href="#（附加）命令行运行方式" class="headerlink" title="（附加）命令行运行方式"></a>（附加）命令行运行方式</h2></li><li>使用命令行打开UVR5的WebUI<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tools/uvr5/webui.py &quot;&lt;infer_device&gt;&quot; &lt;is_half&gt; &lt;webui_port_uvr5&gt;</span><br></pre></td></tr></table></figure></li><li>如果打不开浏览器，请按照下面的格式进行UVR处理，这是使用mdxnet进行音频处理的方式<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python mdxnet.py --model --input_root --output_vocal --output_ins --agg_level --format --device --is_half_precision </span><br></pre></td></tr></table></figure></li><li>这是使用命令行完成数据集的音频切分的方式<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">python audio_slicer.py \</span><br><span class="line">    --input_path &quot;&lt;path_to_original_audio_file_or_directory&gt;&quot; \</span><br><span class="line">    --output_root &quot;&lt;directory_where_subdivided_audio_clips_will_be_saved&gt;&quot; \</span><br><span class="line">    --threshold &lt;volume_threshold&gt; \</span><br><span class="line">    --min_length &lt;minimum_duration_of_each_subclip&gt; \</span><br><span class="line">    --min_interval &lt;shortest_time_gap_between_adjacent_subclips&gt; </span><br><span class="line">    --hop_size &lt;step_size_for_computing_volume_curve&gt;</span><br></pre></td></tr></table></figure></li><li>这是使用命令行完成数据集ASR处理的方式（仅限中文）<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tools/asr/funasr_asr.py -i &lt;input&gt; -o &lt;output&gt;</span><br></pre></td></tr></table></figure></li><li>通过Faster_Whisper进行ASR处理（除中文之外的ASR标记）<br>（没有进度条，GPU性能可能会导致时间延迟）<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ./tools/asr/fasterwhisper_asr.py -i &lt;input&gt; -o &lt;output&gt; -l &lt;language&gt;</span><br></pre></td></tr></table></figure>启用自定义列表保存路径<h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2></li><li><a href="https://github.com/RVC-Boss/GPT-SoVITS/blob/main/docs/cn/README.md#%E8%87%B4%E8%B0%A2">致谢</a><h2 id="WebUI使用教程"><a href="#WebUI使用教程" class="headerlink" title="WebUI使用教程"></a>WebUI使用教程</h2></li><li>【你的声音，现在是我的了！- 手把手教你用 GPT-SoVITS 克隆声音！】<br><a href="https://www.bilibili.com/video/BV1P541117yn/?share_source=copy_web&amp;vd_source=5f0d18fbe1c022e23131a75a1dc394ab">WebUI使用教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 音频 </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 语音合成 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> GPT-sovits </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CRAIC-2024目标射击实践过程</title>
      <link href="/2024/05/28/CRAIC-2024/"/>
      <url>/2024/05/28/CRAIC-2024/</url>
      
        <content type="html"><![CDATA[<p>大家好，今天介绍一下2024年CRAIC-2024挑战赛/机器人任务挑战赛（目标射击）我的实践过程叭~</p><h1 id="CRAIC目标射击实践"><a href="#CRAIC目标射击实践" class="headerlink" title="CRAIC目标射击实践"></a>CRAIC目标射击实践</h1><h2 id="1-比赛介绍"><a href="#1-比赛介绍" class="headerlink" title="1. 比赛介绍"></a>1. 比赛介绍</h2><ul><li>中国机器人及人工智能大赛是一项历史悠久、影响广泛的全国性学科竞赛。目前大赛已为我国培养了大量“能动手”、“敢创新”、“善协作”的复合型人才。大赛已列入中国高等教育学会发布的全国普通高等学校学科竞赛排行榜、全国普通高校大学生竞赛分析报告。为积极响应中国机器人及人工智能大赛组委会号召以及进一步发挥大赛培养学生主动学习、主动创新、主动创造的能力，激发广大学生探索、应用、创新、创造新技术的热情，有效推进相关专业人才培养。<h2 id="2-比赛任务"><a href="#2-比赛任务" class="headerlink" title="2. 比赛任务"></a>2. 比赛任务</h2></li><li>（1）到达目标点 1 （10’）</li><li>（2）击中环形标靶（击中环数*2） （20’）</li><li>（3）到达目标点 2 （10’）</li><li>（4）击倒 2 前方的标靶 （20’）</li><li>（5）到达目标点 3 （10’）</li><li>（6）击倒 3 前方的任务标靶 （20’）</li><li>（7）到达终点区域 （10’）</li><li>（8）竞赛文档 （10’）</li><li>注：每场比赛发生以下情况之一，则比赛结束：</li><li><ul><li>1、参赛队员举手示意结束比赛时，比赛结束。</li></ul></li><li><ul><li>2、机器人完全进入“终点”区域，比赛结束。</li></ul></li><li><ul><li>3、机器人在比赛过程中触碰到围挡，比赛结束。</li></ul></li><li><ul><li>4、裁判宣布比赛开始后机器人 30s 未开始运动比赛结束。</li></ul></li><li><ul><li>5、机器人运行过程中，参赛队员进入场地时，比赛结束。</li></ul></li><li><ul><li>6、比赛过程中裁判组有权根据机器人运行状态宣布比赛结束。</li></ul></li><li><ul><li><ul><li>（例如：机器人程序死机、机器人超过 20s 状态未发生变化）。</li></ul></li></ul></li><li><ul><li>以上情况，现场比赛成绩为结束当时的得分和用时。</li></ul></li><li><ul><li>注意：每场比赛总用时不超过 2 分钟，即裁判宣布比赛开始时开始计时 2 分钟，2 分钟计时结束则比赛结束，只记录 2 分钟时间内的成绩<h3 id="2-1-实践过程"><a href="#2-1-实践过程" class="headerlink" title="2.1 实践过程"></a>2.1 实践过程</h3><h4 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h4><h5 id="1-二维码识别"><a href="#1-二维码识别" class="headerlink" title="1 二维码识别"></a>1 二维码识别</h5>二维码识别部分，脚本放在abot_ws/src/robot_slam/scripts/ar_demo_s.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarkers</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ARTracker</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;ar_tracker_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;ar_tracker_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个订阅者，订阅AR标记的消息，消息类型为AlvarMarkers，回调函数为ar_cb</span></span><br><span class="line">        self.sub = rospy.Subscriber(<span class="string">&#x27;/ar_pose_marker&#x27;</span>, AlvarMarkers, self.ar_cb)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化AR标记的x和y坐标</span></span><br><span class="line">        self.ar_x_0 = <span class="number">0.0</span></span><br><span class="line">        self.ar_y_0 = <span class="number">0.0</span></span><br><span class="line">        <span class="comment"># 初始化AR标记的ID</span></span><br><span class="line">        self.<span class="built_in">id</span> = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># AR标记消息的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ar_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="comment"># 遍历接收到的所有AR标记</span></span><br><span class="line">        <span class="keyword">for</span> marker <span class="keyword">in</span> data.markers:</span><br><span class="line">            <span class="comment"># 如果AR标记的ID为0</span></span><br><span class="line">            <span class="keyword">if</span> marker.<span class="built_in">id</span> == <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 更新AR标记的x和y坐标</span></span><br><span class="line">                self.ar_x_0 = marker.pose.pose.position.x</span><br><span class="line">                self.ar_y_0 = marker.pose.pose.position.y</span><br><span class="line">                <span class="comment"># 更新AR标记的ID</span></span><br><span class="line">                self.<span class="built_in">id</span> = marker.<span class="built_in">id</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 打印检测到的AR标记的ID和位置信息</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Detected AR Marker ID:&#x27;</span>, self.<span class="built_in">id</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;AR Marker Position (x,y):&#x27;</span>, self.ar_x_0, self.ar_y_0)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建ARTracker对象</span></span><br><span class="line">        ar_tracker = ARTracker()</span><br><span class="line">        <span class="comment"># 进入ROS事件循环</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h5 id="2-二维码射击"><a href="#2-二维码射击" class="headerlink" title="2 二维码射击"></a>2 二维码射击</h5>二维码射击部分，脚本放在abot_ws/src/robot_slam/scripts/ar_shoot_demo.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 上面这行是为了告诉操作系统，这是一个Python脚本，可以直接运行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarkers</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Twist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义Yaw阈值</span></span><br><span class="line">Yaw_th = <span class="number">0.0045</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ARTracker</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;ar_tracker_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;ar_tracker_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个订阅者，订阅AR标记的消息，消息类型为AlvarMarkers，回调函数为ar_cb</span></span><br><span class="line">        self.sub = rospy.Subscriber(<span class="string">&#x27;/ar_pose_marker&#x27;</span>, AlvarMarkers, self.ar_cb)</span><br><span class="line">        <span class="comment"># 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span></span><br><span class="line">        self.pub = rospy.Publisher(<span class="string">&quot;/cmd_vel&quot;</span>, Twist, queue_size=<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># AR标记消息的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ar_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="keyword">global</span> ar_x, ar_x_abs, Yaw_th</span><br><span class="line">        <span class="comment"># 获取所有AR标记</span></span><br><span class="line">        ar_markers = data</span><br><span class="line">        <span class="comment"># 遍历接收到的所有AR标记</span></span><br><span class="line">        <span class="keyword">for</span> marker <span class="keyword">in</span> data.markers:</span><br><span class="line">            <span class="comment"># 如果AR标记的ID为0</span></span><br><span class="line">            <span class="keyword">if</span> marker.<span class="built_in">id</span> == <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 获取AR标记的x坐标</span></span><br><span class="line">                ar_x = marker.pose.pose.position.x</span><br><span class="line">                <span class="comment"># 计算AR标记x坐标的绝对值</span></span><br><span class="line">                ar_x_abs = <span class="built_in">abs</span>(ar_x)</span><br><span class="line">                <span class="comment"># 如果AR标记的x坐标绝对值大于等于Yaw阈值</span></span><br><span class="line">                <span class="keyword">if</span> ar_x_abs &gt;= Yaw_th:</span><br><span class="line">                    <span class="comment"># 创建一个Twist消息</span></span><br><span class="line">                    msg = Twist()</span><br><span class="line">                    <span class="comment"># 设置消息的角速度为AR标记x坐标的相反值（*-1）</span></span><br><span class="line">                    msg.angular.z = -<span class="number">1.5</span> * ar_x</span><br><span class="line">                    <span class="comment"># 发布Twist消息</span></span><br><span class="line">                    self.pub.publish(msg)</span><br><span class="line">                <span class="comment"># 如果AR标记的x坐标绝对值小于Yaw阈值</span></span><br><span class="line">                <span class="keyword">elif</span> ar_x_abs &lt; Yaw_th:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;ok&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建ARTracker对象</span></span><br><span class="line">        ar_tracker = ARTracker()</span><br><span class="line">        <span class="comment"># 进入ROS事件循环</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h5 id="3-图像识别"><a href="#3-图像识别" class="headerlink" title="3 图像识别"></a>3 图像识别</h5>图像识别部分，脚本放在abot_ws/src/robot_slam/scripts/find_demo_s.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 上面这行是为了告诉操作系统，这是一个Python脚本，可以直接运行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Point</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">object_position</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;object_position_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;object_position_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个订阅者，订阅/object_position话题，消息类型为Point，回调函数为find_cb</span></span><br><span class="line">        self.find_sub = rospy.Subscriber(<span class="string">&#x27;/object_position&#x27;</span>, Point, self.find_cb)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># /object_position话题的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="comment"># 获取接收到的Point消息</span></span><br><span class="line">        point_msg = data</span><br><span class="line">        <span class="comment"># 打印接收到的点的x坐标</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;x:&#x27;</span>, point_msg.x)</span><br><span class="line">        <span class="comment"># 打印接收到的点的y坐标</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;y:&#x27;</span>, point_msg.y)</span><br><span class="line">        <span class="comment"># 打印接收到的点的z坐标</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;z:&#x27;</span>, point_msg.z)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建object_position对象</span></span><br><span class="line">        object_position = object_position()</span><br><span class="line">        <span class="comment"># 进入ROS事件循环</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h5 id="4-图像识别射击"><a href="#4-图像识别射击" class="headerlink" title="4 图像识别射击"></a>4 图像识别射击</h5>图像识别射击部分，脚本放在abot_ws/src/robot_slam/scripts/find_shoot_demo.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 上面这行是为了告诉操作系统，这是一个Python脚本，可以直接运行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Point, Twist</span><br><span class="line"><span class="keyword">import</span> serial</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> std_msgs.msg <span class="keyword">import</span> String</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置串口和波特率</span></span><br><span class="line">serialPort = <span class="string">&quot;/dev/shoot&quot;</span></span><br><span class="line">baudRate = <span class="number">9600</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开串口</span></span><br><span class="line">ser = serial.Serial(port=serialPort, baudrate=baudRate, parity=<span class="string">&quot;N&quot;</span>, bytesize=<span class="number">8</span>, stopbits=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">object_position</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;object_position_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;object_position_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个订阅者，订阅/object_position话题，消息类型为Point，回调函数为find_cb</span></span><br><span class="line">        self.find_sub = rospy.Subscriber(<span class="string">&#x27;/object_position&#x27;</span>, Point, self.find_cb)</span><br><span class="line">        <span class="comment"># 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span></span><br><span class="line">        self.pub = rospy.Publisher(<span class="string">&quot;/cmd_vel&quot;</span>, Twist, queue_size=<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># /object_position话题的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="keyword">global</span> flog0, flog1</span><br><span class="line">        <span class="comment"># 获取接收到的Point消息</span></span><br><span class="line">        point_msg = data</span><br><span class="line">        <span class="comment"># 计算目标点与图像中心的偏差</span></span><br><span class="line">        flog0 = point_msg.x - <span class="number">320</span></span><br><span class="line">        <span class="comment"># 计算偏差的绝对值</span></span><br><span class="line">        flog1 = <span class="built_in">abs</span>(flog0)</span><br><span class="line">        <span class="comment"># 如果偏差的绝对值大于0.5</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(flog1) &gt; <span class="number">0.5</span>:</span><br><span class="line">            <span class="comment"># 创建一个Twist消息</span></span><br><span class="line">            msg = Twist()</span><br><span class="line">            <span class="comment"># 设置消息的角速度为偏差乘以0.01</span></span><br><span class="line">            msg.angular.z = -<span class="number">0.01</span> * flog0</span><br><span class="line">            <span class="comment"># 发布Twist消息</span></span><br><span class="line">            self.pub.publish(msg)</span><br><span class="line">        <span class="comment"># 如果偏差的绝对值小于等于0.5</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">abs</span>(flog1) &lt;= <span class="number">0.5</span>:</span><br><span class="line">            <span class="comment"># 发送射击指令</span></span><br><span class="line">            ser.write(<span class="string">b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span> (<span class="string">&#x27;打印射击&#x27;</span>)</span><br><span class="line">            <span class="comment"># 等待0.1秒</span></span><br><span class="line">            time.sleep(<span class="number">0.08</span>)</span><br><span class="line">            <span class="comment"># 发送停止射击指令</span></span><br><span class="line">            ser.write(<span class="string">b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建object_position对象</span></span><br><span class="line">        object_position = object_position()</span><br><span class="line">        <span class="comment"># 进入ROS事件循环</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h5 id="5-机器人移动方法1"><a href="#5-机器人移动方法1" class="headerlink" title="5 机器人移动方法1"></a>5 机器人移动方法1</h5>机器人循环移动，脚本放在abot_ws/src/robot_slam/scripts/move_demo.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="comment"># 上面两行是为了告诉操作系统，这是一个Python脚本，并且使用UTF-8编码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Twist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义移动机器人的函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">move_robot</span>(<span class="params">linear_x, angular_z</span>):</span><br><span class="line">    <span class="comment"># 初始化ROS节点，命名为&#x27;move_robot_node&#x27;，并设置为匿名节点</span></span><br><span class="line">    rospy.init_node(<span class="string">&#x27;move_robot_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span></span><br><span class="line">    velocity_publisher = rospy.Publisher(<span class="string">&#x27;/cmd_vel&#x27;</span>, Twist, queue_size=<span class="number">10</span>)</span><br><span class="line">    <span class="comment"># 设置ROS发布频率为10Hz</span></span><br><span class="line">    rate = rospy.Rate(<span class="number">10</span>)  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建一个Twist消息，设置线速度和角速度</span></span><br><span class="line">    vel_msg = Twist()</span><br><span class="line">    vel_msg.linear.x = linear_x</span><br><span class="line">    vel_msg.angular.z = angular_z</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 循环发布消息，直到节点被关闭</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line">        velocity_publisher.publish(vel_msg)</span><br><span class="line">        rate.sleep()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 设置线速度和角速度</span></span><br><span class="line">        linear_x = <span class="number">0.2</span>   <span class="comment"># 线速度</span></span><br><span class="line">        angular_z = <span class="number">0.5</span>  <span class="comment"># 角速度</span></span><br><span class="line">        <span class="comment"># 调用move_robot函数，控制机器人移动</span></span><br><span class="line">        move_robot(linear_x, angular_z)</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h5 id="6-机器人移动方法2"><a href="#6-机器人移动方法2" class="headerlink" title="6 机器人移动方法2"></a>6 机器人移动方法2</h5>机器人指定移动，脚本放在abot_ws/src/robot_slam/scripts/move_robot.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="comment"># 上面两行是为了告诉操作系统，这是一个Python脚本，并且使用UTF-8编码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> Twist</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">move_robot</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 初始化ROS节点，命名为&#x27;move_robot_node&#x27;，并设置为匿名节点</span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;move_robot_node&#x27;</span>, anonymous=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 创建一个发布者，用于发布Twist类型的消息到/cmd_vel话题</span></span><br><span class="line">        self.pub = rospy.Publisher(<span class="string">&quot;/cmd_vel&quot;</span>, Twist, queue_size=<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 控制机器人移动的回调函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_cb</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">global</span> time</span><br><span class="line">        <span class="comment"># 初始化时间变量</span></span><br><span class="line">        time = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 创建一个Twist消息</span></span><br><span class="line">        msg = Twist()</span><br><span class="line">        msg.linear.x = <span class="number">1.0</span></span><br><span class="line">        msg.linear.y = <span class="number">0.0</span></span><br><span class="line">        msg.linear.z = <span class="number">0.0</span></span><br><span class="line">        msg.angular.x = <span class="number">0.0</span></span><br><span class="line">        msg.angular.y = <span class="number">0.0</span></span><br><span class="line">        msg.angular.z = <span class="number">0.0</span></span><br><span class="line">        <span class="comment"># 控制机器人移动，持续1秒</span></span><br><span class="line">        <span class="keyword">while</span> time &lt; <span class="number">10</span>:</span><br><span class="line">            self.pub.publish(msg)</span><br><span class="line">            rospy.sleep(<span class="number">0.1</span>)</span><br><span class="line">            time += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建move_robot对象</span></span><br><span class="line">        move = move_robot()</span><br><span class="line">        <span class="comment"># 调用move_cb函数，控制机器人移动</span></span><br><span class="line">        move.move_cb()</span><br><span class="line">    <span class="keyword">except</span> rospy.ROSInterruptException:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h5 id="7-射击实现"><a href="#7-射击实现" class="headerlink" title="7 射击实现"></a>7 射击实现</h5>单独的射击脚本，放在abot_ws/src/robot_slam/scripts/shoot_demo.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">a<span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 上面这行指定了Python解释器路径，使得脚本可以直接在命令行中执行</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="keyword">import</span> serial</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> std_msgs.msg <span class="keyword">import</span> String</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置串口和波特率</span></span><br><span class="line">serialPort = <span class="string">&quot;/dev/shoot&quot;</span></span><br><span class="line">baudRate = <span class="number">9600</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开串口</span></span><br><span class="line">ser = serial.Serial(port=serialPort, baudrate=baudRate, parity=<span class="string">&quot;N&quot;</span>, bytesize=<span class="number">8</span>, stopbits=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 发送射击指令</span></span><br><span class="line">        ser.write(<span class="string">b&#x27;\x55\x01\x12\x00\x00\x00\x01\x69&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&#x27;打印射击&#x27;</span>)</span><br><span class="line">        <span class="comment"># 等待0.1秒</span></span><br><span class="line">        time.sleep(<span class="number">0.08</span>)</span><br><span class="line">        <span class="comment"># 发送停止射击指令</span></span><br><span class="line">        ser.write(<span class="string">b&#x27;\x55\x01\x11\x00\x00\x00\x01\x68&#x27;</span>)</span><br><span class="line">        <span class="comment"># 进入ROS的spin循环，保持节点持续运行</span></span><br><span class="line">        rospy.spin()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h5 id="8-导航文件"><a href="#8-导航文件" class="headerlink" title="8 导航文件"></a>8 导航文件</h5>有这么几个自主巡航赛道的导航文件，我们可以借鉴一下，放在abot_ws/src/robot_slam/scripts/</li></ul></li><li>transform_utils.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; A couple of handy conversion utilities taken from the turtlebot_node.py script found in the</span></span><br><span class="line"><span class="string">    turtlebot_node ROS package at:</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    http://www.ros.org/wiki/turtlebot_node</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> PyKDL</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">quat_to_angle</span>(<span class="params">quat</span>):</span><br><span class="line">    rot = PyKDL.Rotation.Quaternion(quat.x, quat.y, quat.z, quat.w)</span><br><span class="line">    <span class="keyword">return</span> rot.GetRPY()[<span class="number">2</span>]</span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">normalize_angle</span>(<span class="params">angle</span>):</span><br><span class="line">    res = angle</span><br><span class="line">    <span class="keyword">while</span> res &gt; pi:</span><br><span class="line">        res -= <span class="number">2.0</span> * pi</span><br><span class="line">    <span class="keyword">while</span> res &lt; -pi:</span><br><span class="line">        res += <span class="number">2.0</span> * pi</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></li><li>navigation_multi_goals111.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> actionlib</span><br><span class="line"><span class="keyword">from</span> actionlib_msgs.msg <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> move_base_msgs.msg <span class="keyword">import</span> MoveBaseAction, MoveBaseGoal</span><br><span class="line"><span class="keyword">from</span> nav_msgs.msg <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> PoseWithCovarianceStamped</span><br><span class="line"><span class="keyword">from</span> tf_conversions <span class="keyword">import</span> transformations</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi</span><br><span class="line"><span class="keyword">from</span> std_msgs.msg <span class="keyword">import</span> String</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarkers</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarker</span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> = <span class="number">0</span></span><br><span class="line">flog = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">navigation_demo</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.set_pose_pub = rospy.Publisher(<span class="string">&#x27;/initialpose&#x27;</span>, PoseWithCovarianceStamped, queue_size=<span class="number">5</span>)</span><br><span class="line">        self.arrive_pub = rospy.Publisher(<span class="string">&#x27;/voiceWords&#x27;</span>,String,queue_size=<span class="number">10</span>)</span><br><span class="line">        self.ar_sub = rospy.Subscriber(<span class="string">&#x27;/ar_pose_marker&#x27;</span>, AlvarMarkers, self.ar_cb);</span><br><span class="line">        self.move_base = actionlib.SimpleActionClient(<span class="string">&quot;move_base&quot;</span>, MoveBaseAction)</span><br><span class="line">        self.move_base.wait_for_server(rospy.Duration(<span class="number">60</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ar_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="keyword">global</span> <span class="built_in">id</span>  </span><br><span class="line">        <span class="keyword">global</span> flog</span><br><span class="line">        ar_markers = data</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">len</span>(ar_markers.markers) == <span class="number">1</span>):</span><br><span class="line">            ar_marker = ar_markers.markers[<span class="number">0</span>]</span><br><span class="line">            <span class="built_in">id</span> = ar_marker.<span class="built_in">id</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">id</span> == <span class="number">0</span>) :</span><br><span class="line">                <span class="keyword">if</span> (flog == <span class="number">0</span>):           </span><br><span class="line">                    arrive_str = <span class="string">&quot;traget point is 1 2 3&quot;</span></span><br><span class="line">                    self.arrive_pub.publish(arrive_str)</span><br><span class="line">                    flog = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_pose</span>(<span class="params">self, p</span>):</span><br><span class="line">        <span class="keyword">if</span> self.move_base <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        x, y, th = p</span><br><span class="line"></span><br><span class="line">        pose = PoseWithCovarianceStamped()</span><br><span class="line">        pose.header.stamp = rospy.Time.now()</span><br><span class="line">        pose.header.frame_id = <span class="string">&#x27;map&#x27;</span></span><br><span class="line">        pose.pose.pose.position.x = x</span><br><span class="line">        pose.pose.pose.position.y = y</span><br><span class="line">        q = transformations.quaternion_from_euler(<span class="number">0.0</span>, <span class="number">0.0</span>, th/<span class="number">180.0</span>*pi)</span><br><span class="line">        pose.pose.pose.orientation.x = q[<span class="number">0</span>]</span><br><span class="line">        pose.pose.pose.orientation.y = q[<span class="number">1</span>]</span><br><span class="line">        pose.pose.pose.orientation.z = q[<span class="number">2</span>]</span><br><span class="line">        pose.pose.pose.orientation.w = q[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        self.set_pose_pub.publish(pose)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_done_cb</span>(<span class="params">self, status, result</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;navigation done! status:%d result:%s&quot;</span>%(status, result))</span><br><span class="line">        arrive_str = <span class="string">&quot;arrived to traget point&quot;</span></span><br><span class="line">        self.arrive_pub.publish(arrive_str)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_active_cb</span>(<span class="params">self</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;[Navi] navigation has be actived&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_feedback_cb</span>(<span class="params">self, feedback</span>):</span><br><span class="line">        msg = feedback</span><br><span class="line">        <span class="comment">#rospy.loginfo(&quot;[Navi] navigation feedback\r\n%s&quot;%feedback)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">goto</span>(<span class="params">self, p</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;[Navi] goto %s&quot;</span>%p)</span><br><span class="line">        <span class="comment">#arrive_str = &quot;going to next point&quot;</span></span><br><span class="line">        <span class="comment">#self.arrive_pub.publish(arrive_str)</span></span><br><span class="line">        goal = MoveBaseGoal()</span><br><span class="line"></span><br><span class="line">        goal.target_pose.header.frame_id = <span class="string">&#x27;map&#x27;</span></span><br><span class="line">        goal.target_pose.header.stamp = rospy.Time.now()</span><br><span class="line">        goal.target_pose.pose.position.x = p[<span class="number">0</span>]</span><br><span class="line">        goal.target_pose.pose.position.y = p[<span class="number">1</span>]</span><br><span class="line">        q = transformations.quaternion_from_euler(<span class="number">0.0</span>, <span class="number">0.0</span>, p[<span class="number">2</span>]/<span class="number">180.0</span>*pi)</span><br><span class="line">        goal.target_pose.pose.orientation.x = q[<span class="number">0</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.y = q[<span class="number">1</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.z = q[<span class="number">2</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.w = q[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        self.move_base.send_goal(goal, self._done_cb, self._active_cb, self._feedback_cb)</span><br><span class="line">        result = self.move_base.wait_for_result(rospy.Duration(<span class="number">60</span>))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            self.move_base.cancel_goal()</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Timed out achieving goal&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            state = self.move_base.get_state()</span><br><span class="line">            <span class="keyword">if</span> state == GoalStatus.SUCCEEDED:</span><br><span class="line">                rospy.loginfo(<span class="string">&quot;reach goal %s succeeded!&quot;</span>%p)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cancel</span>(<span class="params">self</span>):</span><br><span class="line">        self.move_base.cancel_all_goals()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    rospy.init_node(<span class="string">&#x27;navigation_demo&#x27;</span>,anonymous=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    goalListX = rospy.get_param(<span class="string">&#x27;~goalListX&#x27;</span>, <span class="string">&#x27;2.0, 2.0&#x27;</span>)</span><br><span class="line">    goalListY = rospy.get_param(<span class="string">&#x27;~goalListY&#x27;</span>, <span class="string">&#x27;2.0, 4.0&#x27;</span>)</span><br><span class="line">    goalListYaw = rospy.get_param(<span class="string">&#x27;~goalListYaw&#x27;</span>, <span class="string">&#x27;0, 90.0&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    goals = [[<span class="built_in">float</span>(x), <span class="built_in">float</span>(y), <span class="built_in">float</span>(yaw)] <span class="keyword">for</span> (x, y, yaw) <span class="keyword">in</span> <span class="built_in">zip</span>(goalListX.split(<span class="string">&quot;,&quot;</span>),goalListY.split(<span class="string">&quot;,&quot;</span>),goalListYaw.split(<span class="string">&quot;,&quot;</span>))]</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;Please 1 to continue: &#x27;</span>)</span><br><span class="line">    <span class="built_in">input</span> = raw_input()</span><br><span class="line">    <span class="built_in">print</span> (goals)</span><br><span class="line">    r = rospy.Rate(<span class="number">1</span>)</span><br><span class="line">    r.sleep()</span><br><span class="line">    navi = navigation_demo()</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">input</span> == <span class="string">&#x27;1&#x27;</span>):</span><br><span class="line">        navi.goto(goals[<span class="number">0</span>])</span><br><span class="line">        rospy.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&quot;target is:&quot;</span> + <span class="built_in">str</span>(<span class="built_in">id</span>))    </span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">id</span> == <span class="number">0</span>):</span><br><span class="line">            navi.goto(goals[<span class="number">1</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>)</span><br><span class="line">            navi.goto(goals[<span class="number">2</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>)</span><br><span class="line">            navi.goto(goals[<span class="number">3</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>)</span><br><span class="line">            navi.goto(goals[<span class="number">7</span>])</span><br><span class="line">            rospy.sleep(<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">id</span> == <span class="number">1</span>):</span><br><span class="line">            navi.goto(goals[<span class="number">4</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>)</span><br><span class="line">            navi.goto(goals[<span class="number">5</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>)</span><br><span class="line">            navi.goto(goals[<span class="number">6</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>)</span><br><span class="line">            navi.goto(goals[<span class="number">7</span>])</span><br><span class="line">            rospy.sleep(<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">id</span> == <span class="number">2</span>):</span><br><span class="line">            navi.goto(goals[<span class="number">1</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>)</span><br><span class="line">            navi.goto(goals[<span class="number">4</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>)</span><br><span class="line">            navi.goto(goals[<span class="number">6</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>)  </span><br><span class="line">            navi.goto(goals[<span class="number">7</span>])</span><br><span class="line">            rospy.sleep(<span class="number">5</span>)                 </span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line">        r.sleep()</span><br></pre></td></tr></table></figure></li><li>navigation_multi_goals.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> actionlib</span><br><span class="line"><span class="keyword">from</span> actionlib_msgs.msg <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> move_base_msgs.msg <span class="keyword">import</span> MoveBaseAction, MoveBaseGoal</span><br><span class="line"><span class="keyword">from</span> nav_msgs.msg <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> PoseWithCovarianceStamped</span><br><span class="line"><span class="keyword">from</span> tf_conversions <span class="keyword">import</span> transformations</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi</span><br><span class="line"><span class="keyword">from</span> std_msgs.msg <span class="keyword">import</span> String</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarkers</span><br><span class="line"><span class="keyword">from</span> ar_track_alvar_msgs.msg <span class="keyword">import</span> AlvarMarker</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg  <span class="keyword">import</span> Point</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">music_path=<span class="string">&quot;~/&#x27;07.mp3&#x27;&quot;</span></span><br><span class="line">music1_path=<span class="string">&quot;~/&#x27;07.mp3&#x27;&quot;</span></span><br><span class="line">music2_path=<span class="string">&quot;~/&#x27;07.mp3&#x27;&quot;</span></span><br><span class="line">music3_path=<span class="string">&quot;~/&#x27;07.mp3&#x27;&quot;</span></span><br><span class="line"><span class="built_in">id</span> = <span class="number">255</span></span><br><span class="line">flog0 = <span class="number">255</span></span><br><span class="line">flog1 = <span class="number">255</span></span><br><span class="line">flog2 = <span class="number">255</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">move_flog = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">navigation_demo</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.set_pose_pub = rospy.Publisher(<span class="string">&#x27;/initialpose&#x27;</span>, PoseWithCovarianceStamped, queue_size=<span class="number">5</span>)</span><br><span class="line">        self.arrive_pub = rospy.Publisher(<span class="string">&#x27;/voiceWords&#x27;</span>,String,queue_size=<span class="number">10</span>)</span><br><span class="line">        self.ar_sub = rospy.Subscriber(<span class="string">&#x27;/object_position&#x27;</span>, Point, self.ar_cb);</span><br><span class="line">        self.move_base = actionlib.SimpleActionClient(<span class="string">&quot;move_base&quot;</span>, MoveBaseAction)</span><br><span class="line">        self.move_base.wait_for_server(rospy.Duration(<span class="number">60</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ar_cb</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="keyword">global</span> <span class="built_in">id</span>  </span><br><span class="line">        <span class="keyword">global</span> flog0 , flog1 ,flog2,count,move_flog</span><br><span class="line">        <span class="built_in">id</span> =<span class="number">255</span></span><br><span class="line">        point_msg = data</span><br><span class="line">        <span class="comment">#rospy.loginfo(&#x27;z = %d&#x27;, point_msg.z)</span></span><br><span class="line"><span class="keyword">if</span> (point_msg.z != <span class="number">255</span>  <span class="keyword">and</span> move_flog == <span class="number">0</span>) :</span><br><span class="line">            <span class="keyword">if</span>(point_msg.z&gt;=<span class="number">1</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">8</span> <span class="keyword">and</span> flog0 ==<span class="number">255</span>):</span><br><span class="line">                <span class="built_in">id</span> = <span class="number">0</span></span><br><span class="line">                flog0 = <span class="number">0</span> </span><br><span class="line">            <span class="keyword">elif</span>(point_msg.z&gt;=<span class="number">9</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">16</span> <span class="keyword">and</span> flog1 ==<span class="number">255</span>):</span><br><span class="line">                <span class="built_in">id</span> = <span class="number">1</span></span><br><span class="line">                flog1 = <span class="number">1</span> </span><br><span class="line">            <span class="keyword">elif</span>(point_msg.z&gt;=<span class="number">17</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">24</span> <span class="keyword">and</span> flog2 ==<span class="number">255</span>):</span><br><span class="line">                <span class="built_in">id</span> = <span class="number">2</span></span><br><span class="line">                flog2 = <span class="number">2</span> </span><br><span class="line">                </span><br><span class="line"><span class="keyword">elif</span> (point_msg.z != <span class="number">255</span> <span class="keyword">and</span> move_flog == <span class="number">1</span>) :</span><br><span class="line">            <span class="keyword">if</span>(point_msg.z&gt;=<span class="number">1</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">8</span>):</span><br><span class="line">                <span class="built_in">id</span> = <span class="number">0</span></span><br><span class="line">            <span class="keyword">elif</span>(point_msg.z&gt;=<span class="number">9</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">16</span>):</span><br><span class="line">                <span class="built_in">id</span> = <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span>(point_msg.z&gt;=<span class="number">17</span> <span class="keyword">and</span> point_msg.z&lt;=<span class="number">24</span>):</span><br><span class="line">                <span class="built_in">id</span> = <span class="number">2</span></span><br><span class="line">        <span class="comment">#print flog0 , flog1 , flog2</span></span><br><span class="line">        <span class="comment">#rospy.loginfo(&#x27;id = %d&#x27;, id)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_pose</span>(<span class="params">self, p</span>):</span><br><span class="line">        <span class="keyword">if</span> self.move_base <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        x, y, th = p</span><br><span class="line"></span><br><span class="line">        pose = PoseWithCovarianceStamped()</span><br><span class="line">        pose.header.stamp = rospy.Time.now()</span><br><span class="line">        pose.header.frame_id = <span class="string">&#x27;map&#x27;</span></span><br><span class="line">        pose.pose.pose.position.x = x</span><br><span class="line">        pose.pose.pose.position.y = y</span><br><span class="line">        q = transformations.quaternion_from_euler(<span class="number">0.0</span>, <span class="number">0.0</span>, th/<span class="number">180.0</span>*pi)</span><br><span class="line">        pose.pose.pose.orientation.x = q[<span class="number">0</span>]</span><br><span class="line">        pose.pose.pose.orientation.y = q[<span class="number">1</span>]</span><br><span class="line">        pose.pose.pose.orientation.z = q[<span class="number">2</span>]</span><br><span class="line">        pose.pose.pose.orientation.w = q[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        self.set_pose_pub.publish(pose)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_done_cb</span>(<span class="params">self, status, result</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;navigation done! status:%d result:%s&quot;</span>%(status, result))</span><br><span class="line">        arrive_str = <span class="string">&quot;arrived to traget point&quot;</span></span><br><span class="line">        self.arrive_pub.publish(arrive_str)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_active_cb</span>(<span class="params">self</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;[Navi] navigation has be actived&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_feedback_cb</span>(<span class="params">self, feedback</span>):</span><br><span class="line">        msg = feedback</span><br><span class="line">        <span class="comment">#rospy.loginfo(&quot;[Navi] navigation feedback\r\n%s&quot;%feedback)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">goto</span>(<span class="params">self, p</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;[Navi] goto %s&quot;</span>%p)</span><br><span class="line">        <span class="comment">#arrive_str = &quot;going to next point&quot;</span></span><br><span class="line">        <span class="comment">#self.arrive_pub.publish(arrive_str)</span></span><br><span class="line">        goal = MoveBaseGoal()</span><br><span class="line"></span><br><span class="line">        goal.target_pose.header.frame_id = <span class="string">&#x27;map&#x27;</span></span><br><span class="line">        goal.target_pose.header.stamp = rospy.Time.now()</span><br><span class="line">        goal.target_pose.pose.position.x = p[<span class="number">0</span>]</span><br><span class="line">        goal.target_pose.pose.position.y = p[<span class="number">1</span>]</span><br><span class="line">        q = transformations.quaternion_from_euler(<span class="number">0.0</span>, <span class="number">0.0</span>, p[<span class="number">2</span>]/<span class="number">180.0</span>*pi)</span><br><span class="line">        goal.target_pose.pose.orientation.x = q[<span class="number">0</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.y = q[<span class="number">1</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.z = q[<span class="number">2</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.w = q[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        self.move_base.send_goal(goal, self._done_cb, self._active_cb, self._feedback_cb)</span><br><span class="line">        result = self.move_base.wait_for_result(rospy.Duration(<span class="number">60</span>))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            self.move_base.cancel_goal()</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Timed out achieving goal&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            state = self.move_base.get_state()</span><br><span class="line">            <span class="keyword">if</span> state == GoalStatus.SUCCEEDED:</span><br><span class="line">                rospy.loginfo(<span class="string">&quot;reach goal %s succeeded!&quot;</span>%p)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cancel</span>(<span class="params">self</span>):</span><br><span class="line">        self.move_base.cancel_all_goals()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    rospy.init_node(<span class="string">&#x27;navigation_demo&#x27;</span>,anonymous=<span class="literal">True</span>)</span><br><span class="line">    goalListX = rospy.get_param(<span class="string">&#x27;~goalListX&#x27;</span>, <span class="string">&#x27;2.0, 2.0&#x27;</span>)</span><br><span class="line">    goalListY = rospy.get_param(<span class="string">&#x27;~goalListY&#x27;</span>, <span class="string">&#x27;2.0, 4.0&#x27;</span>)</span><br><span class="line">    goalListYaw = rospy.get_param(<span class="string">&#x27;~goalListYaw&#x27;</span>, <span class="string">&#x27;0, 90.0&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    goals = [[<span class="built_in">float</span>(x), <span class="built_in">float</span>(y), <span class="built_in">float</span>(yaw)] <span class="keyword">for</span> (x, y, yaw) <span class="keyword">in</span> <span class="built_in">zip</span>(goalListX.split(<span class="string">&quot;,&quot;</span>),goalListY.split(<span class="string">&quot;,&quot;</span>),goalListYaw.split(<span class="string">&quot;,&quot;</span>))]</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;Please 1 to continue: &#x27;</span>)</span><br><span class="line">    <span class="built_in">input</span> = raw_input()</span><br><span class="line">    <span class="built_in">print</span> (goals)</span><br><span class="line">    r = rospy.Rate(<span class="number">1</span>)</span><br><span class="line">    r.sleep()</span><br><span class="line">    navi = navigation_demo()</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">input</span> == <span class="string">&#x27;1&#x27;</span>):</span><br><span class="line"><span class="comment">#       os.system(&#x27;mplayer %s&#x27; % music_path)</span></span><br><span class="line">        navi.goto(goals[<span class="number">0</span>])</span><br><span class="line">        rospy.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> (flog0+flog1+flog2 &lt;= <span class="number">255</span>):</span><br><span class="line">        move_flog=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span>(flog0 == <span class="number">0</span> <span class="keyword">or</span> flog1 ==<span class="number">1</span> <span class="keyword">or</span> flog2 == <span class="number">2</span>):</span><br><span class="line">            os.system(<span class="string">&#x27;mplayer %s&#x27;</span> % music_path)  </span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;case1&#x27;</span> </span><br><span class="line">        <span class="built_in">print</span> flog2,flog1,flog0</span><br><span class="line">        navi.goto(goals[<span class="number">1</span>])</span><br><span class="line">        rospy.sleep(<span class="number">2</span>) </span><br><span class="line">        navi.goto(goals[<span class="number">2</span>])</span><br><span class="line">        rospy.sleep(<span class="number">3</span>) </span><br><span class="line">        <span class="built_in">print</span> <span class="built_in">id</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">id</span> == flog0 <span class="keyword">or</span> <span class="built_in">id</span> == flog1 <span class="keyword">or</span> <span class="built_in">id</span> == flog2):</span><br><span class="line">            navi.goto(goals[<span class="number">3</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>)         </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">             <span class="built_in">print</span> <span class="string">&quot;no track&quot;</span>  </span><br><span class="line">        navi.goto(goals[<span class="number">4</span>])   </span><br><span class="line">        rospy.sleep(<span class="number">2</span>)  </span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">id</span> == flog0 <span class="keyword">or</span> <span class="built_in">id</span> == flog1 <span class="keyword">or</span> <span class="built_in">id</span> == flog2):</span><br><span class="line">            navi.goto(goals[<span class="number">5</span>])</span><br><span class="line">            rospy.sleep(<span class="number">2</span>) </span><br><span class="line">            <span class="comment">#os.system(&#x27;mplayer %s&#x27; % music_path)  </span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">             <span class="built_in">print</span> <span class="string">&quot;no track&quot;</span>      </span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line">          r.sleep()</span><br></pre></td></tr></table></figure></li><li>navigation_goals.py<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> actionlib</span><br><span class="line"><span class="keyword">from</span> actionlib_msgs.msg <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> move_base_msgs.msg <span class="keyword">import</span> MoveBaseAction, MoveBaseGoal</span><br><span class="line"><span class="keyword">from</span> nav_msgs.msg <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> geometry_msgs.msg <span class="keyword">import</span> PoseWithCovarianceStamped</span><br><span class="line"><span class="keyword">from</span> tf_conversions <span class="keyword">import</span> transformations</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">navigation_demo</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.set_pose_pub = rospy.Publisher(<span class="string">&#x27;/initialpose&#x27;</span>, PoseWithCovarianceStamped, queue_size=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">        self.move_base = actionlib.SimpleActionClient(<span class="string">&quot;move_base&quot;</span>, MoveBaseAction)</span><br><span class="line">        self.move_base.wait_for_server(rospy.Duration(<span class="number">60</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_pose</span>(<span class="params">self, p</span>):</span><br><span class="line">        <span class="keyword">if</span> self.move_base <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        x, y, th = p</span><br><span class="line"></span><br><span class="line">        pose = PoseWithCovarianceStamped()</span><br><span class="line">        pose.header.stamp = rospy.Time.now()</span><br><span class="line">        pose.header.frame_id = <span class="string">&#x27;map&#x27;</span></span><br><span class="line">        pose.pose.pose.position.x = x</span><br><span class="line">        pose.pose.pose.position.y = y</span><br><span class="line">        q = transformations.quaternion_from_euler(<span class="number">0.0</span>, <span class="number">0.0</span>, th/<span class="number">180.0</span>*pi)</span><br><span class="line">        pose.pose.pose.orientation.x = q[<span class="number">0</span>]</span><br><span class="line">        pose.pose.pose.orientation.y = q[<span class="number">1</span>]</span><br><span class="line">        pose.pose.pose.orientation.z = q[<span class="number">2</span>]</span><br><span class="line">        pose.pose.pose.orientation.w = q[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        self.set_pose_pub.publish(pose)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_done_cb</span>(<span class="params">self, status, result</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;navigation done! status:%d result:%s&quot;</span>%(status, result))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_active_cb</span>(<span class="params">self</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;[Navi] navigation has be actived&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_feedback_cb</span>(<span class="params">self, feedback</span>):</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;[Navi] navigation feedback\r\n%s&quot;</span>%feedback)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">goto</span>(<span class="params">self, p</span>):</span><br><span class="line">        goal = MoveBaseGoal()</span><br><span class="line"></span><br><span class="line">        goal.target_pose.header.frame_id = <span class="string">&#x27;map&#x27;</span></span><br><span class="line">        goal.target_pose.header.stamp = rospy.Time.now()</span><br><span class="line">        goal.target_pose.pose.position.x = p[<span class="number">0</span>]</span><br><span class="line">        goal.target_pose.pose.position.y = p[<span class="number">1</span>]</span><br><span class="line">        q = transformations.quaternion_from_euler(<span class="number">0.0</span>, <span class="number">0.0</span>, p[<span class="number">2</span>]/<span class="number">180.0</span>*pi)</span><br><span class="line">        goal.target_pose.pose.orientation.x = q[<span class="number">0</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.y = q[<span class="number">1</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.z = q[<span class="number">2</span>]</span><br><span class="line">        goal.target_pose.pose.orientation.w = q[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        self.move_base.send_goal(goal, self._done_cb, self._active_cb, self._feedback_cb)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cancel</span>(<span class="params">self</span>):</span><br><span class="line">        self.move_base.cancel_all_goals()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    rospy.init_node(<span class="string">&#x27;navigation_move&#x27;</span>,anonymous=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    r = rospy.Rate(<span class="number">0.2</span>)</span><br><span class="line">    rospy.loginfo(<span class="string">&quot;set pose...&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    navi = navigation_demo()</span><br><span class="line"><span class="comment">#    navi.set_pose([0.0,0.0,0.0])</span></span><br><span class="line"></span><br><span class="line">    rospy.loginfo(<span class="string">&quot;goto goal...&quot;</span>)</span><br><span class="line">    navi.goto([<span class="number">0</span>,<span class="number">0.0</span>, <span class="number">0</span>])</span><br></pre></td></tr></table></figure><h5 id="逻辑文件"><a href="#逻辑文件" class="headerlink" title="逻辑文件"></a>逻辑文件</h5></li><li>综合以上几个模块的功能实现，我们可以编写一个逻辑文件，来完成我们想要的任务。<br><strong>由于比赛尚未结束，目前仍在竞争阶段，逻辑文件就暂不公开啦~</strong><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4></li><li>运行我们有启动脚本，目前我们调用的脚本为依据./4-shoot.sh和./6-mission.sh修改的0.sh文件</li><li>0.sh<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##gmapping with abot###</span></span></span><br><span class="line">gnome-terminal --window -e &#x27;bash -c &quot;roscore; exec bash&quot;&#x27; \</span><br><span class="line">--tab -e &#x27;bash -c &quot;sleep 3; source ~/abot_ws/devel/setup.bash; roslaunch abot_bringup robot_with_imu.launch; exec bash&quot;&#x27; \</span><br><span class="line">--tab -e &#x27;bash -c &quot;sleep 3; source ~/abot_ws/devel/setup.bash; roslaunch abot_bringup shoot.launch; exec bash&quot;&#x27; \</span><br><span class="line">--tab -e &#x27;bash -c &quot;sleep 4; source ~/abot_ws/devel/setup.bash; roslaunch robot_slam navigation.launch; exec bash&quot;&#x27; \</span><br><span class="line">--tab -e &#x27;bash -c &quot;sleep 3; source ~/abot_vision/devel/setup.bash; roslaunch track_tag usb_cam_with_calibration.launch; exec bash&quot;&#x27; \</span><br><span class="line">--tab -e &#x27;bash -c &quot;sleep 3; source ~/abot_vision/devel/setup.bash; roslaunch track_tag ar_track_camera.launch; exec bash&quot;&#x27; \</span><br><span class="line">--tab -e &#x27;bash -c &quot;sleep 3; source ~/abot_ws/devel/setup.bash; roslaunch find_object_2d find_object_2d.launch; exec bash&quot;&#x27; \</span><br><span class="line">--tab -e &#x27;bash -c &quot;sleep 4; source ~/abot_ws/devel/setup.bash; roslaunch robot_slam multi_goal_shoot.launch; exec bash&quot;&#x27; \</span><br></pre></td></tr></table></figure></li><li>这个文件放在abot_ws目录下，所以需要<code>cd abot_ws</code>以后才能输入<code>./0.sh</code>启动脚本<h4 id="调试部分"><a href="#调试部分" class="headerlink" title="调试部分"></a>调试部分</h4><h5 id="导航点调节"><a href="#导航点调节" class="headerlink" title="导航点调节"></a>导航点调节</h5></li><li>结合逻辑文件，调节射击阈值和导航点，以下是导航点的调节方式</li><li>导航点文件在abot_ws\src\robot_slam\launch\multi_goal_shoot.launch，注意，这个launch文件是根据multi_goal.launch生成的，因此记得需要在启动脚本中引用。<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;multi_goal&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;robot_slam&quot;</span> <span class="attr">type</span>=<span class="string">&quot;你的逻辑文件&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;goalListX&quot;</span> <span class="attr">value</span>=<span class="string">&quot;  任务点1X,  任务点2X,以此类推&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;goalListY&quot;</span> <span class="attr">value</span>=<span class="string">&quot; 任务点1Y, 任务点2Y,以此类推&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;goalListYaw&quot;</span> <span class="attr">value</span>=<span class="string">&quot;任务点1旋转角度,  任务点2旋转角度, 以此类推&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="射击点调节"><a href="#射击点调节" class="headerlink" title="射击点调节"></a>射击点调节</h5></li><li>由于今年比赛规则修改且难度提升，不再像以前是三个固定靶子射击，今年填入A点颜色靶子（环形靶）</li><li>环形靶需要调节部分为偏差乘数（调节旋转速度）、flog1（调节射击精度）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">abs</span>(flog1) &gt; <span class="number">0.5</span>:</span><br><span class="line">    <span class="comment"># 创建一个Twist消息</span></span><br><span class="line">    msg = Twist()</span><br><span class="line">    <span class="comment"># 设置消息的角速度为偏差乘以0.01</span></span><br><span class="line">    msg.angular.z = -<span class="number">0.01</span> * flog0</span><br><span class="line">    <span class="comment"># 发布Twist消息</span></span><br><span class="line">    self.pub.publish(msg)</span><br><span class="line"><span class="comment"># 如果偏差的绝对值小于等于0.5</span></span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">abs</span>(flog1) &lt;= <span class="number">0.5</span>:</span><br><span class="line">    <span class="comment"># 发送射击指令</span></span><br></pre></td></tr></table></figure></li><li>B靶为环形旋转靶，需要调节部分为marker.id（射击哪个靶子）Max_y（靶子射击的最大高度）Min_y（靶子射击的最小高度）Yaw_th(B点射击精度)：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> marker.<span class="built_in">id</span> == <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">case</span> == <span class="number">1</span>:</span><br><span class="line">    ar_x_0 = marker.pose.pose.position.x</span><br><span class="line">ar_y_0 = marker.pose.pose.position.y</span><br><span class="line">    ar_x_0_abs = <span class="built_in">abs</span>(ar_x_0)</span><br><span class="line">    ar_y_0_abs = <span class="built_in">abs</span>(ar_y_0)</span><br><span class="line">    <span class="keyword">if</span> ar_x_0_abs &gt;= Yaw_th:</span><br><span class="line">        msg = Twist()</span><br><span class="line">        msg.angular.z = -<span class="number">1.5</span> * ar_x_0</span><br><span class="line">        self.pub.publish(msg)</span><br><span class="line">    <span class="keyword">elif</span> ar_y_0_abs &lt;= Max_y <span class="keyword">and</span> ar_y_0_abs &gt;= Min_y <span class="keyword">and</span> <span class="keyword">case</span> ==<span class="number">1</span>:</span><br><span class="line">        <span class="comment"># 发送射击指令</span></span><br></pre></td></tr></table></figure></li><li>C 靶为来回移动靶，需要调节部分为marker.id（射击哪个靶子），Yaw_th1(C点射击精度):<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> marker.<span class="built_in">id</span> == <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">case</span> == <span class="number">2</span>:</span><br><span class="line">    ar_x_0 = marker.pose.pose.position.x</span><br><span class="line">ar_y_0 = marker.pose.pose.position.y</span><br><span class="line">    ar_x_0_abs = <span class="built_in">abs</span>(ar_x_0)</span><br><span class="line">    <span class="keyword">if</span> ar_x_0_abs &gt;= Yaw_th1:</span><br><span class="line">        msg = Twist()</span><br><span class="line">        msg.angular.z = -<span class="number">1.5</span> * ar_x_0</span><br><span class="line">        self.pub.publish(msg)</span><br><span class="line">    <span class="keyword">elif</span> ar_x_0_abs &lt; Yaw_th1 <span class="keyword">and</span> <span class="keyword">case</span> == <span class="number">2</span>:</span><br><span class="line">        <span class="comment"># 发送射击指令</span></span><br></pre></td></tr></table></figure><h5 id="小车大小及膨胀系数调节"><a href="#小车大小及膨胀系数调节" class="headerlink" title="小车大小及膨胀系数调节"></a>小车大小及膨胀系数调节</h5></li><li>小车参数文件在”abot_ws\src\robot_slam\params\carto\costmap_common_params.yaml”<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">obstacle_range: 3.0</span><br><span class="line">raytrace_range: 3.5</span><br><span class="line"></span><br><span class="line">footprint: [[X1, Y1], [X2, Y2], [X3, Y3], [X4, Y4]]#小车参数（目前是正方形）</span><br><span class="line">#robot_radius: 0.17</span><br><span class="line"></span><br><span class="line">inflation_radius: 膨胀系数</span><br><span class="line">cost_scaling_factor: 3.0</span><br><span class="line"></span><br><span class="line">map_type: costmap</span><br><span class="line">observation_sources: scan</span><br><span class="line">scan: &#123;sensor_frame: laser_link, data_type: LaserScan, topic: scan_filtered, marking: true, clearing: true&#125;</span><br></pre></td></tr></table></figure><h5 id="TF调节"><a href="#TF调节" class="headerlink" title="TF调节"></a>TF调节</h5></li><li>TF变换文件位置在:”abot_ws\src\abot_base\abot_bringup\launch\bringup_with_imu.launch”<br><strong>往届终点为最困难的部分，很多人因避障进不去终点，因此，这部分等比赛结束才公开</strong><h5 id="终点调节"><a href="#终点调节" class="headerlink" title="终点调节"></a>终点调节</h5><strong>往届终点为最困难的部分，很多人因避障进不去终点，因此，这部分等比赛结束才公开</strong><h4 id="建图"><a href="#建图" class="headerlink" title="建图"></a>建图</h4></li><li>运行./1-gmapping.sh<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文件丢失~</span><br></pre></td></tr></table></figure></li><li>走完全图以后输入代码<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_slam save_map.launch</span><br></pre></td></tr></table></figure><h2 id="比赛进度"><a href="#比赛进度" class="headerlink" title="比赛进度"></a>比赛进度</h2></li><li>校赛评审√</li><li>校赛获奖：校级一等奖</li><li>省赛报名</li><li>省赛√</li><li>省赛获奖：省级三等奖<br>原因：靶子坏了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> 比赛 </category>
          
          <category> GXNU </category>
          
          <category> ROS </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> CRAIC </tag>
            
            <tag> ROS </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>［林咚x二创］这么可爱真是抱歉...（单音切片）</title>
      <link href="/2024/05/26/lindong-cute-comin/"/>
      <url>/2024/05/26/lindong-cute-comin/</url>
      
        <content type="html"><![CDATA[<p><strong>由于当时做的比较匆忙，后面节奏有点没对上，请见谅~</strong><br><!-- 直接改av号aid=... --></p><p><div align=center class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=223128512&&page=1&as_wide=1&high_quality=1&danmaku=0     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div></p><ul><li>素材：林咚Quiddie@林咚Quiddie</li><li>伴奏：可爱くてごめん</li></ul>]]></content>
      
      
      <categories>
          
          <category> music </category>
          
          <category> 混音 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> music </tag>
            
            <tag> 混音 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft极限模式复活方法</title>
      <link href="/2024/05/26/mc-life/"/>
      <url>/2024/05/26/mc-life/</url>
      
        <content type="html"><![CDATA[<p>众多周知，我的世界极限模式只有一条命。如果不小心死翘翘了就会直接弹出［Delete］的按钮。在一些版本还是非常良心地给你［旁观世界］选项，当你点击后就会以旁观者模式进入世界。<br>（JAVA1.16.5版本为例）<br>那么，对自己玩了好久的地图存档怀有感情了，实在不想删除地图或者是自己不小心死的想继续游玩该如何复活呢？</p><h1 id="方法1（有旁观世界）"><a href="#方法1（有旁观世界）" class="headerlink" title="方法1（有旁观世界）"></a>方法1（有旁观世界）</h1><ul><li>要复活其实很简单。点击旁观世界以后按Esc键<br>看到这个<code>［对局域网开放］</code>了吗？<br>点进去<code>［对局域网开放］</code>界面<br>允许作弊改为<code>［开启］</code><br>确定后你就以开启作弊的方式返回了世界<br>这时输入指令<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/gamemode survival</span><br></pre></td></tr></table></figure>调成生存模式即可！输完指令以后到此，你就成功复活了！没有浏览世界选项怎么办？无旁观世界那就祝你好运啦～<h1 id="方法2-（工具更改）"><a href="#方法2-（工具更改）" class="headerlink" title="方法2 （工具更改）"></a>方法2 （工具更改）</h1></li><li>工具：NBTexplorer<br>如果你的地图只有删除世界，没有旁观地图，首先不要点删除世界的选项,直接用任务管理器结束掉它<br>任务管理器打开方式：<br><code>Ctrl+Shift+Esc</code><br>选择<code>minecraft.exe</code>右键选结束进程<br>然后打开<code>NBTexplorer</code>工具，搞到<code>.minecraft/saves/你的存档名</code>找到<code>level.dat</code><br>在<code>hardcore</code>选项中改为<code>0</code>即可变为生存模式的界面，再返回minecraft复活后再改回去就变为极限模式了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft指令大全</title>
      <link href="/2024/05/26/mc-command/"/>
      <url>/2024/05/26/mc-command/</url>
      
        <content type="html"><![CDATA[<p>大家好，大家在百度时出来的是不是基本都是中国版或基岩版的指令，在JAVA版有些用不了？所以今天给大家分享我的世界JAVA版指令大全！๑•́₃•̀๑<br>基本游戏指令.</p><h1 id="JAVA版游戏指令"><a href="#JAVA版游戏指令" class="headerlink" title="JAVA版游戏指令"></a>JAVA版游戏指令</h1><h2 id="基本游戏指令"><a href="#基本游戏指令" class="headerlink" title="基本游戏指令"></a>基本游戏指令</h2><ul><li>人物指代关系：<br><code>@a</code> 所有玩家<br><code>@e</code> 所有实体<br><code>@p</code> 距离最近的玩家<br><code>@r</code>随机玩家 @s当前实体<br><code>游戏名</code>（指定自己或他人）<br>（所有指令以字母顺序排列）</li><li>给予玩家进度<code>/advancement grant 人物 属性</code></li><li>移除玩家进度<code>/advancement revoke 人物 属性</code><br>属性：<code>everything</code> 全部 <code>from</code> 给予一个进度及下游进度 <code>only</code> 指定进度 <code>until</code> 给予一个进度及上游进度 <code>through</code> 给予一个进度及上、下游进度</li><li>设置属性<code>/attribute 人物 属性 值</code>,值∈Z<br>属性：<code>get</code> 得到实体的某一属性 <code>set</code> 修改某一属性的值<code>base</code> 分为<code>get</code>和<code>set</code> 这是用来修改基础值的<br>其中：<br><code>generic.max_health</code>最大血量<br><code>generic.follow_range</code>跟踪距离：你离这个实体多远这个实体注意到你<br><code>generic.knockback_resistance</code>反击退，值为1.0完全反击退<br><code>generic.movement_speed</code>移动速度<br><code>generic.attack_damage</code>攻击伤害<br><code>generic.attack_knockback</code>击退力度，只有疣猪兽、僵尸疣猪兽、劫掠兽有<br><code>generic.armor</code>盔甲防御值<br><code>generic.armor_toughness</code>盔甲韧性<br><code>generic.attackReach</code>测试版本的攻击距离<br><code>generic.reachDistance</code>测试版本的触及半径<br><code>generic.attack_speed</code>攻击速度<br><code>generic.luck</code> 幸运值<br><code>generic.flying_speed</code>鹦鹉飞行速度<br><code>horse.jump_strength</code>马的弹跳力<br><code>zombie.spawn_reinforcements</code>僵尸攻击时生成另一种僵尸的可能性</li><li>设置boss栏（如改血改名等）<code>/bossbar ［add/set/get/list/remove］ 值</code><br>值：<code>bossID</code>（set设置的ID）<br><code>｛&#39;&#39;text&#39;&#39;：&#39;&#39;文字&#39;&#39;｝</code><br><code>set</code>更改boss栏属性<br><code>remove</code> 删除boss栏<br><code>add</code>增加boss栏<br>（其他过于详细，暂不演示）</li><li>清除控制台(背包)<code>/clear 人物 物品</code></li><li>查看配置文件项<code>/config</code></li><li>复制东西<code>/clone X Y Z 属性</code></li><li>更改数据<code>/data［get/merge/modify/remove］</code><br><code>get</code>得到<code>merge</code>合并<code>modify</code>修改<code>remove</code>移除</li><li>数据包使用/datapack</li><li>修复bug<code>/debug</code></li><li>数据包使用<code>/datapack</code></li><li>删除模式<code>/defaultgamemode 模式</code></li><li>设置游戏难度<br><code>/difficulty ［easy/hard/normal/peaceful］</code><br><code>easy</code>简单<code>hard</code>困难<code>normal</code>普通<code>peaceful</code>和平</li><li>附魔指令（这个以后将仔细回答，记得关注动态）<code>/enchant</code></li><li>药水效果<code>/effect ［give/clear］人物 效果 时间 等级</code></li><li>已一个或多个实体为中心执行指令（以后讲粒子效果会具体提）<code>/execute</code></li><li>经验设置<code>/experience［add/query/set］人物 数值</code></li><li>填充方块<code>/fill X Y 物品 填充方式</code></li><li>加载区块<code>/forceload</code></li><li>模组<code>/forge</code></li><li>函数命令<code>/function</code></li><li>更改模式<code>/gamemode ［adventure/creative/spectator/survival］人物</code><br>属性：<code>adventure</code>冒险<br><code>creative</code>创造<br><code>spectator</code>旁观者<br><code>survival</code>生存</li><li>更改游戏规则为是/否（如禁止火蔓延）<code>/gamerule 规则 ［TRUE/FALSE］</code></li><li>给予玩家物品（以后讲超级无敌附魔时会重新提到，记得关注我动态）<br><code>/give 人物 物品 数量［NBT］</code></li><li>帮助<code>/help</code></li><li>踢出游戏<code>/kick 玩家</code></li><li>杀死 人物<code>/kill 人物</code></li><li>查看在线玩家<code>/list</code></li><li>查看地图特殊地点位置，如地牢<code>/locate 地点</code></li><li>生物群系距离你的位置<code>/locatebiome 地点</code></li><li>将战利品放入物品栏或世界<code>/loot</code></li><li>私聊<code>/msg 玩家 &#39;&#39;内容&#39;&#39;</code></li><li>显示一条关于自己的信息<code>/me 动作</code></li><li>显示粒子效果<code>/particle 粒子名 生成坐标</code></li><li>播放指定声音<code>/playsound 声音 属性 人物</code></li><li>对局域网开放单人游戏世界<code>/publish 端口</code></li><li>给予/剥夺玩家配方<code>/recipe ［give/take］ 人物 配方</code></li><li>重新加载数据包<code>/reload</code></li><li>替换物品<code>/replaceitem ［block/entity］ 人物 槽位 替换对象</code></li><li>发送文字到聊天栏<code>/say 文字</code></li><li>计划函数<br><code>/schedule ［function/clear］ 函数 时间［append/replace］</code><br>其中<code>clear</code>函数就终止命令了<br><code>append</code>添加等待运行的指定标签的函数<br><code>replace</code>取代等待运行的指定标签函数，被取代函数将不会运行</li><li>计分板<br><code>/scoreboard [objectives/players] 参数</code><br><code>objectives</code>是一个项，<code>players</code>是玩家<br><code>objectives</code>后面有<br><code>add</code> 后面给计分板起名，再后面设置计分板的准则，再设置显示的名字<br><code>list</code>列出所有已创建的计分板项<br><code>modify</code>修改计分板的显示名称或显示样式<br><code>remove</code>即移除计分板<br><code>setdisplay</code>设置计分板显示位置<br><code>players</code>后面有<br><code>add</code>增加玩家的分数<br><code>enable</code>设置谁可以用<code>/trigger</code>修改计分板的分数<br><code>get</code>显示分数<br><code>list</code>列出所有的分数<br><code>operation</code>计算分数<br><code>remove</code>减少分数<br><code>reset</code>清空分数<br><code>set</code>设置分数</li><li>查看世界种子<code>/seed</code></li><li>将一个方块替换为另一方块<code>/setblock x y z 方块名 方块处理方式</code></li><li>设置世界出生地到该坐标<code>/setworldspawn x y z</code></li><li>设置改实体（人物）出生地到该坐标<code>/spawnpoint 人物 x y z</code></li><li>使旁观者玩家进入另一个实体视角<code>/spectate 目标 人物</code></li><li>把实体随机传送到区域地表某位置<br><code>/spreadplayers x z 分散间距 最大范围 ［under 最大高度］ 考虑队伍 传送目标</code></li><li>停止播放某声音<code>/stopsound 人物 参数 声音</code></li><li>添加/移除/列出玩家拥有的标签<br><code>/tag 人物 ［add/remove/list］</code></li><li>增加/空/加入/离开/列出队伍/修改队伍/移除队伍<br><code>/team ［add/empty/join/leave/list/modify/remove］</code></li><li>发送队伍消息<code>/tm 消息</code>或者<code>/teammsg 消息</code></li><li>传送指令<br>把人物传到人物1处<code>/tp 人物 人物1</code><br>传送人物到坐标<code>/tp 人物 x y z</code></li><li>在物品栏上方放标题/清除标题/重设/副标题/标题显示时间/标题正中间<br><code>/title 人物 ［actionbar/clear/reset/subtitle/times/title］ 参数</code></li><li>增加/减少/设置时间<code>/time［add/query/set］时间</code></li><li>显示文本<code>/tellraw 人物 文本</code></li><li>私聊<code>/tell 人物 信息</code></li><li>传送人物到地点并修改旋转角度<code>/teleport 参数</code></li><li>修改一个准则为触发器的记分板<code>/trigger 目标 ［add/set］ 值</code></li><li>私聊<br><code>/w 信息</code></li><li>设置天气<br><code>/weather ［clear/rain/thunder］</code>晴朗/下雨/打雷</li><li>世界边界<br><code>/worldborder ［add/center/damage/get/set/warning］</code>添加/设置中心/伤害/获取/设置/警告</li><li>增加经验 <code>/xp 数值</code><h2 id="实用服务器指令"><a href="#实用服务器指令" class="headerlink" title="实用服务器指令"></a>实用服务器指令</h2></li><li>注册账号<code>/register 密码 密码</code></li><li>登录<code>/login 密码</code></li><li>设置玩家/删除管理员<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/op 玩家</span><br><span class="line">/deop 玩家</span><br></pre></td></tr></table></figure></li><li>封号与解封<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/ban 玩家</span><br><span class="line">/unban 玩家</span><br></pre></td></tr></table></figure></li><li>灭火<code>/ext</code></li><li><code>/email ［add/show/change/recover/code/setpassword/help］</code>添加/展示/更改/通过邮箱改密码<code>/submit code to recover password/</code>设置新密码/帮助</li><li>撤销<code>/undo</code></li><li>跳跃到准星位置<code>/jumpto</code></li><li>踢出玩家<code>/kick 玩家</code></li><li>封禁IP地址下所有号<code>/ban-ip IP</code></li><li>禁止物品<code>/banitem 参数</code></li><li><code>//world edit</code>指令太多不说先了</li></ul>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
            <tag> 指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网易云缓存文件转mp3</title>
      <link href="/2024/05/26/uc-to-mp3/"/>
      <url>/2024/05/26/uc-to-mp3/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1. 安装依赖"></a>1. 安装依赖</h2><ul><li>安装任意版本python</li><li>新建文件夹，自定义名字即可</li><li>进入文件夹，新建py文件，输入以下代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用方法：将此脚本放进一个文件夹，在此文件夹地址栏输入cmd运行此脚本加上需要转换的uc文件路径</span></span><br><span class="line"></span><br><span class="line">fname =sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(fname)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(fname, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">c = f.read()</span><br><span class="line"></span><br><span class="line">arr = <span class="built_in">bytearray</span>(c)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr)):</span><br><span class="line">arr[i] ^= <span class="number">163</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(fname+<span class="string">&quot;.mp3&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(<span class="built_in">bytes</span>(arr))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;ok&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>保存<h2 id="2-运行"><a href="#2-运行" class="headerlink" title="2. 运行"></a>2. 运行</h2></li><li>打开文件夹，在目录栏输入cmd运行，输入以下代码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你的py文件名.py+空格+你的uc文件路径</span><br><span class="line">举例：网易云缓存UC转mp3.py &quot;C:\Users\用户名\AppData\Local\Netease\CloudMusic\Cache\Cache\2129927846-320-d769e17c9df56f23b4826d1f79f682ec.uc&quot;</span><br></pre></td></tr></table></figure></li><li>或者更简便的方法就是直接将需要转换的文件拖入py文件即可。<h2 id="3-原理"><a href="#3-原理" class="headerlink" title="3. 原理"></a>3. 原理</h2></li><li>网易云缓存文件是.uc格式，而.uc文件是经过加密的，所以需要解密才能转换。</li><li>有大佬通过逆向发现解密方法就是将文件内容中的每个字节异或163（163代表网易），然后保存为.mp3文件。</li><li>此脚本就是通过python实现这个解密过程。<h2 id="4-注意"><a href="#4-注意" class="headerlink" title="4. 注意"></a>4. 注意</h2></li><li>此脚本只适用于网易云缓存文件，其他文件请自行修改脚本。</li><li>此脚本只适用于python3.x版本，其他版本请自行修改脚本。</li><li>此脚本只适用于Windows系统，其他系统请自行修改脚本。</li><li>此脚本只适用于64位系统，其他系统请自行修改脚本。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 工具 </tag>
            
            <tag> 黑科技 </tag>
            
            <tag> 网易云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猜数字的小游戏+关机惩罚</title>
      <link href="/2024/05/26/guess-math/"/>
      <url>/2024/05/26/guess-math/</url>
      
        <content type="html"><![CDATA[<h1 id="猜数字的小游戏-关机惩罚"><a href="#猜数字的小游戏-关机惩罚" class="headerlink" title="猜数字的小游戏+关机惩罚"></a>猜数字的小游戏+关机惩罚</h1><h2 id="游戏规则"><a href="#游戏规则" class="headerlink" title="游戏规则"></a>游戏规则</h2><ol><li>游戏开始后，程序会随机生成一个1到100之间的整数</li><li>玩家需要输入一个1到100之间的整数</li><li>程序会根据玩家输入的数字给出提示</li><li>玩家需要根据提示进行猜测，直到猜中为止</li><li>猜中后，程序会显示恭喜你，并询问是否继续游戏</li><li>如果玩家选择继续游戏，则程序会重新生成一个1到100之间的整数</li><li>如果玩家选择退出游戏，则程序会显示再见，并退出游戏</li></ol><h2 id="游戏代码"><a href="#游戏代码" class="headerlink" title="游戏代码"></a>游戏代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a,b, sum;</span><br><span class="line">    sum=<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">    srand( (<span class="type">unsigned</span>) time (<span class="literal">NULL</span>)) ; </span><br><span class="line">    a = rand()%<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    sum--;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">&quot;%d&quot;</span>, &amp;b);</span><br><span class="line">    <span class="keyword">if</span>(b&gt;a)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;大了 你还有%d次机会啦 珍惜吧小子\n&quot;</span> , sum) ;</span><br><span class="line">    <span class="keyword">if</span>(b&lt;a)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;小了 你还有%d次机会啦 珍惜吧小子\n&quot;</span> ,sum) ;</span><br><span class="line">    <span class="keyword">if</span> (b==a)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;我擦运气这么好 \n&quot;</span>); </span><br><span class="line">    <span class="keyword">break</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;哈哈 再见啦 滚去开机吧&quot;</span>) ; </span><br><span class="line">    system (<span class="string">&quot;shutdown -s -t 10&quot;</span>) ;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">break</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言基础</title>
      <link href="/2024/05/26/C-base/"/>
      <url>/2024/05/26/C-base/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言基础"><a href="#C语言基础" class="headerlink" title="C语言基础"></a>C语言基础</h1><h2 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1. 数据类型"></a>1. 数据类型</h2><h3 id="1-1-整型"><a href="#1-1-整型" class="headerlink" title="1.1 整型"></a>1.1 整型</h3><ul><li><p>整型分为有符号整型和无符号整型</p></li><li><p>整型分为短整型、整型、长整型</p></li><li><p>整型分为char、short、int、long、long long</p></li></ul><h3 id="1-2-浮点型"><a href="#1-2-浮点型" class="headerlink" title="1.2 浮点型"></a>1.2 浮点型</h3><ul><li><p>浮点型分为单精度浮点型和双精度浮点型</p></li><li><p>浮点型分为float、double</p></li></ul><h3 id="1-3-字符型"><a href="#1-3-字符型" class="headerlink" title="1.3 字符型"></a>1.3 字符型</h3><ul><li>字符型分为char</li></ul><h3 id="1-4-布尔型"><a href="#1-4-布尔型" class="headerlink" title="1.4 布尔型"></a>1.4 布尔型</h3><ul><li>布尔型分为bool</li></ul><h3 id="1-5-空类型"><a href="#1-5-空类型" class="headerlink" title="1.5 空类型"></a>1.5 空类型</h3><ul><li>空类型分为void</li></ul><h3 id="1-6-枚举类型"><a href="#1-6-枚举类型" class="headerlink" title="1.6 枚举类型"></a>1.6 枚举类型</h3><ul><li>枚举类型分为enum</li></ul><h2 id="2-变量"><a href="#2-变量" class="headerlink" title="2. 变量"></a>2. 变量</h2><h3 id="2-1-变量定义"><a href="#2-1-变量定义" class="headerlink" title="2.1 变量定义"></a>2.1 变量定义</h3><ul><li><p>变量定义的格式为：<code>数据类型 变量名;</code></p></li><li><p>变量定义的格式为：<code>数据类型 变量名 = 初始值;</code></p></li></ul><h3 id="2-2-变量初始化"><a href="#2-2-变量初始化" class="headerlink" title="2.2 变量初始化"></a>2.2 变量初始化</h3><ul><li><p>变量初始化的格式为：<code>数据类型 变量名 = 初始值;</code></p></li><li><p>变量初始化的格式为：<code>数据类型 变量名 = 初始值;</code></p></li></ul><h3 id="2-3-变量赋值"><a href="#2-3-变量赋值" class="headerlink" title="2.3 变量赋值"></a>2.3 变量赋值</h3><ul><li>变量赋值的格式为：<code>变量名 = 值;</code></li></ul><h3 id="2-4-变量使用"><a href="#2-4-变量使用" class="headerlink" title="2.4 变量使用"></a>2.4 变量使用</h3><ul><li>变量使用的格式为：<code>变量名;</code></li></ul><h2 id="3-一些基础算法"><a href="#3-一些基础算法" class="headerlink" title="3. 一些基础算法"></a>3. 一些基础算法</h2><h3 id="3-1-冒泡排序"><a href="#3-1-冒泡排序" class="headerlink" title="3.1 冒泡排序"></a>3.1 冒泡排序</h3><ul><li><p>冒泡排序的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n-i<span class="number">-1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="type">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-2-选择排序"><a href="#3-2-选择排序" class="headerlink" title="3.2 选择排序"></a>3.2 选择排序</h3><ul><li><p>选择排序的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">selectionSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> min_idx = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i+<span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &lt; arr[min_idx]) &#123;</span><br><span class="line">                min_idx = j;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        <span class="type">int</span> temp = arr[min_idx];</span><br><span class="line">        arr[min_idx] = arr[i];</span><br><span class="line">        arr[i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-3-汉诺塔"><a href="#3-3-汉诺塔" class="headerlink" title="3.3 汉诺塔"></a>3.3 汉诺塔</h3><ul><li>汉诺塔的解法：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">int</span> <span class="title function_">hanoi</span><span class="params">(<span class="type">int</span> n, <span class="type">char</span> a, <span class="type">char</span> b, <span class="type">char</span> c)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d:%c-&gt;%c\n&quot;</span>,n,a,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        hanoi(n<span class="number">-1</span>,a,c,b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d:%c-&gt;%c\n&quot;</span>,n,a,c);</span><br><span class="line">        hanoi(n<span class="number">-1</span>,b,a,c);</span><br><span class="line">    &#125;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    hanoi(n,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;次数：%d&quot;</span>,i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-斐波那契数列"><a href="#3-4-斐波那契数列" class="headerlink" title="3.4 斐波那契数列"></a>3.4 斐波那契数列</h3><ul><li>斐波那契数列的解法：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fibonacci</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>||n==<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fibonacci(n<span class="number">-1</span>)+fibonacci(n<span class="number">-2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,fibonacci(n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-5-打擂台"><a href="#3-5-打擂台" class="headerlink" title="3.5 打擂台"></a>3.5 打擂台</h3><ul><li>打擂台的解法：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输入3个不同的整数，输出其中最小的一个。</span></span><br><span class="line"><span class="comment">输入示例：</span></span><br><span class="line"><span class="comment">3 4 5</span></span><br><span class="line"><span class="comment">输出示例：</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 3</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">3</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> numMin = min(arr[<span class="number">0</span>], min(arr[<span class="number">1</span>], arr[<span class="number">2</span>]));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, numMin);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> x &lt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int main()&#123;</span></span><br><span class="line"><span class="comment">int a,b,c,min;</span></span><br><span class="line"><span class="comment">scanf(&quot;%d %d %d&quot;,&amp;a,&amp;b,&amp;c);</span></span><br><span class="line"><span class="comment">mim=a</span></span><br><span class="line"><span class="comment">if(min&gt;b)&#123;</span></span><br><span class="line"><span class="comment">    min=b;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">if(min&gt;c)&#123;</span></span><br><span class="line"><span class="comment">    min=c</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">printf(&quot;%d&quot;,min);</span></span><br><span class="line"><span class="comment">return 0</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="3-n-其他算法"><a href="#3-n-其他算法" class="headerlink" title="3.n 其他算法"></a>3.n 其他算法</h3><ul><li>详情请见<code>https://gitee.com/HG-dev17/GXNU-C-works</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>义务维修常用教程</title>
      <link href="/2024/05/25/computer-repair/"/>
      <url>/2024/05/25/computer-repair/</url>
      
        <content type="html"><![CDATA[<h1 id="义务维修常用教程"><a href="#义务维修常用教程" class="headerlink" title="义务维修常用教程"></a>义务维修常用教程</h1><h2 id="1-C盘清理"><a href="#1-C盘清理" class="headerlink" title="1. C盘清理"></a>1. C盘清理</h2><h3 id="1-1-删除缓存"><a href="#1-1-删除缓存" class="headerlink" title="1.1 删除缓存"></a>1.1 删除缓存</h3><p>首先，Win+R打开运行，输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%temp%</span><br></pre></td></tr></table></figure><br>这个文件夹是Windows的缓存文件，可以全部删除（shift+delete）</p><h3 id="1-2-磁盘清理工具"><a href="#1-2-磁盘清理工具" class="headerlink" title="1.2 磁盘清理工具"></a>1.2 磁盘清理工具</h3><p>右键C盘，点击属性<br>Win10会有清理磁盘，点击即可打开磁盘清理，里面的内容可以全部勾选<br>Win11则是详细信息，进入详细信息以后点击临时文件，可以在临时文件内勾选删除<br><strong>注意，磁盘清理不是压缩磁盘，压缩以后这个盘就废了，电脑也会无法启动</strong><br><strong>注意，临时文件包括下载文件，如果下载文件夹内有需要的文件应自行备份</strong><br><strong>下载文件夹默认在C:\Users\你的电脑用户名\Downloads</strong><br>或者Win+R输入下面代码即可打开磁盘清理工具<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cleanmgr</span><br></pre></td></tr></table></figure></p><h3 id="1-3-移动桌面文件（不推荐，不要轻易使用）"><a href="#1-3-移动桌面文件（不推荐，不要轻易使用）" class="headerlink" title="1.3 移动桌面文件（不推荐，不要轻易使用）"></a>1.3 移动桌面文件（不推荐，不要轻易使用）</h3><p>D盘新建文件夹（Desktop），把桌面文件放到这个文件夹里<br>输入Win+R输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regedit</span><br></pre></td></tr></table></figure><br>打开注册表，找到HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders，把Desktop的值改为桌面文件夹的路径(D:\Desktop)<br>最后重启</p><h3 id="1-4-休眠文件清理-（若C盘真的啥都清不了，可以使用）"><a href="#1-4-休眠文件清理-（若C盘真的啥都清不了，可以使用）" class="headerlink" title="1.4 休眠文件清理 （若C盘真的啥都清不了，可以使用）"></a>1.4 休眠文件清理 （若C盘真的啥都清不了，可以使用）</h3><p>打开开始菜单，找到命令提示符（cmd），右键以管理员身份运行<br>输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powercfg -h off</span><br></pre></td></tr></table></figure><br>然后重启即可<br>同理如果要恢复休眠文件，只需要输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powercfg -h on</span><br></pre></td></tr></table></figure></p><h3 id="1-5-清理软件缓存，尤其是QQ、微信"><a href="#1-5-清理软件缓存，尤其是QQ、微信" class="headerlink" title="1.5 清理软件缓存，尤其是QQ、微信"></a>1.5 清理软件缓存，尤其是QQ、微信</h3><p>可以在QQ、微信的设置中找到文件管理，把默认的缓存文件夹换到C盘以外的其他盘即可</p><h2 id="2-流氓软件清理"><a href="#2-流氓软件清理" class="headerlink" title="2 流氓软件清理"></a>2 流氓软件清理</h2><p>这里我们给每位成员发放了Geek卸载工具，直接打开工具删掉不需要的软件即可，面对不好删除的文件可以右键强力删除</p><h2 id="3-C盘扩容（将其他的盘的空间分给C盘）"><a href="#3-C盘扩容（将其他的盘的空间分给C盘）" class="headerlink" title="3 C盘扩容（将其他的盘的空间分给C盘）"></a>3 C盘扩容（将其他的盘的空间分给C盘）</h2><p>1.官网下载DiskGenius，打开软件后选择C盘，右键选择扩容分区（Ctrl_F12）<br>2.选择将哪个盘的容量分给C盘，比如选择D盘<br>3.选择调整容量，取多少的空间给C盘使用<br>4.点击开始，弹出确认信息，点击确认<br>5.后续会自动创建PE环境，后续步骤自动操作即可，不要在自动操作时乱动。等待重启完成即可。</p><h2 id="4-清灰"><a href="#4-清灰" class="headerlink" title="4 清灰"></a>4 清灰</h2><p>拆除螺丝，注意螺丝是否不同，如果不同需要分类摆放<br>拆除后盖，拿拨片撬开口子划一圈，注意有些电脑有附加的东西，拆后盖时小心拆下（拆盖真费力awa）<br>拿鼓吹和刷子边吹变清刷即可<br><strong>注意，佩戴静电手环或者清水洗手，否则尽量不要触摸主板，防止电流击穿主板（坏了要赔钱哦）</strong></p><h2 id="5-网络不显示，只剩蓝牙了"><a href="#5-网络不显示，只剩蓝牙了" class="headerlink" title="5 网络不显示，只剩蓝牙了"></a>5 网络不显示，只剩蓝牙了</h2><p>右键任务栏,打开任务栏设置，搜索网络和Internet，选择高级网络设置，点击网络重置，点击立即重置后重启电脑即可</p><h2 id="6-换-新增硬盘"><a href="#6-换-新增硬盘" class="headerlink" title="6 换/新增硬盘"></a>6 换/新增硬盘</h2><p>同清灰步骤拆开后盖，拔掉电源线，再拆开硬盘保护盖，将硬盘按照对应空位插好，如果有散热贴就贴上，改好保护盖，拧好保护盖螺丝<br><strong>注意，佩戴静电手环或者清水洗手，否则尽量不要触摸主板，防止电流击穿主板（坏了要赔钱哦）</strong><br>盖上后盖，但是不用急着装螺丝<br>启动电脑，右击计算机，管理（Win11需要点选择更多选项）<br>选择磁盘管理，右击新的磁盘点初始化磁盘，右击新的磁盘选择新建简单卷，选择格式化，选择NTFS，选择快速格式化，选择盘符，选择卷名，点击确定（一般都是直接下一步即可）<br>拖一个文件进入磁盘检查是否能够正常运行<br>如果能运行，关机装好螺丝即可</p><h2 id="7-触摸板无法使用"><a href="#7-触摸板无法使用" class="headerlink" title="7 触摸板无法使用"></a>7 触摸板无法使用</h2><p>1.检查F1~F12的按钮有没有能够操控触摸板的，检查是否开启鼠标控制触摸板，检查是否开启触摸板<br>2.点击【开始】—【设置】—【蓝牙和其他设备】—【触摸板】，如果为关，把触摸板开关打开<br>3.如果无法解决，下载触控板驱动，可以去官网下载</p><h2 id="8-摄像头无法使用"><a href="#8-摄像头无法使用" class="headerlink" title="8 摄像头无法使用"></a>8 摄像头无法使用</h2><p>检查是否有硬件保护摄像头开关，如物理遮挡，物理摄像头电源 </p><h2 id="9-其他问题"><a href="#9-其他问题" class="headerlink" title="9 其他问题"></a>9 其他问题</h2><p>1.记得提醒同学以后安装软件不要放到C盘哦</p><p>暂时没有什么其他问题，如果遇到其他问题，由于评论区还没做好（懒得做），所以只能可以联系作者进行补充。<br>喜欢我的文章可以点击下面赞赏码赞助作者哦（当然目前懒得放二维码，所以没有赞赏）</p>]]></content>
      
      
      <categories>
          
          <category> GXNU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 校计协 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 基础教程</title>
      <link href="/2024/05/24/markdown-help/"/>
      <url>/2024/05/24/markdown-help/</url>
      
        <content type="html"><![CDATA[<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><h2 id="2-段落"><a href="#2-段落" class="headerlink" title="2. 段落"></a>2. 段落</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个段落。</span><br><span class="line"></span><br><span class="line">这是另一个段落。</span><br></pre></td></tr></table></figure><h2 id="3-换行"><a href="#3-换行" class="headerlink" title="3. 换行"></a>3. 换行</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第一行内容</span><br><span class="line">第二行内容</span><br></pre></td></tr></table></figure><h2 id="4-字体"><a href="#4-字体" class="headerlink" title="4. 字体"></a>4. 字体</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体文本*</span></span><br><span class="line"><span class="strong">**粗体文本**</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜体文本*</span>**</span></span><br></pre></td></tr></table></figure><h2 id="5-删除线"><a href="#5-删除线" class="headerlink" title="5. 删除线"></a>5. 删除线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><h2 id="6-引用"><a href="#6-引用" class="headerlink" title="6. 引用"></a>6. 引用</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 这是一个引用</span></span><br><span class="line">&gt;&gt; 这是一个嵌套引用</span><br></pre></td></tr></table></figure><h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7. 列表"></a>7. 列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 无序列表项 1</span><br><span class="line"><span class="bullet">*</span> 无序列表项 2</span><br><span class="line"><span class="bullet">*</span> 无序列表项 3</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表项 1</span><br><span class="line"><span class="bullet">2.</span> 有序列表项 2</span><br><span class="line"><span class="bullet">3.</span> 有序列表项 3</span><br></pre></td></tr></table></figure><h2 id="8-代码"><a href="#8-代码" class="headerlink" title="8. 代码"></a>8. 代码</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`printf()`</span> 函数</span><br><span class="line"></span><br><span class="line"><span class="code">```c</span></span><br><span class="line"><span class="code">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">int main() &#123;</span></span><br><span class="line"><span class="code">    printf(&quot;Hello, World!\n&quot;);</span></span><br><span class="line"><span class="code">    return 0;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="9-链接"><a href="#9-链接" class="headerlink" title="9. 链接"></a>9. 链接</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Runoob</span>](<span class="link">https://www.runoob.com</span>)</span><br></pre></td></tr></table></figure><h2 id="10-图片"><a href="#10-图片" class="headerlink" title="10. 图片"></a>10. 图片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">RUNOOB 图标</span>](<span class="link">https://www.runoob.com/images/logo.png</span>)</span><br></pre></td></tr></table></figure><h2 id="11-表格"><a href="#11-表格" class="headerlink" title="11. 表格"></a>11. 表格</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 表头   | 表头   |</span><br><span class="line">| ------ | ------ |</span><br><span class="line">| 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><h2 id="12-水平线"><a href="#12-水平线" class="headerlink" title="12. 水平线"></a>12. 水平线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="13-数学公式"><a href="#13-数学公式" class="headerlink" title="13. 数学公式"></a>13. 数学公式</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;<span class="emphasis">_1 \times \mathbf&#123;V&#125;_</span>2 =  \begin&#123;vmatrix&#125;</span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h2 id="14-流程图"><a href="#14-流程图" class="headerlink" title="14. 流程图"></a>14. 流程图</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">graph LR</span></span><br><span class="line"><span class="code">A[方形] --&gt;B(圆角)</span></span><br><span class="line"><span class="code">    B --&gt; C&#123;条件a&#125;</span></span><br><span class="line"><span class="code">    C --&gt;|a=1| D[结果1]</span></span><br><span class="line"><span class="code">    C --&gt;|a=2| E[结果2]</span></span><br><span class="line"><span class="code">    F[横向流程图]</span></span><br></pre></td></tr></table></figure><h2 id="15-时序图"><a href="#15-时序图" class="headerlink" title="15. 时序图"></a>15. 时序图</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">sequenceDiagram</span></span><br><span class="line"><span class="code">    participant Alice</span></span><br><span class="line"><span class="code">    participant Bob</span></span><br><span class="line"><span class="code">    Alice-&gt;&gt;John: Hello John, how are you?</span></span><br><span class="line"><span class="code">    loop Healthcheck</span></span><br><span class="line"><span class="code">        John-&gt;&gt;John: Fight against hypochondria</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    Note right of John: Rational thoughts &lt;br/&gt;prevail...</span></span><br><span class="line"><span class="code">    John--&gt;&gt;Alice: Great!</span></span><br><span class="line"><span class="code">    John-&gt;&gt;Bob: How about you?</span></span><br><span class="line"><span class="code">    Bob--&gt;&gt;John: Jolly good!</span></span><br></pre></td></tr></table></figure><h2 id="16-甘特图"><a href="#16-甘特图" class="headerlink" title="16. 甘特图"></a>16. 甘特图</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">gantt</span></span><br><span class="line"><span class="code">    dateFormat  YYYY-MM-DD</span></span><br><span class="line"><span class="code">    title Adding GANTT diagram functionality to mermaid</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    section A section</span></span><br><span class="line"><span class="code">    Completed task            :done,    des1, 2014-01-06,2014-01-08</span></span><br><span class="line"><span class="code">    Active task               :active,  des2, 2014-01-09, 3d</span></span><br><span class="line"><span class="code">    Future task               :         des3, after des2, 5d</span></span><br><span class="line"><span class="code">    Future task2               :         des4, after des3, 5d</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    section Critical tasks</span></span><br><span class="line"><span class="code">    Completed task in the critical line :crit, done, 2014-01-06,24h</span></span><br><span class="line"><span class="code">    Implement parser and jison          :crit, done, after des1, 2d</span></span><br><span class="line"><span class="code">    Create tests for parser             :crit, active, 3d</span></span><br><span class="line"><span class="code">    Future task in critical line        :crit, 5d</span></span><br><span class="line"><span class="code">    Create tests for renderer           :2d</span></span><br><span class="line"><span class="code">    Add to mermaid                        :1d</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    section Documentation</span></span><br><span class="line"><span class="code">    Describe gantt syntax               :active, a1, after des1, 3d</span></span><br><span class="line"><span class="code">    Add gantt diagram to demo page    :after a1  , 20h</span></span><br><span class="line"><span class="code">    Add another diagram to demo page  :doc1, after a1  , 48h </span></span><br></pre></td></tr></table></figure><h2 id="17-序列图"><a href="#17-序列图" class="headerlink" title="17. 序列图"></a>17. 序列图</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">sequenceDiagram</span></span><br><span class="line"><span class="code">    Alice-&gt;&gt;John: Hello John, how are you?</span></span><br><span class="line"><span class="code">    John--&gt;&gt;Alice: Great!</span></span><br></pre></td></tr></table></figure><h2 id="18-类图"><a href="#18-类图" class="headerlink" title="18. 类图"></a>18. 类图</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">classDiagram</span></span><br><span class="line"><span class="code">    Class01 &lt;|-- AveryLongClass : Cool</span></span><br><span class="line"><span class="code">    Class03 *-- Class04</span></span><br><span class="line"><span class="code">    Class05 o-- Class06</span></span><br><span class="line"><span class="code">    Class07 .. Class08</span></span><br><span class="line"><span class="code">    Class09 --&gt; C2 : Where am i?</span></span><br><span class="line"><span class="code">    Class07 : equals()</span></span><br><span class="line"><span class="code">    Class07 : Object[] elementData</span></span><br><span class="line"><span class="code">    Class01 : size()</span></span><br><span class="line"><span class="code">    Class01 : int chimp</span></span><br><span class="line"><span class="code">    Class01 : int gorilla</span></span><br><span class="line"><span class="code">    Class03: int nocturnal</span></span><br><span class="line"><span class="code">    Class05: int i</span></span><br><span class="line"><span class="code">    Class05: int j</span></span><br><span class="line"><span class="code">    Class06: size()</span></span><br><span class="line"><span class="code">    Class06: int chimp</span></span><br><span class="line"><span class="code">    Class06: int gorilla</span></span><br><span class="line"><span class="code">    Class06: int nocturnal</span></span><br><span class="line"><span class="code">    Class07: size()</span></span><br><span class="line"><span class="code">    Class07: int nocturnal</span></span><br><span class="line"><span class="code">    Class09 --&gt; C2: Cool</span></span><br><span class="line"><span class="code">    Class09 --&gt; C3: Cool</span></span><br></pre></td></tr></table></figure><h2 id="19-状态图"><a href="#19-状态图" class="headerlink" title="19. 状态图"></a>19. 状态图</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">stateDiagram</span></span><br><span class="line"><span class="code">    [*] --&gt; Still</span></span><br><span class="line"><span class="code">    Still --&gt; [*]</span></span><br><span class="line"><span class="code">    Still --&gt; Moving</span></span><br><span class="line"><span class="code">    Moving --&gt; Still</span></span><br><span class="line"><span class="code">    Moving --&gt; Crash</span></span><br><span class="line"><span class="code">    Crash --&gt; [*]</span></span><br></pre></td></tr></table></figure><h2 id="20-饼图"><a href="#20-饼图" class="headerlink" title="20. 饼图"></a>20. 饼图</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">pie</span></span><br><span class="line"><span class="code">    title Key elements in Product X</span></span><br><span class="line"><span class="code">    &quot;Calcium&quot; : 42.96</span></span><br><span class="line"><span class="code">    &quot;Potassium&quot; : 50.05</span></span><br><span class="line"><span class="code">    &quot;Magnesium&quot; : 10.01</span></span><br><span class="line"><span class="code">    &quot;Iron&quot; :  5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/20/hello-world/"/>
      <url>/2024/05/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
